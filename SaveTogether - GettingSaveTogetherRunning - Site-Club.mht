From: <Saved by UnMHT>
Subject: =?iso-2022-jp?B?U2F2ZVRvZ2V0aGVyIC0gR2V0dGluZ1NhdmVUb2dldGhlclJ1bm5pbmcgLSBTaXRlLUNsdWI=?=
Date: Thu, Mar 11 2010 10:28:53 GMT+0800
MIME-Version: 1.0
Content-Type: multipart/related;
	boundary="----=_NextPart_000_0000_7AEBEA58.A381E38D";
	type="text/html"

------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://dev.savetogether.org/projects/savetogether/wiki/GettingSaveTogetherRunning

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ht=
tp://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" xml:lang=3D"en"><head>


<title>SaveTogether - GettingSaveTogetherRunning - Site-Club</title>
<meta content=3D"text/html; charset=3Dutf-8" http-equiv=3D"content-type">
<meta content=3D"Redmine" name=3D"description">
<meta content=3D"issue,bug,tracker" name=3D"keywords">
<link type=3D"text/css" rel=3D"stylesheet" media=3D"all" href=3D"/styleshee=
ts/application.css?1255380904"></link>
<script type=3D"text/javascript" src=3D"/javascripts/prototype.js?125538090=
4"></script>
<script type=3D"text/javascript" src=3D"/javascripts/effects.js?1255380904"=
></script>
<script type=3D"text/javascript" src=3D"/javascripts/dragdrop.js?1255380904=
"></script>
<script type=3D"text/javascript" src=3D"/javascripts/controls.js?1255380904=
"></script>
<script type=3D"text/javascript" src=3D"/javascripts/application.js?1255380=
904"></script>
<link type=3D"text/css" rel=3D"stylesheet" media=3D"screen" href=3D"/styles=
heets/jstoolbar.css?1255380904"></link>
<!--[if IE]>
    <style type=3D"text/css">
      * html body{ width: expression( document.documentElement.clientWidth=
 < 900 ? '900px' : '100%' ); }
      body {behavior: url(/stylesheets/csshover.htc?1255380904);}
    </style>
<![endif]-->
  <style type=3D"text/css">
.question { background-color:#FFEBC1; border:2px solid #FDBD3B; margin-bott=
om:12px; padding:0px 4px 8px 4px; }
td.formatted_questions { text-align: left; white-space: normal}
td.formatted_questions ol { margin-top: 0px; margin-bottom: 0px; }
  </style>

<!-- page specific tags -->

  <link type=3D"text/css" rel=3D"stylesheet" media=3D"screen" href=3D"/styl=
esheets/scm.css?1255380904"></link>
<base href=3D"http://dev.savetogether.org/projects/savetogether/wiki/"></ba=
se></head><body>
<div id=3D"wrapper">
<div id=3D"top-menu">
    <div id=3D"account">
        <ul><li><a class=3D"my-account" href=3D"/my/account">My account</a>=
</li>
<li><a class=3D"logout" href=3D"/logout">Sign out</a></li></ul>    </div>
    <div id=3D"loggedas">Logged in as <a href=3D"/account/show/30">eucephei=
</a></div>
    <ul><li><a class=3D"home" href=3D"/">Home</a></li>
<li><a class=3D"my-page" href=3D"/my/page">My page</a></li>
<li><a class=3D"projects" href=3D"/projects">Projects</a></li>
<li><a class=3D"timesheet" href=3D"/timesheet">translation missing: en, tim=
esheet_title</a></li>
<li><a class=3D"help" href=3D"http://www.redmine.org/guide">Help</a></li></=
ul></div>
     =20
<div id=3D"header">
    <div id=3D"quick-search">
        <form method=3D"get" action=3D"/search/index/savetogether">
        <a accesskey=3D"4" href=3D"/search/index/savetogether">Search</a>:
        <input type=3D"text" size=3D"20" name=3D"q" id=3D"q" class=3D"small=
" accesskey=3D"f" value=3D""></input>
        </form>
        <select onchange=3D"if (this.value !=3D &#x27;&#x27;) { window.loca=
tion =3D this.value; }"><option selected=3D"selected">Jump to a project...<=
/option><option disabled=3D"disabled">---</option><option value=3D"/project=
s/savetogether?jump=3Dwiki">SaveTogether</option></select>
    </div>
   =20
    <h1>SaveTogether</h1>
   =20
    <div id=3D"main-menu">
        <ul><li><a class=3D"overview" href=3D"/projects/savetogether">Overv=
iew</a></li>
<li><a class=3D"activity" href=3D"/projects/savetogether/activity">Activity=
</a></li>
<li><a class=3D"roadmap" href=3D"/projects/savetogether/roadmap">Roadmap</a=
></li>
<li><a class=3D"issues" href=3D"/projects/savetogether/issues">Issues</a></=
li>
<li><a class=3D"new-issue" accesskey=3D"7" href=3D"/projects/savetogether/i=
ssues/new">New issue</a></li>
<li><a class=3D"documents" href=3D"/projects/savetogether/documents">Docume=
nts</a></li>
<li><a class=3D"wiki selected" href=3D"/projects/savetogether/wiki">Wiki</a=
></li>
<li><a class=3D"boards" href=3D"/projects/savetogether/boards">Forums</a></=
li>
<li><a class=3D"files" href=3D"/projects/savetogether/files">Files</a></li>
<li><a class=3D"repository" href=3D"/projects/savetogether/repository">Repo=
sitory</a></li></ul>
    </div>
</div>

<div id=3D"main" class=3D"">
    <div id=3D"sidebar">       =20
       =20
  <h3>Wiki</h3>

<a href=3D"/projects/savetogether/wiki">Start page</a><br>
<a href=3D"/projects/savetogether/wiki/Page_index">Index by title</a><br>
<a href=3D"/projects/savetogether/wiki/Date_index">Index by date</a><br>


       =20
    </div>
   =20
    <div id=3D"content">
			=09
        <div class=3D"contextual">

<a class=3D"icon icon-edit" accesskey=3D"e" href=3D"/projects/savetogether/=
wiki/GettingSaveTogetherRunning/edit">Edit</a>
<a onclick=3D"var f =3D document.createElement(&#x27;form&#x27;); f.style.d=
isplay =3D &#x27;none&#x27;; this.parentNode.appendChild(f); f.method =3D=
 &#x27;POST&#x27;; f.action =3D this.href;f.submit();return false;" class=
=3D"icon icon-lock" href=3D"/projects/savetogether/wiki/GettingSaveTogether=
Running/protect?protected=3D1">Lock</a>

<a class=3D"icon icon-move" href=3D"/projects/savetogether/wiki/GettingSave=
TogetherRunning/rename">Rename</a>
<a onclick=3D"if (confirm(&#x27;Are you sure ?&#x27;)) { var f =3D document=
.createElement(&#x27;form&#x27;); f.style.display =3D &#x27;none&#x27;; thi=
s.parentNode.appendChild(f); f.method =3D &#x27;POST&#x27;; f.action =3D th=
is.href;f.submit(); };return false;" class=3D"icon icon-del" href=3D"/proje=
cts/savetogether/wiki/GettingSaveTogetherRunning/destroy">Delete</a>


<a class=3D"icon icon-history" href=3D"/projects/savetogether/wiki/GettingS=
aveTogetherRunning/history">History</a>
</div>





<div class=3D"wiki">
  <p><a class=3D"wiki-page" href=3D"/projects/savetogether/wiki/SaveTogethe=
r">SaveTogether</a>::GettingSaveTogetherRunning</p>


	<ul class=3D"toc"><li class=3D"heading1"><a href=3D"#Platform-Requirements=
">Platform Requirements:</a></li>
<li class=3D"heading1"><a href=3D"#Obtaining-the-code">Obtaining the code</=
a></li>
<li class=3D"heading2"><a href=3D"#Create-your-own-fork">Create your own fo=
rk</a></li>
<li class=3D"heading2"><a href=3D"#Make-sure-you-git-the-submodules-as-well=
">Make sure you &#x27;git&#x27; the submodules as well:</a></li>
<li class=3D"heading1"><a href=3D"#Building-the-SaveTogether-application">B=
uilding the SaveTogether application</a></li>
<li class=3D"heading2"><a href=3D"#Creating-configuration-files">Creating=
 configuration files</a></li>
<li class=3D"heading2"><a href=3D"#Set-environment-variables">Set environme=
nt variables:</a></li>
<li class=3D"heading2"><a href=3D"#Setting-up-the-db-and-testing">Setting=
 up the db and testing</a></li>
<li class=3D"heading2"><a href=3D"#Submitting-your-changes">Submitting your=
 changes</a></li>
</ul>


	<h1 id=3D"Platform-Requirements">Platform Requirements:<a class=3D"wiki-an=
chor" href=3D"#Platform-Requirements">=C2=B6</a></h1>


	<ul>
	<li>Mysql 5.0 (at the point of this writing I was having trouble with 5.1.=
x installations)</li>
		<li>Ruby 1.8.6</li>
		<li>Rails 2.3.2 (although I&#x27;m looking at freezing gems)</li>
		<li>Git 1.6.x (using submodules)
	<ul>
	<li>If you are on CentOS: you will need to hand compile <a href=3D"http://=
www.how-to-linux.com/2009/01/install-git-161-on-centos-52/" class=3D"extern=
al">http://www.how-to-linux.com/2009/01/install-git-161-on-centos-52/</a></=
li>
	</ul>
	</li>
		<li>Required Gems
	<ul>
	<li>activemerchant (1.4.2)</li>
		<li>faker (0.3.1)</li>
		<li>haml (2.0.9)</li>
		<li>hpricot (0.8.1)</li>
		<li>htmlentities (4.0.0)</li>
		<li>money (2.1.3)</li>
		<li>mongrel (1.1.5)</li>
		<li>mongrel_cluster (1.0.5)</li>
		<li>mysql (2.7)</li>
		<li>populator (0.2.5)</li>
		<li>RedCloth (4.1.9)</li>
		<li>rmagick (2.9.1)</li>
		<li>ruport (1.6.1)</li>
		<li>ruport-util (0.14.0)</li>
		<li>acts_as_reportable (1.1.1)</li>
	</ul></li>
	</ul>


If you are deploying via capistrano:
	<ul>
	<li>sudo gem install engineyard-eycap --source=3Dhttp://gems.github.com</l=
i>
	</ul>


	<p>During any task, if you hit something like (using a migrate task for an=
 example):</p>


<pre>syrincella:st dougscott$ rake db:migrate --trace
(in /Users/dougscott/dev/projects/bostelscott/st)
rake aborted!
can&#x27;t activate , already activated hpricot-0.7
</pre>

	<p>what that really means is that you have a version conflict. Check to se=
e the real version dependency in config/environment.rb (look for config.gem=
 statements) and then update the offending gem to the version documented he=
re. AND (please) change this list above to the new version.</p>


	<h1 id=3D"Obtaining-the-code">Obtaining the code<a class=3D"wiki-anchor"=
 href=3D"#Obtaining-the-code">=C2=B6</a></h1>


	<p>We&#x27;re using &#x27;git&#x27; for source control because it&#x27;s=
 very good at branching and merging.  I&#x27;m relatively new to git so use=
 these instructions with some caution.  If you see something that&#x27;s in=
correct please help me out and correct it :)</p>


	<h2 id=3D"Create-your-own-fork">Create your own fork<a class=3D"wiki-ancho=
r" href=3D"#Create-your-own-fork">=C2=B6</a></h2>


	<p>You&#x27;ll need to create a github account in order to create a fork=
 of the following public repository:</p>


	<p><a href=3D"http://github.com/tbostelmann/st" class=3D"external">http://=
github.com/tbostelmann/st</a></p>


	<p>If you&#x27;re unfamiliar with git, github has several help files that=
 should be able to guide you through version control process.</p>


	<h2 id=3D"Make-sure-you-git-the-submodules-as-well">Make sure you &#x27;gi=
t&#x27; the submodules as well:<a class=3D"wiki-anchor" href=3D"#Make-sure-=
you-git-the-submodules-as-well">=C2=B6</a></h2>


	<p>Once you have forked the code and checked out your private branch (or=
 cloned the master branch), you will need to get the submodule code:</p>


<pre>git submodule init
git submodule update
</pre>

	<h1 id=3D"Building-the-SaveTogether-application">Building the SaveTogether=
 application<a class=3D"wiki-anchor" href=3D"#Building-the-SaveTogether-app=
lication">=C2=B6</a></h1>


	<h2 id=3D"Creating-configuration-files">Creating configuration files<a cla=
ss=3D"wiki-anchor" href=3D"#Creating-configuration-files">=C2=B6</a></h2>


	<ul>
	<li>database.yml - copy the database.yml.sample and configure it for your=
 environment</li>
		<li>application.yml - copy the application.yml.sample and configure it fo=
r your environment (there should be instructions in the file itself)</li>
	</ul>


	<h2 id=3D"Set-environment-variables">Set environment variables:<a class=3D=
"wiki-anchor" href=3D"#Set-environment-variables">=C2=B6</a></h2>


	<p>This is what you would configure in your .bashrc if you&#x27;re running=
 ubuntu:</p>


<pre>export SECURE_PROTOCOL=3D&quot;http&quot;=20
export PAYPAL_URL=3D&quot;https://www.sandbox.paypal.com/cgi-bin/webscr&quo=
t;=20
export PAYPAL_ACCOUNT=3D&quot;paypal@savetogether.org&quot;=20
export APP_URL=3D&quot;http://localhost:3000&quot;=20
export PAYPAL_ENV=3Dtest
export SUPPORT_EMAIL=3D&quot;tbostelmann@gmail.com&quot;=20
</pre>

	<p>NOTE: I believe Windows users need to open their System control panel=
 and select &quot;Environment Variables&quot;.</p>


	<h2 id=3D"Setting-up-the-db-and-testing">Setting up the db and testing<a=
 class=3D"wiki-anchor" href=3D"#Setting-up-the-db-and-testing">=C2=B6</a></=
h2>


	<p>This little script does a good job of resetting your environment from=
 scratch. Or, cherry pick what you need:</p>


<pre>#!/bin/sh

echo &quot;cleaning ST db state ...&quot;=20
set -e
set -x

rake db:drop:all
rake db:create:all
rake db:migrate
rake import:organizations ./test/files/import/OrgProfiles.csv
rake import:organizations ./test/files/import/OrgProfiles-Juma.csv
rake import:savers ./test/files/import/SaverProfiles2.csv
rake import:savers ./test/files/import/SaverProfiles_success-stories.csv

echo &quot;done&quot;=20

</pre>

	<p>The -e  causes the script to exit if any command fails</p>


	<h2 id=3D"Submitting-your-changes">Submitting your changes<a class=3D"wiki=
-anchor" href=3D"#Submitting-your-changes">=C2=B6</a></h2>


<pre>Follow the steps here: http://github.com/guides/fork-a-project-and-sub=
mit-your-modifications
The flow is something like this:

#see changed files
  452  git status

#add changed files for commit
  453  git add app/controllers/application.rb app/controllers/base_controll=
er.rb app/views/base/site_index.html.haml config/environments/development.r=
b config/environments/production.rb public/images/howitworks.png app/views/=
users/_fsaver.html.haml=20

#commit changes
  455  git commit -m &#x27;changes to front page to show featured saver&#x2=
7;

#push changes to your fork
  456  git push origin master

#pull in changes from master fork
  457  git pull upstream master

at this point, you can go to your fork on github.com and do a pull request.=
 Instructions here:
http://github.com/guides/pull-requests
</pre>
</div>





<div id=3D"wiki_add_attachment">
<p><a onclick=3D"Element.show(&#x27;add_attachment_form&#x27;); Element.hid=
e(this); Element.scrollTo(&#x27;add_attachment_form&#x27;); return false;"=
 id=3D"attach_files_link" href=3D"/projects/savetogether/wiki/GettingSaveTo=
getherRunning">New file</a></p>
<form style=3D"display: none;" method=3D"post" id=3D"add_attachment_form"=
 enctype=3D"multipart/form-data" action=3D"/wiki/savetogether/GettingSaveTo=
getherRunning/add_attachment">
  <div class=3D"box">
  <p><span id=3D"attachments_fields">
<input type=3D"file" size=3D"30" name=3D"attachments[1][file]"></input><inp=
ut type=3D"text" size=3D"60" name=3D"attachments[1][description]" value=3D"=
"></input>
<em>Optional description</em>
</span>
<br>
<small><a onclick=3D"addFileField(); return false;" href=3D"#">Add another=
 file</a>
(Maximum size: 5 MB)
</small>
</p>
  </div>
<input type=3D"submit" name=3D"commit" value=3D"Add"></input>
<a onclick=3D"Element.hide(&#x27;add_attachment_form&#x27;); Element.show(&=
#x27;attach_files_link&#x27;); return false;" href=3D"/projects/savetogethe=
r/wiki/GettingSaveTogetherRunning">Cancel</a>
</form>
</div>


<p class=3D"other-formats">Also available in:
	<span><a rel=3D"nofollow" class=3D"html" href=3D"/projects/savetogether/wi=
ki/GettingSaveTogetherRunning?format=3Dhtml&amp;version=3D30">HTML</a></spa=
n>
	<span><a rel=3D"nofollow" class=3D"txt" href=3D"/projects/savetogether/wik=
i/GettingSaveTogetherRunning?format=3Dtxt&amp;version=3D30">TXT</a></span>
</p>







       =20
				<div style=3D"clear: both;"></div>
    </div>
</div>

<div style=3D"display: none;" id=3D"ajax-indicator"><span>Loading...</span>=
</div>
=09
<div id=3D"footer">
    Powered by <a href=3D"http://www.redmine.org/">Redmine</a> =C2=A9 2006-=
2009 Jean-Philippe Lang
</div>
</div>

</body></html>
------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://dev.savetogether.org/stylesheets/application.css?1255380904

body { font-family: Verdana, sans-serif; font-size: 12px; color:#484848; ma=
rgin: 0; padding: 0; min-width: 900px; }

h1, h2, h3, h4 { font-family: "Trebuchet MS", Verdana, sans-serif;}
h1 {margin:0; padding:0; font-size: 24px;}
h2, .wiki h1 {font-size: 20px;padding: 2px 10px 1px 0px;margin: 0 0 10px 0;=
 border-bottom: 1px solid #bbbbbb; color: #444;}
h3, .wiki h2 {font-size: 16px;padding: 2px 10px 1px 0px;margin: 0 0 10px 0;=
 border-bottom: 1px solid #bbbbbb; color: #444;}
h4, .wiki h3 {font-size: 13px;padding: 2px 10px 1px 0px;margin-bottom: 5px;=
 border-bottom: 1px dotted #bbbbbb; color: #444;}

/***** Layout *****/
#wrapper {background: white;}

#top-menu {background: #2C4056; color: #fff; height:1.8em; font-size: 0.8em=
; padding: 2px 2px 0px 6px;}
#top-menu ul {margin: 0;  padding: 0;}
#top-menu li {
  float:left;
  list-style-type:none;
  margin: 0px 0px 0px 0px;
  padding: 0px 0px 0px 0px;
  white-space:nowrap;
}
#top-menu a {color: #fff; margin-right: 8px; font-weight: bold;}
#top-menu #loggedas { float: right; margin-right: 0.5em; color: #fff; }

#account {float:right;}

#header {height:5.3em;margin:0;background-color:#507AAA;color:#f8f8f8; padd=
ing: 4px 8px 0px 6px; position:relative;}
#header a {color:#f8f8f8;}
#header h1 a.ancestor { font-size: 80%; }
#quick-search {float:right;}

#main-menu {position: absolute;  bottom: 0px;  left:6px; margin-right: -500=
px;}
#main-menu ul {margin: 0;  padding: 0;}
#main-menu li {
  float:left;
  list-style-type:none;
  margin: 0px 2px 0px 0px;
  padding: 0px 0px 0px 0px;
  white-space:nowrap;
}
#main-menu li a {
  display: block;
  color: #fff;
  text-decoration: none;
  font-weight: bold;
  margin: 0;
  padding: 4px 10px 4px 10px;
}
#main-menu li a:hover {background:#759FCF; color:#fff;}
#main-menu li a.selected, #main-menu li a.selected:hover {background:#fff;=
 color:#555;}

#main {background-color:#EEEEEE;}

#sidebar{ float: right; width: 17%; position: relative; z-index: 9; min-hei=
ght: 600px; padding: 0; margin: 0;}
* html #sidebar{ width: 17%; }
#sidebar h3{ font-size: 14px; margin-top:14px; color: #666;  }
#sidebar hr{ width: 100%; margin: 0 auto; height: 1px; background: #ccc; bo=
rder: 0; }
* html #sidebar hr{ width: 95%; position: relative; left: -6px; color: #ccc=
; }

#content { width: 80%; background-color: #fff; margin: 0px; border-right:=
 1px solid #ddd; padding: 6px 10px 10px 10px; z-index: 10; }
* html #content{ width: 80%; padding-left: 0; margin-top: 0px; padding: 6px=
 10px 10px 10px;}
html>body #content { min-height: 600px; }=20
* html body #content { height: 600px; } /* IE */

#main.nosidebar #sidebar{ display: none; }
#main.nosidebar #content{ width: auto; border-right: 0; }

#footer {clear: both; border-top: 1px solid #bbb; font-size: 0.9em; color:=
 #aaa; padding: 5px; text-align:center; background:#fff;}

#login-form table {margin-top:5em; padding:1em; margin-left: auto; margin-r=
ight: auto; border: 2px solid #FDBF3B; background-color:#FFEBC1; }
#login-form table td {padding: 6px;}
#login-form label {font-weight: bold;}

input#openid_url { background: url(../images/openid-bg.gif) no-repeat; back=
ground-color: #fff; background-position: 0 50%; padding-left: 18px; }

.clear:after{ content: "."; display: block; height: 0; clear: both; visibil=
ity: hidden; }

/***** Links *****/
a, a:link, a:visited{ color: #2A5685; text-decoration: none; }
a:hover, a:active{ color: #c61a1a; text-decoration: underline;}
a img{ border: 0; }

a.issue.closed, a.issue.closed:link, a.issue.closed:visited { text-decorati=
on: line-through; }

/***** Tables *****/
table.list { border: 1px solid #e4e4e4;  border-collapse: collapse; width:=
 100%; margin-bottom: 4px; }
table.list th {  background-color:#EEEEEE; padding: 4px; white-space:nowrap=
; }
table.list td { vertical-align: top; }
table.list td.id { width: 2%; text-align: center;}
table.list td.checkbox { width: 15px; padding: 0px;}
=20
tr.project td.name a { padding-left: 16px; white-space:nowrap; }
tr.project.parent td.name a { background: url('../images/bullet_toggle_minu=
s.png') no-repeat; }

tr.issue { text-align: center; white-space: nowrap; }
tr.issue td.subject, tr.issue td.category, td.assigned_to { white-space: no=
rmal; }
tr.issue td.subject { text-align: left; }
tr.issue td.done_ratio table.progress { margin-left:auto; margin-right: aut=
o;}

tr.entry { border: 1px solid #f8f8f8; }
tr.entry td { white-space: nowrap; }
tr.entry td.filename { width: 30%; }
tr.entry td.size { text-align: right; font-size: 90%; }
tr.entry td.revision, tr.entry td.author { text-align: center; }
tr.entry td.age { text-align: right; }

tr.entry span.expander {background-image: url(../images/bullet_toggle_plus.=
png); padding-left: 8px; margin-left: 0; cursor: pointer;}
tr.entry.open span.expander {background-image: url(../images/bullet_toggle_=
minus.png);}
tr.entry.file td.filename a { margin-left: 16px; }

tr.changeset td.author { text-align: center; width: 15%; }
tr.changeset td.committed_on { text-align: center; width: 15%; }

table.files tr.file td { text-align: center; }
table.files tr.file td.filename { text-align: left; padding-left: 24px; }
table.files tr.file td.digest { font-size: 80%; }

tr.message { height: 2.6em; }
tr.message td.last_message { font-size: 80%; }
tr.message.locked td.subject a { background-image: url(../images/locked.png=
); }
tr.message.sticky td.subject a { background-image: url(../images/sticky.png=
); font-weight: bold; }

tr.user td { width:13%; }
tr.user td.email { width:18%; }
tr.user td { white-space: nowrap; }
tr.user.locked, tr.user.registered { color: #aaa; }
tr.user.locked a, tr.user.registered a { color: #aaa; }

tr.time-entry { text-align: center; white-space: nowrap; }
tr.time-entry td.subject, tr.time-entry td.comments { text-align: left; whi=
te-space: normal; }
td.hours { text-align: right; font-weight: bold; padding-right: 0.5em; }
td.hours .hours-dec { font-size: 0.9em; }

table.plugins td { vertical-align: middle; }
table.plugins td.configure { text-align: right; padding-right: 1em; }
table.plugins span.name { font-weight: bold; display: block; margin-bottom:=
 6px; }
table.plugins span.description { display: block; font-size: 0.9em; }
table.plugins span.url { display: block; font-size: 0.9em; }

table.list tbody tr.group td { padding: 0.8em 0 0.5em 0.3em; font-weight:=
 bold; border-bottom: 1px solid #ccc; }
table.list tbody tr.group span.count { color: #aaa; font-size: 80%; }

table.list tbody tr:hover { background-color:#ffffdd; }
table.list tbody tr.group:hover { background-color:inherit; }
table td {padding:2px;}
table p {margin:0;}
.odd {background-color:#f6f7f8;}
.even {background-color: #fff;}

a.sort { padding-right: 16px; background-position: 100% 50%; background-rep=
eat: no-repeat; }
a.sort.asc  { background-image: url(../images/sort_asc.png); }
a.sort.desc { background-image: url(../images/sort_desc.png); }

.highlight { background-color: #FCFD8D;}
.highlight.token-1 { background-color: #faa;}
.highlight.token-2 { background-color: #afa;}
.highlight.token-3 { background-color: #aaf;}

.box{
padding:6px;
margin-bottom: 10px;
background-color:#f6f6f6;
color:#505050;
line-height:1.5em;
border: 1px solid #e4e4e4;
}

div.square {
 border: 1px solid #999;
 float: left;
 margin: .3em .4em 0 .4em;
 overflow: hidden;
 width: .6em; height: .6em;
}
.contextual {float:right; white-space: nowrap; line-height:1.4em;margin-top=
:5px; padding-left: 10px; font-size:0.9em;}
.contextual input {font-size:0.9em;}
.message .contextual { margin-top: 0; }

.splitcontentleft{float:left; width:49%;}
.splitcontentright{float:right; width:49%;}
form {display: inline;}
input, select {vertical-align: middle; margin-top: 1px; margin-bottom: 1px;}
fieldset {border: 1px solid #e4e4e4; margin:0;}
legend {color: #484848;}
hr { width: 100%; height: 1px; background: #ccc; border: 0;}
blockquote { font-style: italic; border-left: 3px solid #e0e0e0; padding-le=
ft: 0.6em; margin-left: 2.4em;}
blockquote blockquote { margin-left: 0;}
textarea.wiki-edit { width: 99%; }
li p {margin-top: 0;}
div.issue {background:#ffffdd; padding:6px; margin-bottom:6px;border: 1px=
 solid #d7d7d7;}
p.breadcrumb { font-size: 0.9em; margin: 4px 0 4px 0;}
p.subtitle { font-size: 0.9em; margin: -6px 0 12px 0; font-style: italic;=
 }=20
p.footnote { font-size: 0.9em; margin-top: 0px; margin-bottom: 0px; }

#query_form_content { font-size: 0.9em; padding: 4px; background: #f6f6f6;=
 border: 1px solid #e4e4e4; }
#query_form_content fieldset#filters { border-left: 0; border-right: 0; }
#query_form_content p { margin-top: 0.5em; margin-bottom: 0.5em; }

fieldset#filters, fieldset#date-range { padding: 0.7em; margin-bottom: 8px;=
 }
fieldset#filters p { margin: 1.2em 0 0.8em 2px; }
fieldset#filters table { border-collapse: collapse; }
fieldset#filters table td { padding: 0; vertical-align: middle; }
fieldset#filters tr.filter { height: 2em; }
fieldset#filters td.add-filter { text-align: right; vertical-align: top; }
.buttons { font-size: 0.9em; margin-bottom: 1.4em; }

div#issue-changesets {float:right; width:45%; margin-left: 1em; margin-bott=
om: 1em; background: #fff; padding-left: 1em; font-size: 90%;}
div#issue-changesets .changeset { padding: 4px;}
div#issue-changesets .changeset { border-bottom: 1px solid #ddd; }
div#issue-changesets p { margin-top: 0; margin-bottom: 1em;}

div#activity dl, #search-results { margin-left: 2em; }
div#activity dd, #search-results dd { margin-bottom: 1em; padding-left: 18p=
x; font-size: 0.9em; }
div#activity dt, #search-results dt { margin-bottom: 0px; padding-left: 20p=
x; line-height: 18px; background-position: 0 50%; background-repeat: no-rep=
eat; }
div#activity dt.me .time { border-bottom: 1px solid #999; }
div#activity dt .time { color: #777; font-size: 80%; }
div#activity dd .description, #search-results dd .description { font-style:=
 italic; }
div#activity span.project:after, #search-results span.project:after { conte=
nt: " -"; }
div#activity dd span.description, #search-results dd span.description { dis=
play:block; color: #808080; }

#search-results dd { margin-bottom: 1em; padding-left: 20px; margin-left:0p=
x; }

div#search-results-counts {float:right;}
div#search-results-counts ul { margin-top: 0.5em; }
div#search-results-counts  li { list-style-type:none; float: left; margin-l=
eft: 1em; }
 =20
dt.issue { background-image: url(../images/ticket.png); }
dt.issue-edit { background-image: url(../images/ticket_edit.png); }
dt.issue-closed { background-image: url(../images/ticket_checked.png); }
dt.issue-note { background-image: url(../images/ticket_note.png); }
dt.changeset { background-image: url(../images/changeset.png); }
dt.news { background-image: url(../images/news.png); }
dt.message { background-image: url(../images/message.png); }
dt.reply { background-image: url(../images/comments.png); }
dt.wiki-page { background-image: url(../images/wiki_edit.png); }
dt.attachment { background-image: url(../images/attachment.png); }
dt.document { background-image: url(../images/document.png); }
dt.project { background-image: url(../images/projects.png); }

#search-results dt.issue.closed { background-image: url(../images/ticket_ch=
ecked.png); }

div#roadmap fieldset.related-issues { margin-bottom: 1em; }
div#roadmap fieldset.related-issues ul { margin-top: 0.3em; margin-bottom:=
 0.3em; }
div#roadmap .wiki h1:first-child { display: none; }
div#roadmap .wiki h1 { font-size: 120%; }
div#roadmap .wiki h2 { font-size: 110%; }

div#version-summary { float:right; width:380px; margin-left: 16px; margin-b=
ottom: 16px; background-color: #fff; }
div#version-summary fieldset { margin-bottom: 1em; }
div#version-summary .total-hours { text-align: right; }

table#time-report td.hours, table#time-report th.period, table#time-report=
 th.total { text-align: right; padding-right: 0.5em; }
table#time-report tbody tr { font-style: italic; color: #777; }
table#time-report tbody tr.last-level { font-style: normal; color: #555; }
table#time-report tbody tr.total { font-style: normal; font-weight: bold;=
 color: #555; background-color:#EEEEEE; }
table#time-report .hours-dec { font-size: 0.9em; }

form#issue-form .attributes { margin-bottom: 8px; }
form#issue-form .attributes p { padding-top: 1px; padding-bottom: 2px; }
form#issue-form .attributes select { min-width: 30%; }

ul.projects { margin: 0; padding-left: 1em; }
ul.projects.root { margin: 0;  padding: 0; }
ul.projects ul { border-left: 3px solid #e0e0e0; }
ul.projects li { list-style-type:none; }=20
ul.projects li.root { margin-bottom: 1em; }
ul.projects li.child { margin-top: 1em;}
ul.projects div.root a.project { font-family: "Trebuchet MS", Verdana, sans=
-serif; font-weight: bold; font-size: 16px; margin: 0 0 10px 0; }
.my-project { padding-left: 18px; background: url(../images/fav.png) no-rep=
eat 0 50%; }

#tracker_project_ids ul { margin: 0;  padding-left: 1em; }
#tracker_project_ids li { list-style-type:none; }=20

ul.properties {padding:0; font-size: 0.9em; color: #777;}
ul.properties li {list-style-type:none;}
ul.properties li span {font-style:italic;}

.total-hours { font-size: 110%; font-weight: bold; }
.total-hours span.hours-int { font-size: 120%; }

.autoscroll {overflow-x: auto; padding:1px; margin-bottom: 1.2em;}
#user_firstname, #user_lastname, #user_mail, #my_account_form select { widt=
h: 90%; }

.pagination {font-size: 90%}
p.pagination {margin-top:8px;}

/***** Tabular forms ******/
.tabular p{
margin: 0;
padding: 5px 0 8px 0;
padding-left: 180px; /*width of left column containing the label elements*/
height: 1%;
clear:left;
}

html>body .tabular p {overflow:hidden;}

.tabular label{
font-weight: bold;
float: left;
text-align: right;
margin-left: -180px; /*width of left column*/
width: 175px; /*width of labels. Should be smaller than left column to crea=
te some right=20
margin*/
}

.tabular label.floating{
font-weight: normal;
margin-left: 0px;
text-align: left;
width: 270px;
}

input#time_entry_comments { width: 90%;}

#preview fieldset {margin-top: 1em; background: url(../images/draft.png)}

.tabular.settings p{ padding-left: 300px; }
.tabular.settings label{ margin-left: -300px; width: 295px; }

.required {color: #bb0000;}
.summary {font-style: italic;}

#attachments_fields input[type=3Dtext] {margin-left: 8px; }

div.attachments { margin-top: 12px; }
div.attachments p { margin:4px 0 2px 0; }
div.attachments img { vertical-align: middle; }
div.attachments span.author { font-size: 0.9em; color: #888; }

p.other-formats { text-align: right; font-size:0.9em; color: #666; }
.other-formats span + span:before { content: "| "; }

a.atom { background: url(../images/feed.png) no-repeat 1px 50%; padding: 2p=
x 0px 3px 16px; }

/* Project members tab */
div#tab-content-members .splitcontentleft { width: 64% }
div#tab-content-members .splitcontentright { width: 34% }
div#tab-content-members fieldset { padding:1em; margin-bottom: 1em; }
div#tab-content-members fieldset legend { font-weight: bold; }
div#tab-content-members fieldset label { display: block; }
div#tab-content-members fieldset div { max-height: 400px; overflow:auto; }

* html div#tab-content-members fieldset div { height: 450px; }

/***** Flash & error messages ****/
#errorExplanation, div.flash, .nodata, .warning {
    padding: 4px 4px 4px 30px;
    margin-bottom: 12px;
	font-size: 1.1em;
	border: 2px solid;
}

div.flash {margin-top: 8px;}

div.flash.error, #errorExplanation {
    background: url(../images/false.png) 8px 5px no-repeat;
	background-color: #ffe3e3;
	border-color: #dd0000;
	color: #550000;
}

div.flash.notice {
    background: url(../images/true.png) 8px 5px no-repeat;
	background-color: #dfffdf;
	border-color: #9fcf9f;
	color: #005f00;
}

div.flash.warning {
  background: url(../images/warning.png) 8px 5px no-repeat;
	background-color: #FFEBC1;
	border-color: #FDBF3B;
	color: #A6750C;
  text-align: left;
}

.nodata, .warning {
    text-align: center;
	background-color: #FFEBC1;
	border-color: #FDBF3B;
	color: #A6750C;
}

#errorExplanation ul { font-size: 0.9em;}
#errorExplanation h2, #errorExplanation p { display: none; }

/***** Ajax indicator ******/
#ajax-indicator {
position: absolute; /* fixed not supported by IE */
background-color:#eee;
border: 1px solid #bbb;
top:35%;
left:40%;
width:20%;
font-weight:bold;
text-align:center;
padding:0.6em;
z-index:100;
filter:alpha(opacity=3D50);
opacity: 0.5;
}

html>body #ajax-indicator { position: fixed; }

#ajax-indicator span {
background-position: 0% 40%;
background-repeat: no-repeat;
background-image: url(../images/loading.gif);
padding-left: 26px;
vertical-align: bottom;
}

/***** Calendar *****/
table.cal {border-collapse: collapse; width: 100%; margin: 0px 0 6px 0;bord=
er: 1px solid #d7d7d7;}
table.cal thead th {width: 14%;}
table.cal tbody tr {height: 100px;}
table.cal th { background-color:#EEEEEE; padding: 4px; }
table.cal td {border: 1px solid #d7d7d7; vertical-align: top; font-size: 0.=
9em;}
table.cal td p.day-num {font-size: 1.1em; text-align:right;}
table.cal td.odd p.day-num {color: #bbb;}
table.cal td.today {background:#ffffdd;}
table.cal td.today p.day-num {font-weight: bold;}

/***** Tooltips ******/
.tooltip{position:relative;z-index:24;}
.tooltip:hover{z-index:25;color:#000;}
.tooltip span.tip{display: none; text-align:left;}

div.tooltip:hover span.tip{
display:block;
position:absolute;
top:12px; left:24px; width:270px;
border:1px solid #555;
background-color:#fff;
padding: 4px;
font-size: 0.8em;
color:#505050;
}

/***** Progress bar *****/
table.progress {
    border: 1px solid #D7D7D7;
    border-collapse: collapse;
    border-spacing: 0pt;
    empty-cells: show;
    text-align: center;
    float:left;
    margin: 1px 6px 1px 0px;
}

table.progress td { height: 0.9em; }
table.progress td.closed { background: #BAE0BA none repeat scroll 0%; }
table.progress td.done { background: #DEF0DE none repeat scroll 0%; }
table.progress td.open { background: #FFF none repeat scroll 0%; }
p.pourcent {font-size: 80%;}
p.progress-info {clear: left; font-style: italic; font-size: 80%;}

/***** Tabs *****/
#content .tabs {height: 2.6em; border-bottom: 1px solid #bbbbbb; margin-bot=
tom:1.2em; position:relative;}
#content .tabs ul {margin:0; position:absolute; bottom:-2px; padding-left:1=
em;}
#content .tabs>ul { bottom:-1px; } /* others */
#content .tabs ul li {
float:left;
list-style-type:none;
white-space:nowrap;
margin-right:8px;
background:#fff;
}
#content .tabs ul li a{
display:block;
font-size: 0.9em;
text-decoration:none;
line-height:1.3em;
padding:4px 6px 4px 6px;
border: 1px solid #ccc;
border-bottom: 1px solid #bbbbbb;
background-color: #eeeeee;
color:#777;
font-weight:bold;
}

#content .tabs ul li a:hover {
background-color: #ffffdd;
text-decoration:none;
}

#content .tabs ul li a.selected {
background-color: #fff;
border: 1px solid #bbbbbb;
border-bottom: 1px solid #fff;
}

#content .tabs ul li a.selected:hover {
background-color: #fff;
}

/***** Auto-complete *****/
div.autocomplete {
  position:absolute;
  width:250px;
  background-color:white;
  margin:0;
  padding:0;
}
div.autocomplete ul {
  list-style-type:none;
  margin:0;
  padding:0;
}
div.autocomplete ul li.selected { background-color: #ffb;}
div.autocomplete ul li {
  list-style-type:none;
  display:block;
  margin:0;
  padding:2px;
  cursor:pointer;
  font-size: 90%;
  border-bottom: 1px solid #ccc;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
}
div.autocomplete ul li span.informal {
  font-size: 80%;
  color: #aaa;
}

/***** Diff *****/
.diff_out { background: #fcc; }
.diff_in { background: #cfc; }

/***** Wiki *****/
div.wiki table {
    border: 1px solid #505050;
    border-collapse: collapse;
    margin-bottom: 1em;
}

div.wiki table, div.wiki td, div.wiki th {
    border: 1px solid #bbb;
    padding: 4px;
}

div.wiki .external {
    background-position: 0% 60%;
    background-repeat: no-repeat;
    padding-left: 12px;
    background-image: url(../images/external.png);
}

div.wiki a.new {
    color: #b73535;
}

div.wiki pre {
    margin: 1em 1em 1em 1.6em;
    padding: 2px;
    background-color: #fafafa;
    border: 1px solid #dadada;
    width:95%;
    overflow-x: auto;
}

div.wiki ul.toc {
    background-color: #ffffdd;
    border: 1px solid #e4e4e4;
    padding: 4px;
    line-height: 1.2em;
    margin-bottom: 12px;
    margin-right: 12px;
    margin-left: 0;
    display: table
}
* html div.wiki ul.toc { width: 50%; } /* IE6 doesn't autosize div */

div.wiki ul.toc.right { float: right; margin-left: 12px; margin-right: 0;=
 width: auto; }
div.wiki ul.toc.left  { float: left; margin-right: 12px; margin-left: 0; wi=
dth: auto; }
div.wiki ul.toc li { list-style-type:none;}
div.wiki ul.toc li.heading2 { margin-left: 6px; }
div.wiki ul.toc li.heading3 { margin-left: 12px; font-size: 0.8em; }

div.wiki ul.toc a {
    font-size: 0.9em;
    font-weight: normal;
    text-decoration: none;
    color: #606060;
}
div.wiki ul.toc a:hover { color: #c61a1a; text-decoration: underline;}

a.wiki-anchor { display: none; margin-left: 6px; text-decoration: none; }
a.wiki-anchor:hover { color: #aaa !important; text-decoration: none; }
h1:hover a.wiki-anchor, h2:hover a.wiki-anchor, h3:hover a.wiki-anchor { di=
splay: inline; color: #ddd; }

/***** My page layout *****/
.block-receiver {
border:1px dashed #c0c0c0;
margin-bottom: 20px;
padding: 15px 0 15px 0;
}

.mypage-box {
margin:0 0 20px 0;
color:#505050;
line-height:1.5em;
}

.handle {
cursor: move;
}

a.close-icon {
display:block;
margin-top:3px;
overflow:hidden;
width:12px;
height:12px;
background-repeat: no-repeat;
cursor:pointer;
background-image:url('../images/close.png');
}

a.close-icon:hover {
background-image:url('../images/close_hl.png');
}

/***** Gantt chart *****/
.gantt_hdr {
  position:absolute;
  top:0;
  height:16px;
  border-top: 1px solid #c0c0c0;
  border-bottom: 1px solid #c0c0c0;
  border-right: 1px solid #c0c0c0;
  text-align: center;
  overflow: hidden;
}

.task {
  position: absolute;
  height:8px;
  font-size:0.8em;
  color:#888;
  padding:0;
  margin:0;
  line-height:0.8em;
}

.task_late { background:#f66 url(../images/task_late.png); border: 1px soli=
d #f66; }
.task_done { background:#66f url(../images/task_done.png); border: 1px soli=
d #66f; } =20
.task_todo { background:#aaa url(../images/task_todo.png); border: 1px soli=
d #aaa; }
.milestone { background-image:url(../images/milestone.png); background-repe=
at: no-repeat; border: 0; }

/***** Icons *****/
.icon {
background-position: 0% 40%;
background-repeat: no-repeat;
padding-left: 20px;
padding-top: 2px;
padding-bottom: 3px;
}

.icon22 {
background-position: 0% 40%;
background-repeat: no-repeat;
padding-left: 26px;
line-height: 22px;
vertical-align: middle;
}

.icon-add { background-image: url(../images/add.png); }
.icon-edit { background-image: url(../images/edit.png); }
.icon-copy { background-image: url(../images/copy.png); }
.icon-del { background-image: url(../images/delete.png); }
.icon-move { background-image: url(../images/move.png); }
.icon-save { background-image: url(../images/save.png); }
.icon-cancel { background-image: url(../images/cancel.png); }
.icon-folder { background-image: url(../images/folder.png); }
.open .icon-folder { background-image: url(../images/folder_open.png); }
.icon-package { background-image: url(../images/package.png); }
.icon-home { background-image: url(../images/home.png); }
.icon-user { background-image: url(../images/user.png); }
.icon-mypage { background-image: url(../images/user_page.png); }
.icon-admin { background-image: url(../images/admin.png); }
.icon-projects { background-image: url(../images/projects.png); }
.icon-help { background-image: url(../images/help.png); }
.icon-attachment  { background-image: url(../images/attachment.png); }
.icon-index  { background-image: url(../images/index.png); }
.icon-history  { background-image: url(../images/history.png); }
.icon-time  { background-image: url(../images/time.png); }
.icon-time-add  { background-image: url(../images/time_add.png); }
.icon-stats  { background-image: url(../images/stats.png); }
.icon-warning  { background-image: url(../images/warning.png); }
.icon-fav  { background-image: url(../images/fav.png); }
.icon-fav-off  { background-image: url(../images/fav_off.png); }
.icon-reload  { background-image: url(../images/reload.png); }
.icon-lock  { background-image: url(../images/locked.png); }
.icon-unlock  { background-image: url(../images/unlock.png); }
.icon-checked  { background-image: url(../images/true.png); }
.icon-details  { background-image: url(../images/zoom_in.png); }
.icon-report  { background-image: url(../images/report.png); }
.icon-comment  { background-image: url(../images/comment.png); }

.icon-file { background-image: url(../images/files/default.png); }
.icon-file.text-plain { background-image: url(../images/files/text.png); }
.icon-file.text-x-c { background-image: url(../images/files/c.png); }
.icon-file.text-x-csharp { background-image: url(../images/files/csharp.png=
); }
.icon-file.text-x-php { background-image: url(../images/files/php.png); }
.icon-file.text-x-ruby { background-image: url(../images/files/ruby.png);=
 }
.icon-file.text-xml { background-image: url(../images/files/xml.png); }
.icon-file.image-gif { background-image: url(../images/files/image.png); }
.icon-file.image-jpeg { background-image: url(../images/files/image.png);=
 }
.icon-file.image-png { background-image: url(../images/files/image.png); }
.icon-file.image-tiff { background-image: url(../images/files/image.png);=
 }
.icon-file.application-pdf { background-image: url(../images/files/pdf.png)=
; }
.icon-file.application-zip { background-image: url(../images/files/zip.png)=
; }
.icon-file.application-x-gzip { background-image: url(../images/files/zip.p=
ng); }

.icon22-projects { background-image: url(../images/22x22/projects.png); }
.icon22-users { background-image: url(../images/22x22/users.png); }
.icon22-tracker { background-image: url(../images/22x22/tracker.png); }
.icon22-role { background-image: url(../images/22x22/role.png); }
.icon22-workflow { background-image: url(../images/22x22/workflow.png); }
.icon22-options { background-image: url(../images/22x22/options.png); }
.icon22-notifications { background-image: url(../images/22x22/notifications=
.png); }
.icon22-authent { background-image: url(../images/22x22/authent.png); }
.icon22-info { background-image: url(../images/22x22/info.png); }
.icon22-comment { background-image: url(../images/22x22/comment.png); }
.icon22-package { background-image: url(../images/22x22/package.png); }
.icon22-settings { background-image: url(../images/22x22/settings.png); }
.icon22-plugin { background-image: url(../images/22x22/plugin.png); }

img.gravatar {=20
	padding: 2px;
  border: solid 1px #d5d5d5;
  background: #fff;
}

div.issue img.gravatar {
	float: right;
	margin: 0 0 0 1em;
	padding: 5px;
}

div.issue table img.gravatar {
	height: 14px;
	width: 14px;
	padding: 2px;
	float: left;
	margin: 0 0.5em 0 0;
}

#history img.gravatar {
	padding: 3px;
	margin: 0 1.5em 1em 0;
	float: left;
}

td.username img.gravatar {
	float: left;
	margin: 0 1em 0 0;
}

#activity dt img.gravatar {
	float: left;
	margin: 0 1em 1em 0;
}

#activity dt,
.journal {
	clear: left;
}

h2 img { vertical-align:middle; }


/***** Media print specific styles *****/
@media print {
  #top-menu, #header, #main-menu, #sidebar, #footer, .contextual, .other-fo=
rmats { display:none; }
  #main { background: #fff; }
  #content { width: 99%; margin: 0; padding: 0; border: 0; background: #fff=
; overflow: visible !important;}
	#wiki_add_attachment { display:none; }
}

------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: text/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://dev.savetogether.org/javascripts/prototype.js?1255380904

/*  Prototype JavaScript framework, version 1.6.0.3
 *  (c) 2005-2008 Sam Stephenson
 *
 *  Prototype is freely distributable under the terms of an MIT-style licen=
se.
 *  For details, see the Prototype web site: http://www.prototypejs.org/
 *
 *-------------------------------------------------------------------------=
-*/

var Prototype =3D {
  Version: '1.6.0.3',

  Browser: {
    IE:     !!(window.attachEvent &&
      navigator.userAgent.indexOf('Opera') =3D=3D=3D -1),
    Opera:  navigator.userAgent.indexOf('Opera') > -1,
    WebKit: navigator.userAgent.indexOf('AppleWebKit/') > -1,
    Gecko:  navigator.userAgent.indexOf('Gecko') > -1 &&
      navigator.userAgent.indexOf('KHTML') =3D=3D=3D -1,
    MobileSafari: !!navigator.userAgent.match(/Apple.*Mobile.*Safari/)
  },

  BrowserFeatures: {
    XPath: !!document.evaluate,
    SelectorsAPI: !!document.querySelector,
    ElementExtensions: !!window.HTMLElement,
    SpecificElementExtensions:
      document.createElement('div')['__proto__'] &&
      document.createElement('div')['__proto__'] !=3D=3D
        document.createElement('form')['__proto__']
  },

  ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>',
  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,

  emptyFunction: function() { },
  K: function(x) { return x }
};

if (Prototype.Browser.MobileSafari)
  Prototype.BrowserFeatures.SpecificElementExtensions =3D false;


/* Based on Alex Arnell's inheritance implementation. */
var Class =3D {
  create: function() {
    var parent =3D null, properties =3D $A(arguments);
    if (Object.isFunction(properties[0]))
      parent =3D properties.shift();

    function klass() {
      this.initialize.apply(this, arguments);
    }

    Object.extend(klass, Class.Methods);
    klass.superclass =3D parent;
    klass.subclasses =3D [];

    if (parent) {
      var subclass =3D function() { };
      subclass.prototype =3D parent.prototype;
      klass.prototype =3D new subclass;
      parent.subclasses.push(klass);
    }

    for (var i =3D 0; i < properties.length; i++)
      klass.addMethods(properties[i]);

    if (!klass.prototype.initialize)
      klass.prototype.initialize =3D Prototype.emptyFunction;

    klass.prototype.constructor =3D klass;

    return klass;
  }
};

Class.Methods =3D {
  addMethods: function(source) {
    var ancestor   =3D this.superclass && this.superclass.prototype;
    var properties =3D Object.keys(source);

    if (!Object.keys({ toString: true }).length)
      properties.push("toString", "valueOf");

    for (var i =3D 0, length =3D properties.length; i < length; i++) {
      var property =3D properties[i], value =3D source[property];
      if (ancestor && Object.isFunction(value) &&
          value.argumentNames().first() =3D=3D "$super") {
        var method =3D value;
        value =3D (function(m) {
          return function() { return ancestor[m].apply(this, arguments) };
        })(property).wrap(method);

        value.valueOf =3D method.valueOf.bind(method);
        value.toString =3D method.toString.bind(method);
      }
      this.prototype[property] =3D value;
    }

    return this;
  }
};

var Abstract =3D { };

Object.extend =3D function(destination, source) {
  for (var property in source)
    destination[property] =3D source[property];
  return destination;
};

Object.extend(Object, {
  inspect: function(object) {
    try {
      if (Object.isUndefined(object)) return 'undefined';
      if (object =3D=3D=3D null) return 'null';
      return object.inspect ? object.inspect() : String(object);
    } catch (e) {
      if (e instanceof RangeError) return '...';
      throw e;
    }
  },

  toJSON: function(object) {
    var type =3D typeof object;
    switch (type) {
      case 'undefined':
      case 'function':
      case 'unknown': return;
      case 'boolean': return object.toString();
    }

    if (object =3D=3D=3D null) return 'null';
    if (object.toJSON) return object.toJSON();
    if (Object.isElement(object)) return;

    var results =3D [];
    for (var property in object) {
      var value =3D Object.toJSON(object[property]);
      if (!Object.isUndefined(value))
        results.push(property.toJSON() + ': ' + value);
    }

    return '{' + results.join(', ') + '}';
  },

  toQueryString: function(object) {
    return $H(object).toQueryString();
  },

  toHTML: function(object) {
    return object && object.toHTML ? object.toHTML() : String.interpret(obj=
ect);
  },

  keys: function(object) {
    var keys =3D [];
    for (var property in object)
      keys.push(property);
    return keys;
  },

  values: function(object) {
    var values =3D [];
    for (var property in object)
      values.push(object[property]);
    return values;
  },

  clone: function(object) {
    return Object.extend({ }, object);
  },

  isElement: function(object) {
    return !!(object && object.nodeType =3D=3D 1);
  },

  isArray: function(object) {
    return object !=3D null && typeof object =3D=3D "object" &&
      'splice' in object && 'join' in object;
  },

  isHash: function(object) {
    return object instanceof Hash;
  },

  isFunction: function(object) {
    return typeof object =3D=3D "function";
  },

  isString: function(object) {
    return typeof object =3D=3D "string";
  },

  isNumber: function(object) {
    return typeof object =3D=3D "number";
  },

  isUndefined: function(object) {
    return typeof object =3D=3D "undefined";
  }
});

Object.extend(Function.prototype, {
  argumentNames: function() {
    var names =3D this.toString().match(/^[\s\(]*function[^(]*\(([^\)]*)\)/=
)[1]
      .replace(/\s+/g, '').split(',');
    return names.length =3D=3D 1 && !names[0] ? [] : names;
  },

  bind: function() {
    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return th=
is;
    var __method =3D this, args =3D $A(arguments), object =3D args.shift();
    return function() {
      return __method.apply(object, args.concat($A(arguments)));
    }
  },

  bindAsEventListener: function() {
    var __method =3D this, args =3D $A(arguments), object =3D args.shift();
    return function(event) {
      return __method.apply(object, [event || window.event].concat(args));
    }
  },

  curry: function() {
    if (!arguments.length) return this;
    var __method =3D this, args =3D $A(arguments);
    return function() {
      return __method.apply(this, args.concat($A(arguments)));
    }
  },

  delay: function() {
    var __method =3D this, args =3D $A(arguments), timeout =3D args.shift()=
 * 1000;
    return window.setTimeout(function() {
      return __method.apply(__method, args);
    }, timeout);
  },

  defer: function() {
    var args =3D [0.01].concat($A(arguments));
    return this.delay.apply(this, args);
  },

  wrap: function(wrapper) {
    var __method =3D this;
    return function() {
      return wrapper.apply(this, [__method.bind(this)].concat($A(arguments)=
));
    }
  },

  methodize: function() {
    if (this._methodized) return this._methodized;
    var __method =3D this;
    return this._methodized =3D function() {
      return __method.apply(null, [this].concat($A(arguments)));
    };
  }
});

Date.prototype.toJSON =3D function() {
  return '"' + this.getUTCFullYear() + '-' +
    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +
    this.getUTCDate().toPaddedString(2) + 'T' +
    this.getUTCHours().toPaddedString(2) + ':' +
    this.getUTCMinutes().toPaddedString(2) + ':' +
    this.getUTCSeconds().toPaddedString(2) + 'Z"';
};

var Try =3D {
  these: function() {
    var returnValue;

    for (var i =3D 0, length =3D arguments.length; i < length; i++) {
      var lambda =3D arguments[i];
      try {
        returnValue =3D lambda();
        break;
      } catch (e) { }
    }

    return returnValue;
  }
};

RegExp.prototype.match =3D RegExp.prototype.test;

RegExp.escape =3D function(str) {
  return String(str).replace(/([.*+?^=3D!:${}()|[\]\/\\])/g, '\\$1');
};

/*-------------------------------------------------------------------------=
-*/

var PeriodicalExecuter =3D Class.create({
  initialize: function(callback, frequency) {
    this.callback =3D callback;
    this.frequency =3D frequency;
    this.currentlyExecuting =3D false;

    this.registerCallback();
  },

  registerCallback: function() {
    this.timer =3D setInterval(this.onTimerEvent.bind(this), this.frequency=
 * 1000);
  },

  execute: function() {
    this.callback(this);
  },

  stop: function() {
    if (!this.timer) return;
    clearInterval(this.timer);
    this.timer =3D null;
  },

  onTimerEvent: function() {
    if (!this.currentlyExecuting) {
      try {
        this.currentlyExecuting =3D true;
        this.execute();
      } finally {
        this.currentlyExecuting =3D false;
      }
    }
  }
});
Object.extend(String, {
  interpret: function(value) {
    return value =3D=3D null ? '' : String(value);
  },
  specialChar: {
    '\b': '\\b',
    '\t': '\\t',
    '\n': '\\n',
    '\f': '\\f',
    '\r': '\\r',
    '\\': '\\\\'
  }
});

Object.extend(String.prototype, {
  gsub: function(pattern, replacement) {
    var result =3D '', source =3D this, match;
    replacement =3D arguments.callee.prepareReplacement(replacement);

    while (source.length > 0) {
      if (match =3D source.match(pattern)) {
        result +=3D source.slice(0, match.index);
        result +=3D String.interpret(replacement(match));
        source  =3D source.slice(match.index + match[0].length);
      } else {
        result +=3D source, source =3D '';
      }
    }
    return result;
  },

  sub: function(pattern, replacement, count) {
    replacement =3D this.gsub.prepareReplacement(replacement);
    count =3D Object.isUndefined(count) ? 1 : count;

    return this.gsub(pattern, function(match) {
      if (--count < 0) return match[0];
      return replacement(match);
    });
  },

  scan: function(pattern, iterator) {
    this.gsub(pattern, iterator);
    return String(this);
  },

  truncate: function(length, truncation) {
    length =3D length || 30;
    truncation =3D Object.isUndefined(truncation) ? '...' : truncation;
    return this.length > length ?
      this.slice(0, length - truncation.length) + truncation : String(this);
  },

  strip: function() {
    return this.replace(/^\s+/, '').replace(/\s+$/, '');
  },

  stripTags: function() {
    return this.replace(/<\/?[^>]+>/gi, '');
  },

  stripScripts: function() {
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');
  },

  extractScripts: function() {
    var matchAll =3D new RegExp(Prototype.ScriptFragment, 'img');
    var matchOne =3D new RegExp(Prototype.ScriptFragment, 'im');
    return (this.match(matchAll) || []).map(function(scriptTag) {
      return (scriptTag.match(matchOne) || ['', ''])[1];
    });
  },

  evalScripts: function() {
    return this.extractScripts().map(function(script) { return eval(script)=
 });
  },

  escapeHTML: function() {
    var self =3D arguments.callee;
    self.text.data =3D this;
    return self.div.innerHTML;
  },

  unescapeHTML: function() {
    var div =3D new Element('div');
    div.innerHTML =3D this.stripTags();
    return div.childNodes[0] ? (div.childNodes.length > 1 ?
      $A(div.childNodes).inject('', function(memo, node) { return memo+node=
.nodeValue }) :
      div.childNodes[0].nodeValue) : '';
  },

  toQueryParams: function(separator) {
    var match =3D this.strip().match(/([^?#]*)(#.*)?$/);
    if (!match) return { };

    return match[1].split(separator || '&').inject({ }, function(hash, pair=
) {
      if ((pair =3D pair.split('=3D'))[0]) {
        var key =3D decodeURIComponent(pair.shift());
        var value =3D pair.length > 1 ? pair.join('=3D') : pair[0];
        if (value !=3D undefined) value =3D decodeURIComponent(value);

        if (key in hash) {
          if (!Object.isArray(hash[key])) hash[key] =3D [hash[key]];
          hash[key].push(value);
        }
        else hash[key] =3D value;
      }
      return hash;
    });
  },

  toArray: function() {
    return this.split('');
  },

  succ: function() {
    return this.slice(0, this.length - 1) +
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);
  },

  times: function(count) {
    return count < 1 ? '' : new Array(count + 1).join(this);
  },

  camelize: function() {
    var parts =3D this.split('-'), len =3D parts.length;
    if (len =3D=3D 1) return parts[0];

    var camelized =3D this.charAt(0) =3D=3D '-'
      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)
      : parts[0];

    for (var i =3D 1; i < len; i++)
      camelized +=3D parts[i].charAt(0).toUpperCase() + parts[i].substring(=
1);

    return camelized;
  },

  capitalize: function() {
    return this.charAt(0).toUpperCase() + this.substring(1).toLowerCase();
  },

  underscore: function() {
    return this.gsub(/::/, '/').gsub(/([A-Z]+)([A-Z][a-z])/,'#{1}_#{2}').gs=
ub(/([a-z\d])([A-Z])/,'#{1}_#{2}').gsub(/-/,'_').toLowerCase();
  },

  dasherize: function() {
    return this.gsub(/_/,'-');
  },

  inspect: function(useDoubleQuotes) {
    var escapedString =3D this.gsub(/[\x00-\x1f\\]/, function(match) {
      var character =3D String.specialChar[match[0]];
      return character ? character : '\\u00' + match[0].charCodeAt().toPadd=
edString(2, 16);
    });
    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') +=
 '"';
    return "'" + escapedString.replace(/'/g, '\\\'') + "'";
  },

  toJSON: function() {
    return this.inspect(true);
  },

  unfilterJSON: function(filter) {
    return this.sub(filter || Prototype.JSONFilter, '#{1}');
  },

  isJSON: function() {
    var str =3D this;
    if (str.blank()) return false;
    str =3D this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');
    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);
  },

  evalJSON: function(sanitize) {
    var json =3D this.unfilterJSON();
    try {
      if (!sanitize || json.isJSON()) return eval('(' + json + ')');
    } catch (e) { }
    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());
  },

  include: function(pattern) {
    return this.indexOf(pattern) > -1;
  },

  startsWith: function(pattern) {
    return this.indexOf(pattern) =3D=3D=3D 0;
  },

  endsWith: function(pattern) {
    var d =3D this.length - pattern.length;
    return d >=3D 0 && this.lastIndexOf(pattern) =3D=3D=3D d;
  },

  empty: function() {
    return this =3D=3D '';
  },

  blank: function() {
    return /^\s*$/.test(this);
  },

  interpolate: function(object, pattern) {
    return new Template(this, pattern).evaluate(object);
  }
});

if (Prototype.Browser.WebKit || Prototype.Browser.IE) Object.extend(String.=
prototype, {
  escapeHTML: function() {
    return this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&g=
t;');
  },
  unescapeHTML: function() {
    return this.stripTags().replace(/&amp;/g,'&').replace(/&lt;/g,'<').repl=
ace(/&gt;/g,'>');
  }
});

String.prototype.gsub.prepareReplacement =3D function(replacement) {
  if (Object.isFunction(replacement)) return replacement;
  var template =3D new Template(replacement);
  return function(match) { return template.evaluate(match) };
};

String.prototype.parseQuery =3D String.prototype.toQueryParams;

Object.extend(String.prototype.escapeHTML, {
  div:  document.createElement('div'),
  text: document.createTextNode('')
});

String.prototype.escapeHTML.div.appendChild(String.prototype.escapeHTML.tex=
t);

var Template =3D Class.create({
  initialize: function(template, pattern) {
    this.template =3D template.toString();
    this.pattern =3D pattern || Template.Pattern;
  },

  evaluate: function(object) {
    if (Object.isFunction(object.toTemplateReplacements))
      object =3D object.toTemplateReplacements();

    return this.template.gsub(this.pattern, function(match) {
      if (object =3D=3D null) return '';

      var before =3D match[1] || '';
      if (before =3D=3D '\\') return match[2];

      var ctx =3D object, expr =3D match[3];
      var pattern =3D /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;
      match =3D pattern.exec(expr);
      if (match =3D=3D null) return before;

      while (match !=3D null) {
        var comp =3D match[1].startsWith('[') ? match[2].gsub('\\\\]', ']')=
 : match[1];
        ctx =3D ctx[comp];
        if (null =3D=3D ctx || '' =3D=3D match[3]) break;
        expr =3D expr.substring('[' =3D=3D match[3] ? match[1].length : mat=
ch[0].length);
        match =3D pattern.exec(expr);
      }

      return before + String.interpret(ctx);
    });
  }
});
Template.Pattern =3D /(^|.|\r|\n)(#\{(.*?)\})/;

var $break =3D { };

var Enumerable =3D {
  each: function(iterator, context) {
    var index =3D 0;
    try {
      this._each(function(value) {
        iterator.call(context, value, index++);
      });
    } catch (e) {
      if (e !=3D $break) throw e;
    }
    return this;
  },

  eachSlice: function(number, iterator, context) {
    var index =3D -number, slices =3D [], array =3D this.toArray();
    if (number < 1) return array;
    while ((index +=3D number) < array.length)
      slices.push(array.slice(index, index+number));
    return slices.collect(iterator, context);
  },

  all: function(iterator, context) {
    iterator =3D iterator || Prototype.K;
    var result =3D true;
    this.each(function(value, index) {
      result =3D result && !!iterator.call(context, value, index);
      if (!result) throw $break;
    });
    return result;
  },

  any: function(iterator, context) {
    iterator =3D iterator || Prototype.K;
    var result =3D false;
    this.each(function(value, index) {
      if (result =3D !!iterator.call(context, value, index))
        throw $break;
    });
    return result;
  },

  collect: function(iterator, context) {
    iterator =3D iterator || Prototype.K;
    var results =3D [];
    this.each(function(value, index) {
      results.push(iterator.call(context, value, index));
    });
    return results;
  },

  detect: function(iterator, context) {
    var result;
    this.each(function(value, index) {
      if (iterator.call(context, value, index)) {
        result =3D value;
        throw $break;
      }
    });
    return result;
  },

  findAll: function(iterator, context) {
    var results =3D [];
    this.each(function(value, index) {
      if (iterator.call(context, value, index))
        results.push(value);
    });
    return results;
  },

  grep: function(filter, iterator, context) {
    iterator =3D iterator || Prototype.K;
    var results =3D [];

    if (Object.isString(filter))
      filter =3D new RegExp(filter);

    this.each(function(value, index) {
      if (filter.match(value))
        results.push(iterator.call(context, value, index));
    });
    return results;
  },

  include: function(object) {
    if (Object.isFunction(this.indexOf))
      if (this.indexOf(object) !=3D -1) return true;

    var found =3D false;
    this.each(function(value) {
      if (value =3D=3D object) {
        found =3D true;
        throw $break;
      }
    });
    return found;
  },

  inGroupsOf: function(number, fillWith) {
    fillWith =3D Object.isUndefined(fillWith) ? null : fillWith;
    return this.eachSlice(number, function(slice) {
      while(slice.length < number) slice.push(fillWith);
      return slice;
    });
  },

  inject: function(memo, iterator, context) {
    this.each(function(value, index) {
      memo =3D iterator.call(context, memo, value, index);
    });
    return memo;
  },

  invoke: function(method) {
    var args =3D $A(arguments).slice(1);
    return this.map(function(value) {
      return value[method].apply(value, args);
    });
  },

  max: function(iterator, context) {
    iterator =3D iterator || Prototype.K;
    var result;
    this.each(function(value, index) {
      value =3D iterator.call(context, value, index);
      if (result =3D=3D null || value >=3D result)
        result =3D value;
    });
    return result;
  },

  min: function(iterator, context) {
    iterator =3D iterator || Prototype.K;
    var result;
    this.each(function(value, index) {
      value =3D iterator.call(context, value, index);
      if (result =3D=3D null || value < result)
        result =3D value;
    });
    return result;
  },

  partition: function(iterator, context) {
    iterator =3D iterator || Prototype.K;
    var trues =3D [], falses =3D [];
    this.each(function(value, index) {
      (iterator.call(context, value, index) ?
        trues : falses).push(value);
    });
    return [trues, falses];
  },

  pluck: function(property) {
    var results =3D [];
    this.each(function(value) {
      results.push(value[property]);
    });
    return results;
  },

  reject: function(iterator, context) {
    var results =3D [];
    this.each(function(value, index) {
      if (!iterator.call(context, value, index))
        results.push(value);
    });
    return results;
  },

  sortBy: function(iterator, context) {
    return this.map(function(value, index) {
      return {
        value: value,
        criteria: iterator.call(context, value, index)
      };
    }).sort(function(left, right) {
      var a =3D left.criteria, b =3D right.criteria;
      return a < b ? -1 : a > b ? 1 : 0;
    }).pluck('value');
  },

  toArray: function() {
    return this.map();
  },

  zip: function() {
    var iterator =3D Prototype.K, args =3D $A(arguments);
    if (Object.isFunction(args.last()))
      iterator =3D args.pop();

    var collections =3D [this].concat(args).map($A);
    return this.map(function(value, index) {
      return iterator(collections.pluck(index));
    });
  },

  size: function() {
    return this.toArray().length;
  },

  inspect: function() {
    return '#<Enumerable:' + this.toArray().inspect() + '>';
  }
};

Object.extend(Enumerable, {
  map:     Enumerable.collect,
  find:    Enumerable.detect,
  select:  Enumerable.findAll,
  filter:  Enumerable.findAll,
  member:  Enumerable.include,
  entries: Enumerable.toArray,
  every:   Enumerable.all,
  some:    Enumerable.any
});
function $A(iterable) {
  if (!iterable) return [];
  if (iterable.toArray) return iterable.toArray();
  var length =3D iterable.length || 0, results =3D new Array(length);
  while (length--) results[length] =3D iterable[length];
  return results;
}

if (Prototype.Browser.WebKit) {
  $A =3D function(iterable) {
    if (!iterable) return [];
    // In Safari, only use the `toArray` method if it's not a NodeList.
    // A NodeList is a function, has an function `item` property, and a num=
eric
    // `length` property. Adapted from Google Doctype.
    if (!(typeof iterable =3D=3D=3D 'function' && typeof iterable.length =
=3D=3D=3D
        'number' && typeof iterable.item =3D=3D=3D 'function') && iterable.=
toArray)
      return iterable.toArray();
    var length =3D iterable.length || 0, results =3D new Array(length);
    while (length--) results[length] =3D iterable[length];
    return results;
  };
}

Array.from =3D $A;

Object.extend(Array.prototype, Enumerable);

if (!Array.prototype._reverse) Array.prototype._reverse =3D Array.prototype=
.reverse;

Object.extend(Array.prototype, {
  _each: function(iterator) {
    for (var i =3D 0, length =3D this.length; i < length; i++)
      iterator(this[i]);
  },

  clear: function() {
    this.length =3D 0;
    return this;
  },

  first: function() {
    return this[0];
  },

  last: function() {
    return this[this.length - 1];
  },

  compact: function() {
    return this.select(function(value) {
      return value !=3D null;
    });
  },

  flatten: function() {
    return this.inject([], function(array, value) {
      return array.concat(Object.isArray(value) ?
        value.flatten() : [value]);
    });
  },

  without: function() {
    var values =3D $A(arguments);
    return this.select(function(value) {
      return !values.include(value);
    });
  },

  reverse: function(inline) {
    return (inline !=3D=3D false ? this : this.toArray())._reverse();
  },

  reduce: function() {
    return this.length > 1 ? this : this[0];
  },

  uniq: function(sorted) {
    return this.inject([], function(array, value, index) {
      if (0 =3D=3D index || (sorted ? array.last() !=3D value : !array.incl=
ude(value)))
        array.push(value);
      return array;
    });
  },

  intersect: function(array) {
    return this.uniq().findAll(function(item) {
      return array.detect(function(value) { return item =3D=3D=3D value });
    });
  },

  clone: function() {
    return [].concat(this);
  },

  size: function() {
    return this.length;
  },

  inspect: function() {
    return '[' + this.map(Object.inspect).join(', ') + ']';
  },

  toJSON: function() {
    var results =3D [];
    this.each(function(object) {
      var value =3D Object.toJSON(object);
      if (!Object.isUndefined(value)) results.push(value);
    });
    return '[' + results.join(', ') + ']';
  }
});

// use native browser JS 1.6 implementation if available
if (Object.isFunction(Array.prototype.forEach))
  Array.prototype._each =3D Array.prototype.forEach;

if (!Array.prototype.indexOf) Array.prototype.indexOf =3D function(item, i)=
 {
  i || (i =3D 0);
  var length =3D this.length;
  if (i < 0) i =3D length + i;
  for (; i < length; i++)
    if (this[i] =3D=3D=3D item) return i;
  return -1;
};

if (!Array.prototype.lastIndexOf) Array.prototype.lastIndexOf =3D function(=
item, i) {
  i =3D isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;
  var n =3D this.slice(0, i).reverse().indexOf(item);
  return (n < 0) ? n : i - n - 1;
};

Array.prototype.toArray =3D Array.prototype.clone;

function $w(string) {
  if (!Object.isString(string)) return [];
  string =3D string.strip();
  return string ? string.split(/\s+/) : [];
}

if (Prototype.Browser.Opera){
  Array.prototype.concat =3D function() {
    var array =3D [];
    for (var i =3D 0, length =3D this.length; i < length; i++) array.push(t=
his[i]);
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {
      if (Object.isArray(arguments[i])) {
        for (var j =3D 0, arrayLength =3D arguments[i].length; j < arrayLen=
gth; j++)
          array.push(arguments[i][j]);
      } else {
        array.push(arguments[i]);
      }
    }
    return array;
  };
}
Object.extend(Number.prototype, {
  toColorPart: function() {
    return this.toPaddedString(2, 16);
  },

  succ: function() {
    return this + 1;
  },

  times: function(iterator, context) {
    $R(0, this, true).each(iterator, context);
    return this;
  },

  toPaddedString: function(length, radix) {
    var string =3D this.toString(radix || 10);
    return '0'.times(length - string.length) + string;
  },

  toJSON: function() {
    return isFinite(this) ? this.toString() : 'null';
  }
});

$w('abs round ceil floor').each(function(method){
  Number.prototype[method] =3D Math[method].methodize();
});
function $H(object) {
  return new Hash(object);
};

var Hash =3D Class.create(Enumerable, (function() {

  function toQueryPair(key, value) {
    if (Object.isUndefined(value)) return key;
    return key + '=3D' + encodeURIComponent(String.interpret(value));
  }

  return {
    initialize: function(object) {
      this._object =3D Object.isHash(object) ? object.toObject() : Object.c=
lone(object);
    },

    _each: function(iterator) {
      for (var key in this._object) {
        var value =3D this._object[key], pair =3D [key, value];
        pair.key =3D key;
        pair.value =3D value;
        iterator(pair);
      }
    },

    set: function(key, value) {
      return this._object[key] =3D value;
    },

    get: function(key) {
      // simulating poorly supported hasOwnProperty
      if (this._object[key] !=3D=3D Object.prototype[key])
        return this._object[key];
    },

    unset: function(key) {
      var value =3D this._object[key];
      delete this._object[key];
      return value;
    },

    toObject: function() {
      return Object.clone(this._object);
    },

    keys: function() {
      return this.pluck('key');
    },

    values: function() {
      return this.pluck('value');
    },

    index: function(value) {
      var match =3D this.detect(function(pair) {
        return pair.value =3D=3D=3D value;
      });
      return match && match.key;
    },

    merge: function(object) {
      return this.clone().update(object);
    },

    update: function(object) {
      return new Hash(object).inject(this, function(result, pair) {
        result.set(pair.key, pair.value);
        return result;
      });
    },

    toQueryString: function() {
      return this.inject([], function(results, pair) {
        var key =3D encodeURIComponent(pair.key), values =3D pair.value;

        if (values && typeof values =3D=3D 'object') {
          if (Object.isArray(values))
            return results.concat(values.map(toQueryPair.curry(key)));
        } else results.push(toQueryPair(key, values));
        return results;
      }).join('&');
    },

    inspect: function() {
      return '#<Hash:{' + this.map(function(pair) {
        return pair.map(Object.inspect).join(': ');
      }).join(', ') + '}>';
    },

    toJSON: function() {
      return Object.toJSON(this.toObject());
    },

    clone: function() {
      return new Hash(this);
    }
  }
})());

Hash.prototype.toTemplateReplacements =3D Hash.prototype.toObject;
Hash.from =3D $H;
var ObjectRange =3D Class.create(Enumerable, {
  initialize: function(start, end, exclusive) {
    this.start =3D start;
    this.end =3D end;
    this.exclusive =3D exclusive;
  },

  _each: function(iterator) {
    var value =3D this.start;
    while (this.include(value)) {
      iterator(value);
      value =3D value.succ();
    }
  },

  include: function(value) {
    if (value < this.start)
      return false;
    if (this.exclusive)
      return value < this.end;
    return value <=3D this.end;
  }
});

var $R =3D function(start, end, exclusive) {
  return new ObjectRange(start, end, exclusive);
};

var Ajax =3D {
  getTransport: function() {
    return Try.these(
      function() {return new XMLHttpRequest()},
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}
    ) || false;
  },

  activeRequestCount: 0
};

Ajax.Responders =3D {
  responders: [],

  _each: function(iterator) {
    this.responders._each(iterator);
  },

  register: function(responder) {
    if (!this.include(responder))
      this.responders.push(responder);
  },

  unregister: function(responder) {
    this.responders =3D this.responders.without(responder);
  },

  dispatch: function(callback, request, transport, json) {
    this.each(function(responder) {
      if (Object.isFunction(responder[callback])) {
        try {
          responder[callback].apply(responder, [request, transport, json]);
        } catch (e) { }
      }
    });
  }
};

Object.extend(Ajax.Responders, Enumerable);

Ajax.Responders.register({
  onCreate:   function() { Ajax.activeRequestCount++ },
  onComplete: function() { Ajax.activeRequestCount-- }
});

Ajax.Base =3D Class.create({
  initialize: function(options) {
    this.options =3D {
      method:       'post',
      asynchronous: true,
      contentType:  'application/x-www-form-urlencoded',
      encoding:     'UTF-8',
      parameters:   '',
      evalJSON:     true,
      evalJS:       true
    };
    Object.extend(this.options, options || { });

    this.options.method =3D this.options.method.toLowerCase();

    if (Object.isString(this.options.parameters))
      this.options.parameters =3D this.options.parameters.toQueryParams();
    else if (Object.isHash(this.options.parameters))
      this.options.parameters =3D this.options.parameters.toObject();
  }
});

Ajax.Request =3D Class.create(Ajax.Base, {
  _complete: false,

  initialize: function($super, url, options) {
    $super(options);
    this.transport =3D Ajax.getTransport();
    this.request(url);
  },

  request: function(url) {
    this.url =3D url;
    this.method =3D this.options.method;
    var params =3D Object.clone(this.options.parameters);

    if (!['get', 'post'].include(this.method)) {
      // simulate other verbs over post
      params['_method'] =3D this.method;
      this.method =3D 'post';
    }

    this.parameters =3D params;

    if (params =3D Object.toQueryString(params)) {
      // when GET, append parameters to URL
      if (this.method =3D=3D 'get')
        this.url +=3D (this.url.include('?') ? '&' : '?') + params;
      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))
        params +=3D '&_=3D';
    }

    try {
      var response =3D new Ajax.Response(this);
      if (this.options.onCreate) this.options.onCreate(response);
      Ajax.Responders.dispatch('onCreate', this, response);

      this.transport.open(this.method.toUpperCase(), this.url,
        this.options.asynchronous);

      if (this.options.asynchronous) this.respondToReadyState.bind(this).de=
fer(1);

      this.transport.onreadystatechange =3D this.onStateChange.bind(this);
      this.setRequestHeaders();

      this.body =3D this.method =3D=3D 'post' ? (this.options.postBody ||=
 params) : null;
      this.transport.send(this.body);

      /* Force Firefox to handle ready state 4 for synchronous requests */
      if (!this.options.asynchronous && this.transport.overrideMimeType)
        this.onStateChange();

    }
    catch (e) {
      this.dispatchException(e);
    }
  },

  onStateChange: function() {
    var readyState =3D this.transport.readyState;
    if (readyState > 1 && !((readyState =3D=3D 4) && this._complete))
      this.respondToReadyState(this.transport.readyState);
  },

  setRequestHeaders: function() {
    var headers =3D {
      'X-Requested-With': 'XMLHttpRequest',
      'X-Prototype-Version': Prototype.Version,
      'Accept': 'text/javascript, text/html, application/xml, text/xml, */*'
    };

    if (this.method =3D=3D 'post') {
      headers['Content-type'] =3D this.options.contentType +
        (this.options.encoding ? '; charset=3D' + this.options.encoding :=
 '');

      /* Force "Connection: close" for older Mozilla browsers to work
       * around a bug where XMLHttpRequest sends an incorrect
       * Content-length header. See Mozilla Bugzilla #246651.
       */
      if (this.transport.overrideMimeType &&
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < 20=
05)
            headers['Connection'] =3D 'close';
    }

    // user-defined headers
    if (typeof this.options.requestHeaders =3D=3D 'object') {
      var extras =3D this.options.requestHeaders;

      if (Object.isFunction(extras.push))
        for (var i =3D 0, length =3D extras.length; i < length; i +=3D 2)
          headers[extras[i]] =3D extras[i+1];
      else
        $H(extras).each(function(pair) { headers[pair.key] =3D pair.value=
 });
    }

    for (var name in headers)
      this.transport.setRequestHeader(name, headers[name]);
  },

  success: function() {
    var status =3D this.getStatus();
    return !status || (status >=3D 200 && status < 300);
  },

  getStatus: function() {
    try {
      return this.transport.status || 0;
    } catch (e) { return 0 }
  },

  respondToReadyState: function(readyState) {
    var state =3D Ajax.Request.Events[readyState], response =3D new Ajax.Re=
sponse(this);

    if (state =3D=3D 'Complete') {
      try {
        this._complete =3D true;
        (this.options['on' + response.status]
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]
         || Prototype.emptyFunction)(response, response.headerJSON);
      } catch (e) {
        this.dispatchException(e);
      }

      var contentType =3D response.getHeader('Content-type');
      if (this.options.evalJS =3D=3D 'force'
          || (this.options.evalJS && this.isSameOrigin() && contentType
          && contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)scr=
ipt(;.*)?\s*$/i)))
        this.evalResponse();
    }

    try {
      (this.options['on' + state] || Prototype.emptyFunction)(response, res=
ponse.headerJSON);
      Ajax.Responders.dispatch('on' + state, this, response, response.heade=
rJSON);
    } catch (e) {
      this.dispatchException(e);
    }

    if (state =3D=3D 'Complete') {
      // avoid memory leak in MSIE: clean up
      this.transport.onreadystatechange =3D Prototype.emptyFunction;
    }
  },

  isSameOrigin: function() {
    var m =3D this.url.match(/^\s*https?:\/\/[^\/]*/);
    return !m || (m[0] =3D=3D '#{protocol}//#{domain}#{port}'.interpolate({
      protocol: location.protocol,
      domain: document.domain,
      port: location.port ? ':' + location.port : ''
    }));
  },

  getHeader: function(name) {
    try {
      return this.transport.getResponseHeader(name) || null;
    } catch (e) { return null }
  },

  evalResponse: function() {
    try {
      return eval((this.transport.responseText || '').unfilterJSON());
    } catch (e) {
      this.dispatchException(e);
    }
  },

  dispatchException: function(exception) {
    (this.options.onException || Prototype.emptyFunction)(this, exception);
    Ajax.Responders.dispatch('onException', this, exception);
  }
});

Ajax.Request.Events =3D
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];

Ajax.Response =3D Class.create({
  initialize: function(request){
    this.request =3D request;
    var transport  =3D this.transport  =3D request.transport,
        readyState =3D this.readyState =3D transport.readyState;

    if((readyState > 2 && !Prototype.Browser.IE) || readyState =3D=3D 4) {
      this.status       =3D this.getStatus();
      this.statusText   =3D this.getStatusText();
      this.responseText =3D String.interpret(transport.responseText);
      this.headerJSON   =3D this._getHeaderJSON();
    }

    if(readyState =3D=3D 4) {
      var xml =3D transport.responseXML;
      this.responseXML  =3D Object.isUndefined(xml) ? null : xml;
      this.responseJSON =3D this._getResponseJSON();
    }
  },

  status:      0,
  statusText: '',

  getStatus: Ajax.Request.prototype.getStatus,

  getStatusText: function() {
    try {
      return this.transport.statusText || '';
    } catch (e) { return '' }
  },

  getHeader: Ajax.Request.prototype.getHeader,

  getAllHeaders: function() {
    try {
      return this.getAllResponseHeaders();
    } catch (e) { return null }
  },

  getResponseHeader: function(name) {
    return this.transport.getResponseHeader(name);
  },

  getAllResponseHeaders: function() {
    return this.transport.getAllResponseHeaders();
  },

  _getHeaderJSON: function() {
    var json =3D this.getHeader('X-JSON');
    if (!json) return null;
    json =3D decodeURIComponent(escape(json));
    try {
      return json.evalJSON(this.request.options.sanitizeJSON ||
        !this.request.isSameOrigin());
    } catch (e) {
      this.request.dispatchException(e);
    }
  },

  _getResponseJSON: function() {
    var options =3D this.request.options;
    if (!options.evalJSON || (options.evalJSON !=3D 'force' &&
      !(this.getHeader('Content-type') || '').include('application/json'))=
 ||
        this.responseText.blank())
          return null;
    try {
      return this.responseText.evalJSON(options.sanitizeJSON ||
        !this.request.isSameOrigin());
    } catch (e) {
      this.request.dispatchException(e);
    }
  }
});

Ajax.Updater =3D Class.create(Ajax.Request, {
  initialize: function($super, container, url, options) {
    this.container =3D {
      success: (container.success || container),
      failure: (container.failure || (container.success ? null : container))
    };

    options =3D Object.clone(options);
    var onComplete =3D options.onComplete;
    options.onComplete =3D (function(response, json) {
      this.updateContent(response.responseText);
      if (Object.isFunction(onComplete)) onComplete(response, json);
    }).bind(this);

    $super(url, options);
  },

  updateContent: function(responseText) {
    var receiver =3D this.container[this.success() ? 'success' : 'failure'],
        options =3D this.options;

    if (!options.evalScripts) responseText =3D responseText.stripScripts();

    if (receiver =3D $(receiver)) {
      if (options.insertion) {
        if (Object.isString(options.insertion)) {
          var insertion =3D { }; insertion[options.insertion] =3D responseT=
ext;
          receiver.insert(insertion);
        }
        else options.insertion(receiver, responseText);
      }
      else receiver.update(responseText);
    }
  }
});

Ajax.PeriodicalUpdater =3D Class.create(Ajax.Base, {
  initialize: function($super, container, url, options) {
    $super(options);
    this.onComplete =3D this.options.onComplete;

    this.frequency =3D (this.options.frequency || 2);
    this.decay =3D (this.options.decay || 1);

    this.updater =3D { };
    this.container =3D container;
    this.url =3D url;

    this.start();
  },

  start: function() {
    this.options.onComplete =3D this.updateComplete.bind(this);
    this.onTimerEvent();
  },

  stop: function() {
    this.updater.options.onComplete =3D undefined;
    clearTimeout(this.timer);
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);
  },

  updateComplete: function(response) {
    if (this.options.decay) {
      this.decay =3D (response.responseText =3D=3D this.lastText ?
        this.decay * this.options.decay : 1);

      this.lastText =3D response.responseText;
    }
    this.timer =3D this.onTimerEvent.bind(this).delay(this.decay * this.fre=
quency);
  },

  onTimerEvent: function() {
    this.updater =3D new Ajax.Updater(this.container, this.url, this.option=
s);
  }
});
function $(element) {
  if (arguments.length > 1) {
    for (var i =3D 0, elements =3D [], length =3D arguments.length; i < len=
gth; i++)
      elements.push($(arguments[i]));
    return elements;
  }
  if (Object.isString(element))
    element =3D document.getElementById(element);
  return Element.extend(element);
}

if (Prototype.BrowserFeatures.XPath) {
  document._getElementsByXPath =3D function(expression, parentElement) {
    var results =3D [];
    var query =3D document.evaluate(expression, $(parentElement) || documen=
t,
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    for (var i =3D 0, length =3D query.snapshotLength; i < length; i++)
      results.push(Element.extend(query.snapshotItem(i)));
    return results;
  };
}

/*-------------------------------------------------------------------------=
-*/

if (!window.Node) var Node =3D { };

if (!Node.ELEMENT_NODE) {
  // DOM level 2 ECMAScript Language Binding
  Object.extend(Node, {
    ELEMENT_NODE: 1,
    ATTRIBUTE_NODE: 2,
    TEXT_NODE: 3,
    CDATA_SECTION_NODE: 4,
    ENTITY_REFERENCE_NODE: 5,
    ENTITY_NODE: 6,
    PROCESSING_INSTRUCTION_NODE: 7,
    COMMENT_NODE: 8,
    DOCUMENT_NODE: 9,
    DOCUMENT_TYPE_NODE: 10,
    DOCUMENT_FRAGMENT_NODE: 11,
    NOTATION_NODE: 12
  });
}

(function() {
  var element =3D this.Element;
  this.Element =3D function(tagName, attributes) {
    attributes =3D attributes || { };
    tagName =3D tagName.toLowerCase();
    var cache =3D Element.cache;
    if (Prototype.Browser.IE && attributes.name) {
      tagName =3D '<' + tagName + ' name=3D"' + attributes.name + '">';
      delete attributes.name;
      return Element.writeAttribute(document.createElement(tagName), attrib=
utes);
    }
    if (!cache[tagName]) cache[tagName] =3D Element.extend(document.createE=
lement(tagName));
    return Element.writeAttribute(cache[tagName].cloneNode(false), attribut=
es);
  };
  Object.extend(this.Element, element || { });
  if (element) this.Element.prototype =3D element.prototype;
}).call(window);

Element.cache =3D { };

Element.Methods =3D {
  visible: function(element) {
    return $(element).style.display !=3D 'none';
  },

  toggle: function(element) {
    element =3D $(element);
    Element[Element.visible(element) ? 'hide' : 'show'](element);
    return element;
  },

  hide: function(element) {
    element =3D $(element);
    element.style.display =3D 'none';
    return element;
  },

  show: function(element) {
    element =3D $(element);
    element.style.display =3D '';
    return element;
  },

  remove: function(element) {
    element =3D $(element);
    element.parentNode.removeChild(element);
    return element;
  },

  update: function(element, content) {
    element =3D $(element);
    if (content && content.toElement) content =3D content.toElement();
    if (Object.isElement(content)) return element.update().insert(content);
    content =3D Object.toHTML(content);
    element.innerHTML =3D content.stripScripts();
    content.evalScripts.bind(content).defer();
    return element;
  },

  replace: function(element, content) {
    element =3D $(element);
    if (content && content.toElement) content =3D content.toElement();
    else if (!Object.isElement(content)) {
      content =3D Object.toHTML(content);
      var range =3D element.ownerDocument.createRange();
      range.selectNode(element);
      content.evalScripts.bind(content).defer();
      content =3D range.createContextualFragment(content.stripScripts());
    }
    element.parentNode.replaceChild(content, element);
    return element;
  },

  insert: function(element, insertions) {
    element =3D $(element);

    if (Object.isString(insertions) || Object.isNumber(insertions) ||
        Object.isElement(insertions) || (insertions && (insertions.toElemen=
t || insertions.toHTML)))
          insertions =3D {bottom:insertions};

    var content, insert, tagName, childNodes;

    for (var position in insertions) {
      content  =3D insertions[position];
      position =3D position.toLowerCase();
      insert =3D Element._insertionTranslations[position];

      if (content && content.toElement) content =3D content.toElement();
      if (Object.isElement(content)) {
        insert(element, content);
        continue;
      }

      content =3D Object.toHTML(content);

      tagName =3D ((position =3D=3D 'before' || position =3D=3D 'after')
        ? element.parentNode : element).tagName.toUpperCase();

      childNodes =3D Element._getContentFromAnonymousElement(tagName, conte=
nt.stripScripts());

      if (position =3D=3D 'top' || position =3D=3D 'after') childNodes.reve=
rse();
      childNodes.each(insert.curry(element));

      content.evalScripts.bind(content).defer();
    }

    return element;
  },

  wrap: function(element, wrapper, attributes) {
    element =3D $(element);
    if (Object.isElement(wrapper))
      $(wrapper).writeAttribute(attributes || { });
    else if (Object.isString(wrapper)) wrapper =3D new Element(wrapper, att=
ributes);
    else wrapper =3D new Element('div', wrapper);
    if (element.parentNode)
      element.parentNode.replaceChild(wrapper, element);
    wrapper.appendChild(element);
    return wrapper;
  },

  inspect: function(element) {
    element =3D $(element);
    var result =3D '<' + element.tagName.toLowerCase();
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {
      var property =3D pair.first(), attribute =3D pair.last();
      var value =3D (element[property] || '').toString();
      if (value) result +=3D ' ' + attribute + '=3D' + value.inspect(true);
    });
    return result + '>';
  },

  recursivelyCollect: function(element, property) {
    element =3D $(element);
    var elements =3D [];
    while (element =3D element[property])
      if (element.nodeType =3D=3D 1)
        elements.push(Element.extend(element));
    return elements;
  },

  ancestors: function(element) {
    return $(element).recursivelyCollect('parentNode');
  },

  descendants: function(element) {
    return $(element).select("*");
  },

  firstDescendant: function(element) {
    element =3D $(element).firstChild;
    while (element && element.nodeType !=3D 1) element =3D element.nextSibl=
ing;
    return $(element);
  },

  immediateDescendants: function(element) {
    if (!(element =3D $(element).firstChild)) return [];
    while (element && element.nodeType !=3D 1) element =3D element.nextSibl=
ing;
    if (element) return [element].concat($(element).nextSiblings());
    return [];
  },

  previousSiblings: function(element) {
    return $(element).recursivelyCollect('previousSibling');
  },

  nextSiblings: function(element) {
    return $(element).recursivelyCollect('nextSibling');
  },

  siblings: function(element) {
    element =3D $(element);
    return element.previousSiblings().reverse().concat(element.nextSiblings=
());
  },

  match: function(element, selector) {
    if (Object.isString(selector))
      selector =3D new Selector(selector);
    return selector.match($(element));
  },

  up: function(element, expression, index) {
    element =3D $(element);
    if (arguments.length =3D=3D 1) return $(element.parentNode);
    var ancestors =3D element.ancestors();
    return Object.isNumber(expression) ? ancestors[expression] :
      Selector.findElement(ancestors, expression, index);
  },

  down: function(element, expression, index) {
    element =3D $(element);
    if (arguments.length =3D=3D 1) return element.firstDescendant();
    return Object.isNumber(expression) ? element.descendants()[expression] :
      Element.select(element, expression)[index || 0];
  },

  previous: function(element, expression, index) {
    element =3D $(element);
    if (arguments.length =3D=3D 1) return $(Selector.handlers.previousEleme=
ntSibling(element));
    var previousSiblings =3D element.previousSiblings();
    return Object.isNumber(expression) ? previousSiblings[expression] :
      Selector.findElement(previousSiblings, expression, index);
  },

  next: function(element, expression, index) {
    element =3D $(element);
    if (arguments.length =3D=3D 1) return $(Selector.handlers.nextElementSi=
bling(element));
    var nextSiblings =3D element.nextSiblings();
    return Object.isNumber(expression) ? nextSiblings[expression] :
      Selector.findElement(nextSiblings, expression, index);
  },

  select: function() {
    var args =3D $A(arguments), element =3D $(args.shift());
    return Selector.findChildElements(element, args);
  },

  adjacent: function() {
    var args =3D $A(arguments), element =3D $(args.shift());
    return Selector.findChildElements(element.parentNode, args).without(ele=
ment);
  },

  identify: function(element) {
    element =3D $(element);
    var id =3D element.readAttribute('id'), self =3D arguments.callee;
    if (id) return id;
    do { id =3D 'anonymous_element_' + self.counter++ } while ($(id));
    element.writeAttribute('id', id);
    return id;
  },

  readAttribute: function(element, name) {
    element =3D $(element);
    if (Prototype.Browser.IE) {
      var t =3D Element._attributeTranslations.read;
      if (t.values[name]) return t.values[name](element, name);
      if (t.names[name]) name =3D t.names[name];
      if (name.include(':')) {
        return (!element.attributes || !element.attributes[name]) ? null :
         element.attributes[name].value;
      }
    }
    return element.getAttribute(name);
  },

  writeAttribute: function(element, name, value) {
    element =3D $(element);
    var attributes =3D { }, t =3D Element._attributeTranslations.write;

    if (typeof name =3D=3D 'object') attributes =3D name;
    else attributes[name] =3D Object.isUndefined(value) ? true : value;

    for (var attr in attributes) {
      name =3D t.names[attr] || attr;
      value =3D attributes[attr];
      if (t.values[attr]) name =3D t.values[attr](element, value);
      if (value =3D=3D=3D false || value =3D=3D=3D null)
        element.removeAttribute(name);
      else if (value =3D=3D=3D true)
        element.setAttribute(name, name);
      else element.setAttribute(name, value);
    }
    return element;
  },

  getHeight: function(element) {
    return $(element).getDimensions().height;
  },

  getWidth: function(element) {
    return $(element).getDimensions().width;
  },

  classNames: function(element) {
    return new Element.ClassNames(element);
  },

  hasClassName: function(element, className) {
    if (!(element =3D $(element))) return;
    var elementClassName =3D element.className;
    return (elementClassName.length > 0 && (elementClassName =3D=3D classNa=
me ||
      new RegExp("(^|\\s)" + className + "(\\s|$)").test(elementClassName))=
);
  },

  addClassName: function(element, className) {
    if (!(element =3D $(element))) return;
    if (!element.hasClassName(className))
      element.className +=3D (element.className ? ' ' : '') + className;
    return element;
  },

  removeClassName: function(element, className) {
    if (!(element =3D $(element))) return;
    element.className =3D element.className.replace(
      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();
    return element;
  },

  toggleClassName: function(element, className) {
    if (!(element =3D $(element))) return;
    return element[element.hasClassName(className) ?
      'removeClassName' : 'addClassName'](className);
  },

  // removes whitespace-only text node children
  cleanWhitespace: function(element) {
    element =3D $(element);
    var node =3D element.firstChild;
    while (node) {
      var nextNode =3D node.nextSibling;
      if (node.nodeType =3D=3D 3 && !/\S/.test(node.nodeValue))
        element.removeChild(node);
      node =3D nextNode;
    }
    return element;
  },

  empty: function(element) {
    return $(element).innerHTML.blank();
  },

  descendantOf: function(element, ancestor) {
    element =3D $(element), ancestor =3D $(ancestor);

    if (element.compareDocumentPosition)
      return (element.compareDocumentPosition(ancestor) & 8) =3D=3D=3D 8;

    if (ancestor.contains)
      return ancestor.contains(element) && ancestor !=3D=3D element;

    while (element =3D element.parentNode)
      if (element =3D=3D ancestor) return true;

    return false;
  },

  scrollTo: function(element) {
    element =3D $(element);
    var pos =3D element.cumulativeOffset();
    window.scrollTo(pos[0], pos[1]);
    return element;
  },

  getStyle: function(element, style) {
    element =3D $(element);
    style =3D style =3D=3D 'float' ? 'cssFloat' : style.camelize();
    var value =3D element.style[style];
    if (!value || value =3D=3D 'auto') {
      var css =3D document.defaultView.getComputedStyle(element, null);
      value =3D css ? css[style] : null;
    }
    if (style =3D=3D 'opacity') return value ? parseFloat(value) : 1.0;
    return value =3D=3D 'auto' ? null : value;
  },

  getOpacity: function(element) {
    return $(element).getStyle('opacity');
  },

  setStyle: function(element, styles) {
    element =3D $(element);
    var elementStyle =3D element.style, match;
    if (Object.isString(styles)) {
      element.style.cssText +=3D ';' + styles;
      return styles.include('opacity') ?
        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : ele=
ment;
    }
    for (var property in styles)
      if (property =3D=3D 'opacity') element.setOpacity(styles[property]);
      else
        elementStyle[(property =3D=3D 'float' || property =3D=3D 'cssFloat'=
) ?
          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : 'styl=
eFloat') :
            property] =3D styles[property];

    return element;
  },

  setOpacity: function(element, value) {
    element =3D $(element);
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? ''=
 :
      (value < 0.00001) ? 0 : value;
    return element;
  },

  getDimensions: function(element) {
    element =3D $(element);
    var display =3D element.getStyle('display');
    if (display !=3D 'none' && display !=3D null) // Safari bug
      return {width: element.offsetWidth, height: element.offsetHeight};

    // All *Width and *Height properties give 0 on elements with display no=
ne,
    // so enable the element temporarily
    var els =3D element.style;
    var originalVisibility =3D els.visibility;
    var originalPosition =3D els.position;
    var originalDisplay =3D els.display;
    els.visibility =3D 'hidden';
    els.position =3D 'absolute';
    els.display =3D 'block';
    var originalWidth =3D element.clientWidth;
    var originalHeight =3D element.clientHeight;
    els.display =3D originalDisplay;
    els.position =3D originalPosition;
    els.visibility =3D originalVisibility;
    return {width: originalWidth, height: originalHeight};
  },

  makePositioned: function(element) {
    element =3D $(element);
    var pos =3D Element.getStyle(element, 'position');
    if (pos =3D=3D 'static' || !pos) {
      element._madePositioned =3D true;
      element.style.position =3D 'relative';
      // Opera returns the offset relative to the positioning context, when=
 an
      // element is position relative but top and left have not been defined
      if (Prototype.Browser.Opera) {
        element.style.top =3D 0;
        element.style.left =3D 0;
      }
    }
    return element;
  },

  undoPositioned: function(element) {
    element =3D $(element);
    if (element._madePositioned) {
      element._madePositioned =3D undefined;
      element.style.position =3D
        element.style.top =3D
        element.style.left =3D
        element.style.bottom =3D
        element.style.right =3D '';
    }
    return element;
  },

  makeClipping: function(element) {
    element =3D $(element);
    if (element._overflow) return element;
    element._overflow =3D Element.getStyle(element, 'overflow') || 'auto';
    if (element._overflow !=3D=3D 'hidden')
      element.style.overflow =3D 'hidden';
    return element;
  },

  undoClipping: function(element) {
    element =3D $(element);
    if (!element._overflow) return element;
    element.style.overflow =3D element._overflow =3D=3D 'auto' ? '' : eleme=
nt._overflow;
    element._overflow =3D null;
    return element;
  },

  cumulativeOffset: function(element) {
    var valueT =3D 0, valueL =3D 0;
    do {
      valueT +=3D element.offsetTop  || 0;
      valueL +=3D element.offsetLeft || 0;
      element =3D element.offsetParent;
    } while (element);
    return Element._returnOffset(valueL, valueT);
  },

  positionedOffset: function(element) {
    var valueT =3D 0, valueL =3D 0;
    do {
      valueT +=3D element.offsetTop  || 0;
      valueL +=3D element.offsetLeft || 0;
      element =3D element.offsetParent;
      if (element) {
        if (element.tagName.toUpperCase() =3D=3D 'BODY') break;
        var p =3D Element.getStyle(element, 'position');
        if (p !=3D=3D 'static') break;
      }
    } while (element);
    return Element._returnOffset(valueL, valueT);
  },

  absolutize: function(element) {
    element =3D $(element);
    if (element.getStyle('position') =3D=3D 'absolute') return element;
    // Position.prepare(); // To be done manually by Scripty when it needs=
 it.

    var offsets =3D element.positionedOffset();
    var top     =3D offsets[1];
    var left    =3D offsets[0];
    var width   =3D element.clientWidth;
    var height  =3D element.clientHeight;

    element._originalLeft   =3D left - parseFloat(element.style.left  || 0);
    element._originalTop    =3D top  - parseFloat(element.style.top || 0);
    element._originalWidth  =3D element.style.width;
    element._originalHeight =3D element.style.height;

    element.style.position =3D 'absolute';
    element.style.top    =3D top + 'px';
    element.style.left   =3D left + 'px';
    element.style.width  =3D width + 'px';
    element.style.height =3D height + 'px';
    return element;
  },

  relativize: function(element) {
    element =3D $(element);
    if (element.getStyle('position') =3D=3D 'relative') return element;
    // Position.prepare(); // To be done manually by Scripty when it needs=
 it.

    element.style.position =3D 'relative';
    var top  =3D parseFloat(element.style.top  || 0) - (element._originalTo=
p || 0);
    var left =3D parseFloat(element.style.left || 0) - (element._originalLe=
ft || 0);

    element.style.top    =3D top + 'px';
    element.style.left   =3D left + 'px';
    element.style.height =3D element._originalHeight;
    element.style.width  =3D element._originalWidth;
    return element;
  },

  cumulativeScrollOffset: function(element) {
    var valueT =3D 0, valueL =3D 0;
    do {
      valueT +=3D element.scrollTop  || 0;
      valueL +=3D element.scrollLeft || 0;
      element =3D element.parentNode;
    } while (element);
    return Element._returnOffset(valueL, valueT);
  },

  getOffsetParent: function(element) {
    if (element.offsetParent) return $(element.offsetParent);
    if (element =3D=3D document.body) return $(element);

    while ((element =3D element.parentNode) && element !=3D document.body)
      if (Element.getStyle(element, 'position') !=3D 'static')
        return $(element);

    return $(document.body);
  },

  viewportOffset: function(forElement) {
    var valueT =3D 0, valueL =3D 0;

    var element =3D forElement;
    do {
      valueT +=3D element.offsetTop  || 0;
      valueL +=3D element.offsetLeft || 0;

      // Safari fix
      if (element.offsetParent =3D=3D document.body &&
        Element.getStyle(element, 'position') =3D=3D 'absolute') break;

    } while (element =3D element.offsetParent);

    element =3D forElement;
    do {
      if (!Prototype.Browser.Opera || (element.tagName && (element.tagName.=
toUpperCase() =3D=3D 'BODY'))) {
        valueT -=3D element.scrollTop  || 0;
        valueL -=3D element.scrollLeft || 0;
      }
    } while (element =3D element.parentNode);

    return Element._returnOffset(valueL, valueT);
  },

  clonePosition: function(element, source) {
    var options =3D Object.extend({
      setLeft:    true,
      setTop:     true,
      setWidth:   true,
      setHeight:  true,
      offsetTop:  0,
      offsetLeft: 0
    }, arguments[2] || { });

    // find page position of source
    source =3D $(source);
    var p =3D source.viewportOffset();

    // find coordinate system to use
    element =3D $(element);
    var delta =3D [0, 0];
    var parent =3D null;
    // delta [0,0] will do fine with position: fixed elements,
    // position:absolute needs offsetParent deltas
    if (Element.getStyle(element, 'position') =3D=3D 'absolute') {
      parent =3D element.getOffsetParent();
      delta =3D parent.viewportOffset();
    }

    // correct by body offsets (fixes Safari)
    if (parent =3D=3D document.body) {
      delta[0] -=3D document.body.offsetLeft;
      delta[1] -=3D document.body.offsetTop;
    }

    // set position
    if (options.setLeft)   element.style.left  =3D (p[0] - delta[0] + optio=
ns.offsetLeft) + 'px';
    if (options.setTop)    element.style.top   =3D (p[1] - delta[1] + optio=
ns.offsetTop) + 'px';
    if (options.setWidth)  element.style.width =3D source.offsetWidth + 'px=
';
    if (options.setHeight) element.style.height =3D source.offsetHeight +=
 'px';
    return element;
  }
};

Element.Methods.identify.counter =3D 1;

Object.extend(Element.Methods, {
  getElementsBySelector: Element.Methods.select,
  childElements: Element.Methods.immediateDescendants
});

Element._attributeTranslations =3D {
  write: {
    names: {
      className: 'class',
      htmlFor:   'for'
    },
    values: { }
  }
};

if (Prototype.Browser.Opera) {
  Element.Methods.getStyle =3D Element.Methods.getStyle.wrap(
    function(proceed, element, style) {
      switch (style) {
        case 'left': case 'top': case 'right': case 'bottom':
          if (proceed(element, 'position') =3D=3D=3D 'static') return null;
        case 'height': case 'width':
          // returns '0px' for hidden elements; we want it to return null
          if (!Element.visible(element)) return null;

          // returns the border-box dimensions rather than the content-box
          // dimensions, so we subtract padding and borders from the value
          var dim =3D parseInt(proceed(element, style), 10);

          if (dim !=3D=3D element['offset' + style.capitalize()])
            return dim + 'px';

          var properties;
          if (style =3D=3D=3D 'height') {
            properties =3D ['border-top-width', 'padding-top',
             'padding-bottom', 'border-bottom-width'];
          }
          else {
            properties =3D ['border-left-width', 'padding-left',
             'padding-right', 'border-right-width'];
          }
          return properties.inject(dim, function(memo, property) {
            var val =3D proceed(element, property);
            return val =3D=3D=3D null ? memo : memo - parseInt(val, 10);
          }) + 'px';
        default: return proceed(element, style);
      }
    }
  );

  Element.Methods.readAttribute =3D Element.Methods.readAttribute.wrap(
    function(proceed, element, attribute) {
      if (attribute =3D=3D=3D 'title') return element.title;
      return proceed(element, attribute);
    }
  );
}

else if (Prototype.Browser.IE) {
  // IE doesn't report offsets correctly for static elements, so we change=
 them
  // to "relative" to get the values, then change them back.
  Element.Methods.getOffsetParent =3D Element.Methods.getOffsetParent.wrap(
    function(proceed, element) {
      element =3D $(element);
      // IE throws an error if element is not in document
      try { element.offsetParent }
      catch(e) { return $(document.body) }
      var position =3D element.getStyle('position');
      if (position !=3D=3D 'static') return proceed(element);
      element.setStyle({ position: 'relative' });
      var value =3D proceed(element);
      element.setStyle({ position: position });
      return value;
    }
  );

  $w('positionedOffset viewportOffset').each(function(method) {
    Element.Methods[method] =3D Element.Methods[method].wrap(
      function(proceed, element) {
        element =3D $(element);
        try { element.offsetParent }
        catch(e) { return Element._returnOffset(0,0) }
        var position =3D element.getStyle('position');
        if (position !=3D=3D 'static') return proceed(element);
        // Trigger hasLayout on the offset parent so that IE6 reports
        // accurate offsetTop and offsetLeft values for position: fixed.
        var offsetParent =3D element.getOffsetParent();
        if (offsetParent && offsetParent.getStyle('position') =3D=3D=3D 'fi=
xed')
          offsetParent.setStyle({ zoom: 1 });
        element.setStyle({ position: 'relative' });
        var value =3D proceed(element);
        element.setStyle({ position: position });
        return value;
      }
    );
  });

  Element.Methods.cumulativeOffset =3D Element.Methods.cumulativeOffset.wra=
p(
    function(proceed, element) {
      try { element.offsetParent }
      catch(e) { return Element._returnOffset(0,0) }
      return proceed(element);
    }
  );

  Element.Methods.getStyle =3D function(element, style) {
    element =3D $(element);
    style =3D (style =3D=3D 'float' || style =3D=3D 'cssFloat') ? 'styleFlo=
at' : style.camelize();
    var value =3D element.style[style];
    if (!value && element.currentStyle) value =3D element.currentStyle[styl=
e];

    if (style =3D=3D 'opacity') {
      if (value =3D (element.getStyle('filter') || '').match(/alpha\(opacit=
y=3D(.*)\)/))
        if (value[1]) return parseFloat(value[1]) / 100;
      return 1.0;
    }

    if (value =3D=3D 'auto') {
      if ((style =3D=3D 'width' || style =3D=3D 'height') && (element.getSt=
yle('display') !=3D 'none'))
        return element['offset' + style.capitalize()] + 'px';
      return null;
    }
    return value;
  };

  Element.Methods.setOpacity =3D function(element, value) {
    function stripAlpha(filter){
      return filter.replace(/alpha\([^\)]*\)/gi,'');
    }
    element =3D $(element);
    var currentStyle =3D element.currentStyle;
    if ((currentStyle && !currentStyle.hasLayout) ||
      (!currentStyle && element.style.zoom =3D=3D 'normal'))
        element.style.zoom =3D 1;

    var filter =3D element.getStyle('filter'), style =3D element.style;
    if (value =3D=3D 1 || value =3D=3D=3D '') {
      (filter =3D stripAlpha(filter)) ?
        style.filter =3D filter : style.removeAttribute('filter');
      return element;
    } else if (value < 0.00001) value =3D 0;
    style.filter =3D stripAlpha(filter) +
      'alpha(opacity=3D' + (value * 100) + ')';
    return element;
  };

  Element._attributeTranslations =3D {
    read: {
      names: {
        'class': 'className',
        'for':   'htmlFor'
      },
      values: {
        _getAttr: function(element, attribute) {
          return element.getAttribute(attribute, 2);
        },
        _getAttrNode: function(element, attribute) {
          var node =3D element.getAttributeNode(attribute);
          return node ? node.value : "";
        },
        _getEv: function(element, attribute) {
          attribute =3D element.getAttribute(attribute);
          return attribute ? attribute.toString().slice(23, -2) : null;
        },
        _flag: function(element, attribute) {
          return $(element).hasAttribute(attribute) ? attribute : null;
        },
        style: function(element) {
          return element.style.cssText.toLowerCase();
        },
        title: function(element) {
          return element.title;
        }
      }
    }
  };

  Element._attributeTranslations.write =3D {
    names: Object.extend({
      cellpadding: 'cellPadding',
      cellspacing: 'cellSpacing'
    }, Element._attributeTranslations.read.names),
    values: {
      checked: function(element, value) {
        element.checked =3D !!value;
      },

      style: function(element, value) {
        element.style.cssText =3D value ? value : '';
      }
    }
  };

  Element._attributeTranslations.has =3D {};

  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +
      'encType maxLength readOnly longDesc frameBorder').each(function(attr=
) {
    Element._attributeTranslations.write.names[attr.toLowerCase()] =3D attr;
    Element._attributeTranslations.has[attr.toLowerCase()] =3D attr;
  });

  (function(v) {
    Object.extend(v, {
      href:        v._getAttr,
      src:         v._getAttr,
      type:        v._getAttr,
      action:      v._getAttrNode,
      disabled:    v._flag,
      checked:     v._flag,
      readonly:    v._flag,
      multiple:    v._flag,
      onload:      v._getEv,
      onunload:    v._getEv,
      onclick:     v._getEv,
      ondblclick:  v._getEv,
      onmousedown: v._getEv,
      onmouseup:   v._getEv,
      onmouseover: v._getEv,
      onmousemove: v._getEv,
      onmouseout:  v._getEv,
      onfocus:     v._getEv,
      onblur:      v._getEv,
      onkeypress:  v._getEv,
      onkeydown:   v._getEv,
      onkeyup:     v._getEv,
      onsubmit:    v._getEv,
      onreset:     v._getEv,
      onselect:    v._getEv,
      onchange:    v._getEv
    });
  })(Element._attributeTranslations.read.values);
}

else if (Prototype.Browser.Gecko && /rv:1\.8\.0/.test(navigator.userAgent))=
 {
  Element.Methods.setOpacity =3D function(element, value) {
    element =3D $(element);
    element.style.opacity =3D (value =3D=3D 1) ? 0.999999 :
      (value =3D=3D=3D '') ? '' : (value < 0.00001) ? 0 : value;
    return element;
  };
}

else if (Prototype.Browser.WebKit) {
  Element.Methods.setOpacity =3D function(element, value) {
    element =3D $(element);
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? ''=
 :
      (value < 0.00001) ? 0 : value;

    if (value =3D=3D 1)
      if(element.tagName.toUpperCase() =3D=3D 'IMG' && element.width) {
        element.width++; element.width--;
      } else try {
        var n =3D document.createTextNode(' ');
        element.appendChild(n);
        element.removeChild(n);
      } catch (e) { }

    return element;
  };

  // Safari returns margins on body which is incorrect if the child is abso=
lutely
  // positioned.  For performance reasons, redefine Element#cumulativeOffse=
t for
  // KHTML/WebKit only.
  Element.Methods.cumulativeOffset =3D function(element) {
    var valueT =3D 0, valueL =3D 0;
    do {
      valueT +=3D element.offsetTop  || 0;
      valueL +=3D element.offsetLeft || 0;
      if (element.offsetParent =3D=3D document.body)
        if (Element.getStyle(element, 'position') =3D=3D 'absolute') break;

      element =3D element.offsetParent;
    } while (element);

    return Element._returnOffset(valueL, valueT);
  };
}

if (Prototype.Browser.IE || Prototype.Browser.Opera) {
  // IE and Opera are missing .innerHTML support for TABLE-related and SELE=
CT elements
  Element.Methods.update =3D function(element, content) {
    element =3D $(element);

    if (content && content.toElement) content =3D content.toElement();
    if (Object.isElement(content)) return element.update().insert(content);

    content =3D Object.toHTML(content);
    var tagName =3D element.tagName.toUpperCase();

    if (tagName in Element._insertionTranslations.tags) {
      $A(element.childNodes).each(function(node) { element.removeChild(node=
) });
      Element._getContentFromAnonymousElement(tagName, content.stripScripts=
())
        .each(function(node) { element.appendChild(node) });
    }
    else element.innerHTML =3D content.stripScripts();

    content.evalScripts.bind(content).defer();
    return element;
  };
}

if ('outerHTML' in document.createElement('div')) {
  Element.Methods.replace =3D function(element, content) {
    element =3D $(element);

    if (content && content.toElement) content =3D content.toElement();
    if (Object.isElement(content)) {
      element.parentNode.replaceChild(content, element);
      return element;
    }

    content =3D Object.toHTML(content);
    var parent =3D element.parentNode, tagName =3D parent.tagName.toUpperCa=
se();

    if (Element._insertionTranslations.tags[tagName]) {
      var nextSibling =3D element.next();
      var fragments =3D Element._getContentFromAnonymousElement(tagName, co=
ntent.stripScripts());
      parent.removeChild(element);
      if (nextSibling)
        fragments.each(function(node) { parent.insertBefore(node, nextSibli=
ng) });
      else
        fragments.each(function(node) { parent.appendChild(node) });
    }
    else element.outerHTML =3D content.stripScripts();

    content.evalScripts.bind(content).defer();
    return element;
  };
}

Element._returnOffset =3D function(l, t) {
  var result =3D [l, t];
  result.left =3D l;
  result.top =3D t;
  return result;
};

Element._getContentFromAnonymousElement =3D function(tagName, html) {
  var div =3D new Element('div'), t =3D Element._insertionTranslations.tags=
[tagName];
  if (t) {
    div.innerHTML =3D t[0] + html + t[1];
    t[2].times(function() { div =3D div.firstChild });
  } else div.innerHTML =3D html;
  return $A(div.childNodes);
};

Element._insertionTranslations =3D {
  before: function(element, node) {
    element.parentNode.insertBefore(node, element);
  },
  top: function(element, node) {
    element.insertBefore(node, element.firstChild);
  },
  bottom: function(element, node) {
    element.appendChild(node);
  },
  after: function(element, node) {
    element.parentNode.insertBefore(node, element.nextSibling);
  },
  tags: {
    TABLE:  ['<table>',                '</table>',                   1],
    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],
    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],
    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],
    SELECT: ['<select>',               '</select>',                  1]
  }
};

(function() {
  Object.extend(this.tags, {
    THEAD: this.tags.TBODY,
    TFOOT: this.tags.TBODY,
    TH:    this.tags.TD
  });
}).call(Element._insertionTranslations);

Element.Methods.Simulated =3D {
  hasAttribute: function(element, attribute) {
    attribute =3D Element._attributeTranslations.has[attribute] || attribut=
e;
    var node =3D $(element).getAttributeNode(attribute);
    return !!(node && node.specified);
  }
};

Element.Methods.ByTag =3D { };

Object.extend(Element, Element.Methods);

if (!Prototype.BrowserFeatures.ElementExtensions &&
    document.createElement('div')['__proto__']) {
  window.HTMLElement =3D { };
  window.HTMLElement.prototype =3D document.createElement('div')['__proto__=
'];
  Prototype.BrowserFeatures.ElementExtensions =3D true;
}

Element.extend =3D (function() {
  if (Prototype.BrowserFeatures.SpecificElementExtensions)
    return Prototype.K;

  var Methods =3D { }, ByTag =3D Element.Methods.ByTag;

  var extend =3D Object.extend(function(element) {
    if (!element || element._extendedByPrototype ||
        element.nodeType !=3D 1 || element =3D=3D window) return element;

    var methods =3D Object.clone(Methods),
      tagName =3D element.tagName.toUpperCase(), property, value;

    // extend methods for specific tags
    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);

    for (property in methods) {
      value =3D methods[property];
      if (Object.isFunction(value) && !(property in element))
        element[property] =3D value.methodize();
    }

    element._extendedByPrototype =3D Prototype.emptyFunction;
    return element;

  }, {
    refresh: function() {
      // extend methods for all tags (Safari doesn't need this)
      if (!Prototype.BrowserFeatures.ElementExtensions) {
        Object.extend(Methods, Element.Methods);
        Object.extend(Methods, Element.Methods.Simulated);
      }
    }
  });

  extend.refresh();
  return extend;
})();

Element.hasAttribute =3D function(element, attribute) {
  if (element.hasAttribute) return element.hasAttribute(attribute);
  return Element.Methods.Simulated.hasAttribute(element, attribute);
};

Element.addMethods =3D function(methods) {
  var F =3D Prototype.BrowserFeatures, T =3D Element.Methods.ByTag;

  if (!methods) {
    Object.extend(Form, Form.Methods);
    Object.extend(Form.Element, Form.Element.Methods);
    Object.extend(Element.Methods.ByTag, {
      "FORM":     Object.clone(Form.Methods),
      "INPUT":    Object.clone(Form.Element.Methods),
      "SELECT":   Object.clone(Form.Element.Methods),
      "TEXTAREA": Object.clone(Form.Element.Methods)
    });
  }

  if (arguments.length =3D=3D 2) {
    var tagName =3D methods;
    methods =3D arguments[1];
  }

  if (!tagName) Object.extend(Element.Methods, methods || { });
  else {
    if (Object.isArray(tagName)) tagName.each(extend);
    else extend(tagName);
  }

  function extend(tagName) {
    tagName =3D tagName.toUpperCase();
    if (!Element.Methods.ByTag[tagName])
      Element.Methods.ByTag[tagName] =3D { };
    Object.extend(Element.Methods.ByTag[tagName], methods);
  }

  function copy(methods, destination, onlyIfAbsent) {
    onlyIfAbsent =3D onlyIfAbsent || false;
    for (var property in methods) {
      var value =3D methods[property];
      if (!Object.isFunction(value)) continue;
      if (!onlyIfAbsent || !(property in destination))
        destination[property] =3D value.methodize();
    }
  }

  function findDOMClass(tagName) {
    var klass;
    var trans =3D {
      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",
      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": "DList",
      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": "Heading",
      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",
      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", "CAPTION":
      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":
      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", "TR=
":
      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":
      "FrameSet", "IFRAME": "IFrame"
    };
    if (trans[tagName]) klass =3D 'HTML' + trans[tagName] + 'Element';
    if (window[klass]) return window[klass];
    klass =3D 'HTML' + tagName + 'Element';
    if (window[klass]) return window[klass];
    klass =3D 'HTML' + tagName.capitalize() + 'Element';
    if (window[klass]) return window[klass];

    window[klass] =3D { };
    window[klass].prototype =3D document.createElement(tagName)['__proto__'=
];
    return window[klass];
  }

  if (F.ElementExtensions) {
    copy(Element.Methods, HTMLElement.prototype);
    copy(Element.Methods.Simulated, HTMLElement.prototype, true);
  }

  if (F.SpecificElementExtensions) {
    for (var tag in Element.Methods.ByTag) {
      var klass =3D findDOMClass(tag);
      if (Object.isUndefined(klass)) continue;
      copy(T[tag], klass.prototype);
    }
  }

  Object.extend(Element, Element.Methods);
  delete Element.ByTag;

  if (Element.extend.refresh) Element.extend.refresh();
  Element.cache =3D { };
};

document.viewport =3D {
  getDimensions: function() {
    var dimensions =3D { }, B =3D Prototype.Browser;
    $w('width height').each(function(d) {
      var D =3D d.capitalize();
      if (B.WebKit && !document.evaluate) {
        // Safari <3.0 needs self.innerWidth/Height
        dimensions[d] =3D self['inner' + D];
      } else if (B.Opera && parseFloat(window.opera.version()) < 9.5) {
        // Opera <9.5 needs document.body.clientWidth/Height
        dimensions[d] =3D document.body['client' + D]
      } else {
        dimensions[d] =3D document.documentElement['client' + D];
      }
    });
    return dimensions;
  },

  getWidth: function() {
    return this.getDimensions().width;
  },

  getHeight: function() {
    return this.getDimensions().height;
  },

  getScrollOffsets: function() {
    return Element._returnOffset(
      window.pageXOffset || document.documentElement.scrollLeft || document=
.body.scrollLeft,
      window.pageYOffset || document.documentElement.scrollTop || document.=
body.scrollTop);
  }
};
/* Portions of the Selector class are derived from Jack Slocum's DomQuery,
 * part of YUI-Ext version 0.40, distributed under the terms of an MIT-style
 * license.  Please see http://www.yui-ext.com/ for more information. */

var Selector =3D Class.create({
  initialize: function(expression) {
    this.expression =3D expression.strip();

    if (this.shouldUseSelectorsAPI()) {
      this.mode =3D 'selectorsAPI';
    } else if (this.shouldUseXPath()) {
      this.mode =3D 'xpath';
      this.compileXPathMatcher();
    } else {
      this.mode =3D "normal";
      this.compileMatcher();
    }

  },

  shouldUseXPath: function() {
    if (!Prototype.BrowserFeatures.XPath) return false;

    var e =3D this.expression;

    // Safari 3 chokes on :*-of-type and :empty
    if (Prototype.Browser.WebKit &&
     (e.include("-of-type") || e.include(":empty")))
      return false;

    // XPath can't do namespaced attributes, nor can it read
    // the "checked" property from DOM nodes
    if ((/(\[[\w-]*?:|:checked)/).test(e))
      return false;

    return true;
  },

  shouldUseSelectorsAPI: function() {
    if (!Prototype.BrowserFeatures.SelectorsAPI) return false;

    if (!Selector._div) Selector._div =3D new Element('div');

    // Make sure the browser treats the selector as valid. Test on an
    // isolated element to minimize cost of this check.
    try {
      Selector._div.querySelector(this.expression);
    } catch(e) {
      return false;
    }

    return true;
  },

  compileMatcher: function() {
    var e =3D this.expression, ps =3D Selector.patterns, h =3D Selector.han=
dlers,
        c =3D Selector.criteria, le, p, m;

    if (Selector._cache[e]) {
      this.matcher =3D Selector._cache[e];
      return;
    }

    this.matcher =3D ["this.matcher =3D function(root) {",
                    "var r =3D root, h =3D Selector.handlers, c =3D false,=
 n;"];

    while (e && le !=3D e && (/\S/).test(e)) {
      le =3D e;
      for (var i in ps) {
        p =3D ps[i];
        if (m =3D e.match(p)) {
          this.matcher.push(Object.isFunction(c[i]) ? c[i](m) :
            new Template(c[i]).evaluate(m));
          e =3D e.replace(m[0], '');
          break;
        }
      }
    }

    this.matcher.push("return h.unique(n);\n}");
    eval(this.matcher.join('\n'));
    Selector._cache[this.expression] =3D this.matcher;
  },

  compileXPathMatcher: function() {
    var e =3D this.expression, ps =3D Selector.patterns,
        x =3D Selector.xpath, le, m;

    if (Selector._cache[e]) {
      this.xpath =3D Selector._cache[e]; return;
    }

    this.matcher =3D ['.//*'];
    while (e && le !=3D e && (/\S/).test(e)) {
      le =3D e;
      for (var i in ps) {
        if (m =3D e.match(ps[i])) {
          this.matcher.push(Object.isFunction(x[i]) ? x[i](m) :
            new Template(x[i]).evaluate(m));
          e =3D e.replace(m[0], '');
          break;
        }
      }
    }

    this.xpath =3D this.matcher.join('');
    Selector._cache[this.expression] =3D this.xpath;
  },

  findElements: function(root) {
    root =3D root || document;
    var e =3D this.expression, results;

    switch (this.mode) {
      case 'selectorsAPI':
        // querySelectorAll queries document-wide, then filters to descenda=
nts
        // of the context element. That's not what we want.
        // Add an explicit context to the selector if necessary.
        if (root !=3D=3D document) {
          var oldId =3D root.id, id =3D $(root).identify();
          e =3D "#" + id + " " + e;
        }

        results =3D $A(root.querySelectorAll(e)).map(Element.extend);
        root.id =3D oldId;

        return results;
      case 'xpath':
        return document._getElementsByXPath(this.xpath, root);
      default:
       return this.matcher(root);
    }
  },

  match: function(element) {
    this.tokens =3D [];

    var e =3D this.expression, ps =3D Selector.patterns, as =3D Selector.as=
sertions;
    var le, p, m;

    while (e && le !=3D=3D e && (/\S/).test(e)) {
      le =3D e;
      for (var i in ps) {
        p =3D ps[i];
        if (m =3D e.match(p)) {
          // use the Selector.assertions methods unless the selector
          // is too complex.
          if (as[i]) {
            this.tokens.push([i, Object.clone(m)]);
            e =3D e.replace(m[0], '');
          } else {
            // reluctantly do a document-wide search
            // and look for a match in the array
            return this.findElements(document).include(element);
          }
        }
      }
    }

    var match =3D true, name, matches;
    for (var i =3D 0, token; token =3D this.tokens[i]; i++) {
      name =3D token[0], matches =3D token[1];
      if (!Selector.assertions[name](element, matches)) {
        match =3D false; break;
      }
    }

    return match;
  },

  toString: function() {
    return this.expression;
  },

  inspect: function() {
    return "#<Selector:" + this.expression.inspect() + ">";
  }
});

Object.extend(Selector, {
  _cache: { },

  xpath: {
    descendant:   "//*",
    child:        "/*",
    adjacent:     "/following-sibling::*[1]",
    laterSibling: '/following-sibling::*',
    tagName:      function(m) {
      if (m[1] =3D=3D '*') return '';
      return "[local-name()=3D'" + m[1].toLowerCase() +
             "' or local-name()=3D'" + m[1].toUpperCase() + "']";
    },
    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",
    id:           "[@id=3D'#{1}']",
    attrPresence: function(m) {
      m[1] =3D m[1].toLowerCase();
      return new Template("[@#{1}]").evaluate(m);
    },
    attr: function(m) {
      m[1] =3D m[1].toLowerCase();
      m[3] =3D m[5] || m[6];
      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);
    },
    pseudo: function(m) {
      var h =3D Selector.xpath.pseudos[m[1]];
      if (!h) return '';
      if (Object.isFunction(h)) return h(m);
      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);
    },
    operators: {
      '=3D':  "[@#{1}=3D'#{3}']",
      '!=3D': "[@#{1}!=3D'#{3}']",
      '^=3D': "[starts-with(@#{1}, '#{3}')]",
      '$=3D': "[substring(@#{1}, (string-length(@#{1}) - string-length('#{3=
}') + 1))=3D'#{3}']",
      '*=3D': "[contains(@#{1}, '#{3}')]",
      '~=3D': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",
      '|=3D': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"
    },
    pseudos: {
      'first-child': '[not(preceding-sibling::*)]',
      'last-child':  '[not(following-sibling::*)]',
      'only-child':  '[not(preceding-sibling::* or following-sibling::*)]',
      'empty':       "[count(*) =3D 0 and (count(text()) =3D 0)]",
      'checked':     "[@checked]",
      'disabled':    "[(@disabled) and (@type!=3D'hidden')]",
      'enabled':     "[not(@disabled) and (@type!=3D'hidden')]",
      'not': function(m) {
        var e =3D m[6], p =3D Selector.patterns,
            x =3D Selector.xpath, le, v;

        var exclusion =3D [];
        while (e && le !=3D e && (/\S/).test(e)) {
          le =3D e;
          for (var i in p) {
            if (m =3D e.match(p[i])) {
              v =3D Object.isFunction(x[i]) ? x[i](m) : new Template(x[i]).=
evaluate(m);
              exclusion.push("(" + v.substring(1, v.length - 1) + ")");
              e =3D e.replace(m[0], '');
              break;
            }
          }
        }
        return "[not(" + exclusion.join(" and ") + ")]";
      },
      'nth-child':      function(m) {
        return Selector.xpath.pseudos.nth("(count(./preceding-sibling::*)=
 + 1) ", m);
      },
      'nth-last-child': function(m) {
        return Selector.xpath.pseudos.nth("(count(./following-sibling::*)=
 + 1) ", m);
      },
      'nth-of-type':    function(m) {
        return Selector.xpath.pseudos.nth("position() ", m);
      },
      'nth-last-of-type': function(m) {
        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", m);
      },
      'first-of-type':  function(m) {
        m[6] =3D "1"; return Selector.xpath.pseudos['nth-of-type'](m);
      },
      'last-of-type':   function(m) {
        m[6] =3D "1"; return Selector.xpath.pseudos['nth-last-of-type'](m);
      },
      'only-of-type':   function(m) {
        var p =3D Selector.xpath.pseudos; return p['first-of-type'](m) + p[=
'last-of-type'](m);
      },
      nth: function(fragment, m) {
        var mm, formula =3D m[6], predicate;
        if (formula =3D=3D 'even') formula =3D '2n+0';
        if (formula =3D=3D 'odd')  formula =3D '2n+1';
        if (mm =3D formula.match(/^(\d+)$/)) // digit only
          return '[' + fragment + "=3D " + mm[1] + ']';
        if (mm =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b
          if (mm[1] =3D=3D "-") mm[1] =3D -1;
          var a =3D mm[1] ? Number(mm[1]) : 1;
          var b =3D mm[2] ? Number(mm[2]) : 0;
          predicate =3D "[((#{fragment} - #{b}) mod #{a} =3D 0) and " +
          "((#{fragment} - #{b}) div #{a} >=3D 0)]";
          return new Template(predicate).evaluate({
            fragment: fragment, a: a, b: b });
        }
      }
    }
  },

  criteria: {
    tagName:      'n =3D h.tagName(n, r, "#{1}", c);      c =3D false;',
    className:    'n =3D h.className(n, r, "#{1}", c);    c =3D false;',
    id:           'n =3D h.id(n, r, "#{1}", c);           c =3D false;',
    attrPresence: 'n =3D h.attrPresence(n, r, "#{1}", c); c =3D false;',
    attr: function(m) {
      m[3] =3D (m[5] || m[6]);
      return new Template('n =3D h.attr(n, r, "#{1}", "#{3}", "#{2}", c);=
 c =3D false;').evaluate(m);
    },
    pseudo: function(m) {
      if (m[6]) m[6] =3D m[6].replace(/"/g, '\\"');
      return new Template('n =3D h.pseudo(n, "#{1}", "#{6}", r, c); c =3D=
 false;').evaluate(m);
    },
    descendant:   'c =3D "descendant";',
    child:        'c =3D "child";',
    adjacent:     'c =3D "adjacent";',
    laterSibling: 'c =3D "laterSibling";'
  },

  patterns: {
    // combinators must be listed first
    // (and descendant needs to be last combinator)
    laterSibling: /^\s*~\s*/,
    child:        /^\s*>\s*/,
    adjacent:     /^\s*\+\s*/,
    descendant:   /^\s/,

    // selectors follow
    tagName:      /^\s*(\*|[\w\-]+)(\b|$)?/,
    id:           /^#([\w\-\*]+)(\b|$)/,
    className:    /^\.([\w\-\*]+)(\b|$)/,
    pseudo:
/^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis)a=
bled|not)(\((.*?)\))?(\b|$|(?=3D\s|[:+~>]))/,
    attrPresence: /^\[((?:[\w]+:)?[\w]+)\]/,
    attr:         /\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=3D)\s*((['"])([^\=
4]*?)\4|([^'"][^\]]*?)))?\]/
  },

  // for Selector.match and Element#match
  assertions: {
    tagName: function(element, matches) {
      return matches[1].toUpperCase() =3D=3D element.tagName.toUpperCase();
    },

    className: function(element, matches) {
      return Element.hasClassName(element, matches[1]);
    },

    id: function(element, matches) {
      return element.id =3D=3D=3D matches[1];
    },

    attrPresence: function(element, matches) {
      return Element.hasAttribute(element, matches[1]);
    },

    attr: function(element, matches) {
      var nodeValue =3D Element.readAttribute(element, matches[1]);
      return nodeValue && Selector.operators[matches[2]](nodeValue, matches=
[5] || matches[6]);
    }
  },

  handlers: {
    // UTILITY FUNCTIONS
    // joins two collections
    concat: function(a, b) {
      for (var i =3D 0, node; node =3D b[i]; i++)
        a.push(node);
      return a;
    },

    // marks an array of nodes for counting
    mark: function(nodes) {
      var _true =3D Prototype.emptyFunction;
      for (var i =3D 0, node; node =3D nodes[i]; i++)
        node._countedByPrototype =3D _true;
      return nodes;
    },

    unmark: function(nodes) {
      for (var i =3D 0, node; node =3D nodes[i]; i++)
        node._countedByPrototype =3D undefined;
      return nodes;
    },

    // mark each child node with its position (for nth calls)
    // "ofType" flag indicates whether we're indexing for nth-of-type
    // rather than nth-child
    index: function(parentNode, reverse, ofType) {
      parentNode._countedByPrototype =3D Prototype.emptyFunction;
      if (reverse) {
        for (var nodes =3D parentNode.childNodes, i =3D nodes.length - 1,=
 j =3D 1; i >=3D 0; i--) {
          var node =3D nodes[i];
          if (node.nodeType =3D=3D 1 && (!ofType || node._countedByPrototyp=
e)) node.nodeIndex =3D j++;
        }
      } else {
        for (var i =3D 0, j =3D 1, nodes =3D parentNode.childNodes; node =
=3D nodes[i]; i++)
          if (node.nodeType =3D=3D 1 && (!ofType || node._countedByPrototyp=
e)) node.nodeIndex =3D j++;
      }
    },

    // filters out duplicates and extends all nodes
    unique: function(nodes) {
      if (nodes.length =3D=3D 0) return nodes;
      var results =3D [], n;
      for (var i =3D 0, l =3D nodes.length; i < l; i++)
        if (!(n =3D nodes[i])._countedByPrototype) {
          n._countedByPrototype =3D Prototype.emptyFunction;
          results.push(Element.extend(n));
        }
      return Selector.handlers.unmark(results);
    },

    // COMBINATOR FUNCTIONS
    descendant: function(nodes) {
      var h =3D Selector.handlers;
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)
        h.concat(results, node.getElementsByTagName('*'));
      return results;
    },

    child: function(nodes) {
      var h =3D Selector.handlers;
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {
        for (var j =3D 0, child; child =3D node.childNodes[j]; j++)
          if (child.nodeType =3D=3D 1 && child.tagName !=3D '!') results.pu=
sh(child);
      }
      return results;
    },

    adjacent: function(nodes) {
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {
        var next =3D this.nextElementSibling(node);
        if (next) results.push(next);
      }
      return results;
    },

    laterSibling: function(nodes) {
      var h =3D Selector.handlers;
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)
        h.concat(results, Element.nextSiblings(node));
      return results;
    },

    nextElementSibling: function(node) {
      while (node =3D node.nextSibling)
        if (node.nodeType =3D=3D 1) return node;
      return null;
    },

    previousElementSibling: function(node) {
      while (node =3D node.previousSibling)
        if (node.nodeType =3D=3D 1) return node;
      return null;
    },

    // TOKEN FUNCTIONS
    tagName: function(nodes, root, tagName, combinator) {
      var uTagName =3D tagName.toUpperCase();
      var results =3D [], h =3D Selector.handlers;
      if (nodes) {
        if (combinator) {
          // fastlane for ordinary descendant combinators
          if (combinator =3D=3D "descendant") {
            for (var i =3D 0, node; node =3D nodes[i]; i++)
              h.concat(results, node.getElementsByTagName(tagName));
            return results;
          } else nodes =3D this[combinator](nodes);
          if (tagName =3D=3D "*") return nodes;
        }
        for (var i =3D 0, node; node =3D nodes[i]; i++)
          if (node.tagName.toUpperCase() =3D=3D=3D uTagName) results.push(n=
ode);
        return results;
      } else return root.getElementsByTagName(tagName);
    },

    id: function(nodes, root, id, combinator) {
      var targetNode =3D $(id), h =3D Selector.handlers;
      if (!targetNode) return [];
      if (!nodes && root =3D=3D document) return [targetNode];
      if (nodes) {
        if (combinator) {
          if (combinator =3D=3D 'child') {
            for (var i =3D 0, node; node =3D nodes[i]; i++)
              if (targetNode.parentNode =3D=3D node) return [targetNode];
          } else if (combinator =3D=3D 'descendant') {
            for (var i =3D 0, node; node =3D nodes[i]; i++)
              if (Element.descendantOf(targetNode, node)) return [targetNod=
e];
          } else if (combinator =3D=3D 'adjacent') {
            for (var i =3D 0, node; node =3D nodes[i]; i++)
              if (Selector.handlers.previousElementSibling(targetNode) =3D=
=3D node)
                return [targetNode];
          } else nodes =3D h[combinator](nodes);
        }
        for (var i =3D 0, node; node =3D nodes[i]; i++)
          if (node =3D=3D targetNode) return [targetNode];
        return [];
      }
      return (targetNode && Element.descendantOf(targetNode, root)) ? [targ=
etNode] : [];
    },

    className: function(nodes, root, className, combinator) {
      if (nodes && combinator) nodes =3D this[combinator](nodes);
      return Selector.handlers.byClassName(nodes, root, className);
    },

    byClassName: function(nodes, root, className) {
      if (!nodes) nodes =3D Selector.handlers.descendant([root]);
      var needle =3D ' ' + className + ' ';
      for (var i =3D 0, results =3D [], node, nodeClassName; node =3D nodes=
[i]; i++) {
        nodeClassName =3D node.className;
        if (nodeClassName.length =3D=3D 0) continue;
        if (nodeClassName =3D=3D className || (' ' + nodeClassName + ' ').i=
nclude(needle))
          results.push(node);
      }
      return results;
    },

    attrPresence: function(nodes, root, attr, combinator) {
      if (!nodes) nodes =3D root.getElementsByTagName("*");
      if (nodes && combinator) nodes =3D this[combinator](nodes);
      var results =3D [];
      for (var i =3D 0, node; node =3D nodes[i]; i++)
        if (Element.hasAttribute(node, attr)) results.push(node);
      return results;
    },

    attr: function(nodes, root, attr, value, operator, combinator) {
      if (!nodes) nodes =3D root.getElementsByTagName("*");
      if (nodes && combinator) nodes =3D this[combinator](nodes);
      var handler =3D Selector.operators[operator], results =3D [];
      for (var i =3D 0, node; node =3D nodes[i]; i++) {
        var nodeValue =3D Element.readAttribute(node, attr);
        if (nodeValue =3D=3D=3D null) continue;
        if (handler(nodeValue, value)) results.push(node);
      }
      return results;
    },

    pseudo: function(nodes, name, value, root, combinator) {
      if (nodes && combinator) nodes =3D this[combinator](nodes);
      if (!nodes) nodes =3D root.getElementsByTagName("*");
      return Selector.pseudos[name](nodes, value, root);
    }
  },

  pseudos: {
    'first-child': function(nodes, value, root) {
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {
        if (Selector.handlers.previousElementSibling(node)) continue;
          results.push(node);
      }
      return results;
    },
    'last-child': function(nodes, value, root) {
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {
        if (Selector.handlers.nextElementSibling(node)) continue;
          results.push(node);
      }
      return results;
    },
    'only-child': function(nodes, value, root) {
      var h =3D Selector.handlers;
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)
        if (!h.previousElementSibling(node) && !h.nextElementSibling(node))
          results.push(node);
      return results;
    },
    'nth-child':        function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, formula, root);
    },
    'nth-last-child':   function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, formula, root, true);
    },
    'nth-of-type':      function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, formula, root, false, true);
    },
    'nth-last-of-type': function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, formula, root, true, true);
    },
    'first-of-type':    function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, "1", root, false, true);
    },
    'last-of-type':     function(nodes, formula, root) {
      return Selector.pseudos.nth(nodes, "1", root, true, true);
    },
    'only-of-type':     function(nodes, formula, root) {
      var p =3D Selector.pseudos;
      return p['last-of-type'](p['first-of-type'](nodes, formula, root), fo=
rmula, root);
    },

    // handles the an+b logic
    getIndices: function(a, b, total) {
      if (a =3D=3D 0) return b > 0 ? [b] : [];
      return $R(1, total).inject([], function(memo, i) {
        if (0 =3D=3D (i - b) % a && (i - b) / a >=3D 0) memo.push(i);
        return memo;
      });
    },

    // handles nth(-last)-child, nth(-last)-of-type, and (first|last)-of-ty=
pe
    nth: function(nodes, formula, root, reverse, ofType) {
      if (nodes.length =3D=3D 0) return [];
      if (formula =3D=3D 'even') formula =3D '2n+0';
      if (formula =3D=3D 'odd')  formula =3D '2n+1';
      var h =3D Selector.handlers, results =3D [], indexed =3D [], m;
      h.mark(nodes);
      for (var i =3D 0, node; node =3D nodes[i]; i++) {
        if (!node.parentNode._countedByPrototype) {
          h.index(node.parentNode, reverse, ofType);
          indexed.push(node.parentNode);
        }
      }
      if (formula.match(/^\d+$/)) { // just a number
        formula =3D Number(formula);
        for (var i =3D 0, node; node =3D nodes[i]; i++)
          if (node.nodeIndex =3D=3D formula) results.push(node);
      } else if (m =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b
        if (m[1] =3D=3D "-") m[1] =3D -1;
        var a =3D m[1] ? Number(m[1]) : 1;
        var b =3D m[2] ? Number(m[2]) : 0;
        var indices =3D Selector.pseudos.getIndices(a, b, nodes.length);
        for (var i =3D 0, node, l =3D indices.length; node =3D nodes[i]; i+=
+) {
          for (var j =3D 0; j < l; j++)
            if (node.nodeIndex =3D=3D indices[j]) results.push(node);
        }
      }
      h.unmark(nodes);
      h.unmark(indexed);
      return results;
    },

    'empty': function(nodes, value, root) {
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {
        // IE treats comments as element nodes
        if (node.tagName =3D=3D '!' || node.firstChild) continue;
        results.push(node);
      }
      return results;
    },

    'not': function(nodes, selector, root) {
      var h =3D Selector.handlers, selectorType, m;
      var exclusions =3D new Selector(selector).findElements(root);
      h.mark(exclusions);
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)
        if (!node._countedByPrototype) results.push(node);
      h.unmark(exclusions);
      return results;
    },

    'enabled': function(nodes, value, root) {
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)
        if (!node.disabled && (!node.type || node.type !=3D=3D 'hidden'))
          results.push(node);
      return results;
    },

    'disabled': function(nodes, value, root) {
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)
        if (node.disabled) results.push(node);
      return results;
    },

    'checked': function(nodes, value, root) {
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)
        if (node.checked) results.push(node);
      return results;
    }
  },

  operators: {
    '=3D':  function(nv, v) { return nv =3D=3D v; },
    '!=3D': function(nv, v) { return nv !=3D v; },
    '^=3D': function(nv, v) { return nv =3D=3D v || nv && nv.startsWith(v);=
 },
    '$=3D': function(nv, v) { return nv =3D=3D v || nv && nv.endsWith(v); },
    '*=3D': function(nv, v) { return nv =3D=3D v || nv && nv.include(v); },
    '$=3D': function(nv, v) { return nv.endsWith(v); },
    '*=3D': function(nv, v) { return nv.include(v); },
    '~=3D': function(nv, v) { return (' ' + nv + ' ').include(' ' + v + '=
 '); },
    '|=3D': function(nv, v) { return ('-' + (nv || "").toUpperCase() +
     '-').include('-' + (v || "").toUpperCase() + '-'); }
  },

  split: function(expression) {
    var expressions =3D [];
    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, function(m)=
 {
      expressions.push(m[1].strip());
    });
    return expressions;
  },

  matchElements: function(elements, expression) {
    var matches =3D $$(expression), h =3D Selector.handlers;
    h.mark(matches);
    for (var i =3D 0, results =3D [], element; element =3D elements[i]; i++)
      if (element._countedByPrototype) results.push(element);
    h.unmark(matches);
    return results;
  },

  findElement: function(elements, expression, index) {
    if (Object.isNumber(expression)) {
      index =3D expression; expression =3D false;
    }
    return Selector.matchElements(elements, expression || '*')[index || 0];
  },

  findChildElements: function(element, expressions) {
    expressions =3D Selector.split(expressions.join(','));
    var results =3D [], h =3D Selector.handlers;
    for (var i =3D 0, l =3D expressions.length, selector; i < l; i++) {
      selector =3D new Selector(expressions[i].strip());
      h.concat(results, selector.findElements(element));
    }
    return (l > 1) ? h.unique(results) : results;
  }
});

if (Prototype.Browser.IE) {
  Object.extend(Selector.handlers, {
    // IE returns comment nodes on getElementsByTagName("*").
    // Filter them out.
    concat: function(a, b) {
      for (var i =3D 0, node; node =3D b[i]; i++)
        if (node.tagName !=3D=3D "!") a.push(node);
      return a;
    },

    // IE improperly serializes _countedByPrototype in (inner|outer)HTML.
    unmark: function(nodes) {
      for (var i =3D 0, node; node =3D nodes[i]; i++)
        node.removeAttribute('_countedByPrototype');
      return nodes;
    }
  });
}

function $$() {
  return Selector.findChildElements(document, $A(arguments));
}
var Form =3D {
  reset: function(form) {
    $(form).reset();
    return form;
  },

  serializeElements: function(elements, options) {
    if (typeof options !=3D 'object') options =3D { hash: !!options };
    else if (Object.isUndefined(options.hash)) options.hash =3D true;
    var key, value, submitted =3D false, submit =3D options.submit;

    var data =3D elements.inject({ }, function(result, element) {
      if (!element.disabled && element.name) {
        key =3D element.name; value =3D $(element).getValue();
        if (value !=3D null && element.type !=3D 'file' && (element.type !=
=3D 'submit' || (!submitted &&
            submit !=3D=3D false && (!submit || key =3D=3D submit) && (subm=
itted =3D true)))) {
          if (key in result) {
            // a key is already present; construct an array of values
            if (!Object.isArray(result[key])) result[key] =3D [result[key]];
            result[key].push(value);
          }
          else result[key] =3D value;
        }
      }
      return result;
    });

    return options.hash ? data : Object.toQueryString(data);
  }
};

Form.Methods =3D {
  serialize: function(form, options) {
    return Form.serializeElements(Form.getElements(form), options);
  },

  getElements: function(form) {
    return $A($(form).getElementsByTagName('*')).inject([],
      function(elements, child) {
        if (Form.Element.Serializers[child.tagName.toLowerCase()])
          elements.push(Element.extend(child));
        return elements;
      }
    );
  },

  getInputs: function(form, typeName, name) {
    form =3D $(form);
    var inputs =3D form.getElementsByTagName('input');

    if (!typeName && !name) return $A(inputs).map(Element.extend);

    for (var i =3D 0, matchingInputs =3D [], length =3D inputs.length; i <=
 length; i++) {
      var input =3D inputs[i];
      if ((typeName && input.type !=3D typeName) || (name && input.name !=
=3D name))
        continue;
      matchingInputs.push(Element.extend(input));
    }

    return matchingInputs;
  },

  disable: function(form) {
    form =3D $(form);
    Form.getElements(form).invoke('disable');
    return form;
  },

  enable: function(form) {
    form =3D $(form);
    Form.getElements(form).invoke('enable');
    return form;
  },

  findFirstElement: function(form) {
    var elements =3D $(form).getElements().findAll(function(element) {
      return 'hidden' !=3D element.type && !element.disabled;
    });
    var firstByIndex =3D elements.findAll(function(element) {
      return element.hasAttribute('tabIndex') && element.tabIndex >=3D 0;
    }).sortBy(function(element) { return element.tabIndex }).first();

    return firstByIndex ? firstByIndex : elements.find(function(element) {
      return ['input', 'select', 'textarea'].include(element.tagName.toLowe=
rCase());
    });
  },

  focusFirstElement: function(form) {
    form =3D $(form);
    form.findFirstElement().activate();
    return form;
  },

  request: function(form, options) {
    form =3D $(form), options =3D Object.clone(options || { });

    var params =3D options.parameters, action =3D form.readAttribute('actio=
n') || '';
    if (action.blank()) action =3D window.location.href;
    options.parameters =3D form.serialize(true);

    if (params) {
      if (Object.isString(params)) params =3D params.toQueryParams();
      Object.extend(options.parameters, params);
    }

    if (form.hasAttribute('method') && !options.method)
      options.method =3D form.method;

    return new Ajax.Request(action, options);
  }
};

/*-------------------------------------------------------------------------=
-*/

Form.Element =3D {
  focus: function(element) {
    $(element).focus();
    return element;
  },

  select: function(element) {
    $(element).select();
    return element;
  }
};

Form.Element.Methods =3D {
  serialize: function(element) {
    element =3D $(element);
    if (!element.disabled && element.name) {
      var value =3D element.getValue();
      if (value !=3D undefined) {
        var pair =3D { };
        pair[element.name] =3D value;
        return Object.toQueryString(pair);
      }
    }
    return '';
  },

  getValue: function(element) {
    element =3D $(element);
    var method =3D element.tagName.toLowerCase();
    return Form.Element.Serializers[method](element);
  },

  setValue: function(element, value) {
    element =3D $(element);
    var method =3D element.tagName.toLowerCase();
    Form.Element.Serializers[method](element, value);
    return element;
  },

  clear: function(element) {
    $(element).value =3D '';
    return element;
  },

  present: function(element) {
    return $(element).value !=3D '';
  },

  activate: function(element) {
    element =3D $(element);
    try {
      element.focus();
      if (element.select && (element.tagName.toLowerCase() !=3D 'input' ||
          !['button', 'reset', 'submit'].include(element.type)))
        element.select();
    } catch (e) { }
    return element;
  },

  disable: function(element) {
    element =3D $(element);
    element.disabled =3D true;
    return element;
  },

  enable: function(element) {
    element =3D $(element);
    element.disabled =3D false;
    return element;
  }
};

/*-------------------------------------------------------------------------=
-*/

var Field =3D Form.Element;
var $F =3D Form.Element.Methods.getValue;

/*-------------------------------------------------------------------------=
-*/

Form.Element.Serializers =3D {
  input: function(element, value) {
    switch (element.type.toLowerCase()) {
      case 'checkbox':
      case 'radio':
        return Form.Element.Serializers.inputSelector(element, value);
      default:
        return Form.Element.Serializers.textarea(element, value);
    }
  },

  inputSelector: function(element, value) {
    if (Object.isUndefined(value)) return element.checked ? element.value=
 : null;
    else element.checked =3D !!value;
  },

  textarea: function(element, value) {
    if (Object.isUndefined(value)) return element.value;
    else element.value =3D value;
  },

  select: function(element, value) {
    if (Object.isUndefined(value))
      return this[element.type =3D=3D 'select-one' ?
        'selectOne' : 'selectMany'](element);
    else {
      var opt, currentValue, single =3D !Object.isArray(value);
      for (var i =3D 0, length =3D element.length; i < length; i++) {
        opt =3D element.options[i];
        currentValue =3D this.optionValue(opt);
        if (single) {
          if (currentValue =3D=3D value) {
            opt.selected =3D true;
            return;
          }
        }
        else opt.selected =3D value.include(currentValue);
      }
    }
  },

  selectOne: function(element) {
    var index =3D element.selectedIndex;
    return index >=3D 0 ? this.optionValue(element.options[index]) : null;
  },

  selectMany: function(element) {
    var values, length =3D element.length;
    if (!length) return null;

    for (var i =3D 0, values =3D []; i < length; i++) {
      var opt =3D element.options[i];
      if (opt.selected) values.push(this.optionValue(opt));
    }
    return values;
  },

  optionValue: function(opt) {
    // extend element because hasAttribute may not be native
    return Element.extend(opt).hasAttribute('value') ? opt.value : opt.text;
  }
};

/*-------------------------------------------------------------------------=
-*/

Abstract.TimedObserver =3D Class.create(PeriodicalExecuter, {
  initialize: function($super, element, frequency, callback) {
    $super(callback, frequency);
    this.element   =3D $(element);
    this.lastValue =3D this.getValue();
  },

  execute: function() {
    var value =3D this.getValue();
    if (Object.isString(this.lastValue) && Object.isString(value) ?
        this.lastValue !=3D value : String(this.lastValue) !=3D String(valu=
e)) {
      this.callback(this.element, value);
      this.lastValue =3D value;
    }
  }
});

Form.Element.Observer =3D Class.create(Abstract.TimedObserver, {
  getValue: function() {
    return Form.Element.getValue(this.element);
  }
});

Form.Observer =3D Class.create(Abstract.TimedObserver, {
  getValue: function() {
    return Form.serialize(this.element);
  }
});

/*-------------------------------------------------------------------------=
-*/

Abstract.EventObserver =3D Class.create({
  initialize: function(element, callback) {
    this.element  =3D $(element);
    this.callback =3D callback;

    this.lastValue =3D this.getValue();
    if (this.element.tagName.toLowerCase() =3D=3D 'form')
      this.registerFormCallbacks();
    else
      this.registerCallback(this.element);
  },

  onElementEvent: function() {
    var value =3D this.getValue();
    if (this.lastValue !=3D value) {
      this.callback(this.element, value);
      this.lastValue =3D value;
    }
  },

  registerFormCallbacks: function() {
    Form.getElements(this.element).each(this.registerCallback, this);
  },

  registerCallback: function(element) {
    if (element.type) {
      switch (element.type.toLowerCase()) {
        case 'checkbox':
        case 'radio':
          Event.observe(element, 'click', this.onElementEvent.bind(this));
          break;
        default:
          Event.observe(element, 'change', this.onElementEvent.bind(this));
          break;
      }
    }
  }
});

Form.Element.EventObserver =3D Class.create(Abstract.EventObserver, {
  getValue: function() {
    return Form.Element.getValue(this.element);
  }
});

Form.EventObserver =3D Class.create(Abstract.EventObserver, {
  getValue: function() {
    return Form.serialize(this.element);
  }
});
if (!window.Event) var Event =3D { };

Object.extend(Event, {
  KEY_BACKSPACE: 8,
  KEY_TAB:       9,
  KEY_RETURN:   13,
  KEY_ESC:      27,
  KEY_LEFT:     37,
  KEY_UP:       38,
  KEY_RIGHT:    39,
  KEY_DOWN:     40,
  KEY_DELETE:   46,
  KEY_HOME:     36,
  KEY_END:      35,
  KEY_PAGEUP:   33,
  KEY_PAGEDOWN: 34,
  KEY_INSERT:   45,

  cache: { },

  relatedTarget: function(event) {
    var element;
    switch(event.type) {
      case 'mouseover': element =3D event.fromElement; break;
      case 'mouseout':  element =3D event.toElement;   break;
      default: return null;
    }
    return Element.extend(element);
  }
});

Event.Methods =3D (function() {
  var isButton;

  if (Prototype.Browser.IE) {
    var buttonMap =3D { 0: 1, 1: 4, 2: 2 };
    isButton =3D function(event, code) {
      return event.button =3D=3D buttonMap[code];
    };

  } else if (Prototype.Browser.WebKit) {
    isButton =3D function(event, code) {
      switch (code) {
        case 0: return event.which =3D=3D 1 && !event.metaKey;
        case 1: return event.which =3D=3D 1 && event.metaKey;
        default: return false;
      }
    };

  } else {
    isButton =3D function(event, code) {
      return event.which ? (event.which =3D=3D=3D code + 1) : (event.button=
 =3D=3D=3D code);
    };
  }

  return {
    isLeftClick:   function(event) { return isButton(event, 0) },
    isMiddleClick: function(event) { return isButton(event, 1) },
    isRightClick:  function(event) { return isButton(event, 2) },

    element: function(event) {
      event =3D Event.extend(event);

      var node          =3D event.target,
          type          =3D event.type,
          currentTarget =3D event.currentTarget;

      if (currentTarget && currentTarget.tagName) {
        // Firefox screws up the "click" event when moving between radio bu=
ttons
        // via arrow keys. It also screws up the "load" and "error" events=
 on images,
        // reporting the document as the target instead of the original ima=
ge.
        if (type =3D=3D=3D 'load' || type =3D=3D=3D 'error' ||
          (type =3D=3D=3D 'click' && currentTarget.tagName.toLowerCase() =
=3D=3D=3D 'input'
            && currentTarget.type =3D=3D=3D 'radio'))
              node =3D currentTarget;
      }
      if (node.nodeType =3D=3D Node.TEXT_NODE) node =3D node.parentNode;
      return Element.extend(node);
    },

    findElement: function(event, expression) {
      var element =3D Event.element(event);
      if (!expression) return element;
      var elements =3D [element].concat(element.ancestors());
      return Selector.findElement(elements, expression, 0);
    },

    pointer: function(event) {
      var docElement =3D document.documentElement,
      body =3D document.body || { scrollLeft: 0, scrollTop: 0 };
      return {
        x: event.pageX || (event.clientX +
          (docElement.scrollLeft || body.scrollLeft) -
          (docElement.clientLeft || 0)),
        y: event.pageY || (event.clientY +
          (docElement.scrollTop || body.scrollTop) -
          (docElement.clientTop || 0))
      };
    },

    pointerX: function(event) { return Event.pointer(event).x },
    pointerY: function(event) { return Event.pointer(event).y },

    stop: function(event) {
      Event.extend(event);
      event.preventDefault();
      event.stopPropagation();
      event.stopped =3D true;
    }
  };
})();

Event.extend =3D (function() {
  var methods =3D Object.keys(Event.Methods).inject({ }, function(m, name) {
    m[name] =3D Event.Methods[name].methodize();
    return m;
  });

  if (Prototype.Browser.IE) {
    Object.extend(methods, {
      stopPropagation: function() { this.cancelBubble =3D true },
      preventDefault:  function() { this.returnValue =3D false },
      inspect: function() { return "[object Event]" }
    });

    return function(event) {
      if (!event) return false;
      if (event._extendedByPrototype) return event;

      event._extendedByPrototype =3D Prototype.emptyFunction;
      var pointer =3D Event.pointer(event);
      Object.extend(event, {
        target: event.srcElement,
        relatedTarget: Event.relatedTarget(event),
        pageX:  pointer.x,
        pageY:  pointer.y
      });
      return Object.extend(event, methods);
    };

  } else {
    Event.prototype =3D Event.prototype || document.createEvent("HTMLEvents=
")['__proto__'];
    Object.extend(Event.prototype, methods);
    return Prototype.K;
  }
})();

Object.extend(Event, (function() {
  var cache =3D Event.cache;

  function getEventID(element) {
    if (element._prototypeEventID) return element._prototypeEventID[0];
    arguments.callee.id =3D arguments.callee.id || 1;
    return element._prototypeEventID =3D [++arguments.callee.id];
  }

  function getDOMEventName(eventName) {
    if (eventName && eventName.include(':')) return "dataavailable";
    return eventName;
  }

  function getCacheForID(id) {
    return cache[id] =3D cache[id] || { };
  }

  function getWrappersForEventName(id, eventName) {
    var c =3D getCacheForID(id);
    return c[eventName] =3D c[eventName] || [];
  }

  function createWrapper(element, eventName, handler) {
    var id =3D getEventID(element);
    var c =3D getWrappersForEventName(id, eventName);
    if (c.pluck("handler").include(handler)) return false;

    var wrapper =3D function(event) {
      if (!Event || !Event.extend ||
        (event.eventName && event.eventName !=3D eventName))
          return false;

      Event.extend(event);
      handler.call(element, event);
    };

    wrapper.handler =3D handler;
    c.push(wrapper);
    return wrapper;
  }

  function findWrapper(id, eventName, handler) {
    var c =3D getWrappersForEventName(id, eventName);
    return c.find(function(wrapper) { return wrapper.handler =3D=3D handler=
 });
  }

  function destroyWrapper(id, eventName, handler) {
    var c =3D getCacheForID(id);
    if (!c[eventName]) return false;
    c[eventName] =3D c[eventName].without(findWrapper(id, eventName, handle=
r));
  }

  function destroyCache() {
    for (var id in cache)
      for (var eventName in cache[id])
        cache[id][eventName] =3D null;
  }


  // Internet Explorer needs to remove event handlers on page unload
  // in order to avoid memory leaks.
  if (window.attachEvent) {
    window.attachEvent("onunload", destroyCache);
  }

  // Safari has a dummy event handler on page unload so that it won't
  // use its bfcache. Safari <=3D 3.1 has an issue with restoring the "docu=
ment"
  // object when page is returned to via the back button using its bfcache.
  if (Prototype.Browser.WebKit) {
    window.addEventListener('unload', Prototype.emptyFunction, false);
  }

  return {
    observe: function(element, eventName, handler) {
      element =3D $(element);
      var name =3D getDOMEventName(eventName);

      var wrapper =3D createWrapper(element, eventName, handler);
      if (!wrapper) return element;

      if (element.addEventListener) {
        element.addEventListener(name, wrapper, false);
      } else {
        element.attachEvent("on" + name, wrapper);
      }

      return element;
    },

    stopObserving: function(element, eventName, handler) {
      element =3D $(element);
      var id =3D getEventID(element), name =3D getDOMEventName(eventName);

      if (!handler && eventName) {
        getWrappersForEventName(id, eventName).each(function(wrapper) {
          element.stopObserving(eventName, wrapper.handler);
        });
        return element;

      } else if (!eventName) {
        Object.keys(getCacheForID(id)).each(function(eventName) {
          element.stopObserving(eventName);
        });
        return element;
      }

      var wrapper =3D findWrapper(id, eventName, handler);
      if (!wrapper) return element;

      if (element.removeEventListener) {
        element.removeEventListener(name, wrapper, false);
      } else {
        element.detachEvent("on" + name, wrapper);
      }

      destroyWrapper(id, eventName, handler);

      return element;
    },

    fire: function(element, eventName, memo) {
      element =3D $(element);
      if (element =3D=3D document && document.createEvent && !element.dispa=
tchEvent)
        element =3D document.documentElement;

      var event;
      if (document.createEvent) {
        event =3D document.createEvent("HTMLEvents");
        event.initEvent("dataavailable", true, true);
      } else {
        event =3D document.createEventObject();
        event.eventType =3D "ondataavailable";
      }

      event.eventName =3D eventName;
      event.memo =3D memo || { };

      if (document.createEvent) {
        element.dispatchEvent(event);
      } else {
        element.fireEvent(event.eventType, event);
      }

      return Event.extend(event);
    }
  };
})());

Object.extend(Event, Event.Methods);

Element.addMethods({
  fire:          Event.fire,
  observe:       Event.observe,
  stopObserving: Event.stopObserving
});

Object.extend(document, {
  fire:          Element.Methods.fire.methodize(),
  observe:       Element.Methods.observe.methodize(),
  stopObserving: Element.Methods.stopObserving.methodize(),
  loaded:        false
});

(function() {
  /* Support for the DOMContentLoaded event is based on work by Dan Webb,
     Matthias Miller, Dean Edwards and John Resig. */

  var timer;

  function fireContentLoadedEvent() {
    if (document.loaded) return;
    if (timer) window.clearInterval(timer);
    document.fire("dom:loaded");
    document.loaded =3D true;
  }

  if (document.addEventListener) {
    if (Prototype.Browser.WebKit) {
      timer =3D window.setInterval(function() {
        if (/loaded|complete/.test(document.readyState))
          fireContentLoadedEvent();
      }, 0);

      Event.observe(window, "load", fireContentLoadedEvent);

    } else {
      document.addEventListener("DOMContentLoaded",
        fireContentLoadedEvent, false);
    }

  } else {
    document.write("<script id=3D__onDOMContentLoaded defer src=3D//:><\/sc=
ript>");
    $("__onDOMContentLoaded").onreadystatechange =3D function() {
      if (this.readyState =3D=3D "complete") {
        this.onreadystatechange =3D null;
        fireContentLoadedEvent();
      }
    };
  }
})();
/*------------------------------- DEPRECATED ------------------------------=
-*/

Hash.toQueryString =3D Object.toQueryString;

var Toggle =3D { display: Element.toggle };

Element.Methods.childOf =3D Element.Methods.descendantOf;

var Insertion =3D {
  Before: function(element, content) {
    return Element.insert(element, {before:content});
  },

  Top: function(element, content) {
    return Element.insert(element, {top:content});
  },

  Bottom: function(element, content) {
    return Element.insert(element, {bottom:content});
  },

  After: function(element, content) {
    return Element.insert(element, {after:content});
  }
};

var $continue =3D new Error('"throw $continue" is deprecated, use "return"=
 instead');

// This should be moved to script.aculo.us; notice the deprecated methods
// further below, that map to the newer Element methods.
var Position =3D {
  // set to true if needed, warning: firefox performance problems
  // NOT neeeded for page scrolling, only if draggable contained in
  // scrollable elements
  includeScrollOffsets: false,

  // must be called before calling withinIncludingScrolloffset, every time=
 the
  // page is scrolled
  prepare: function() {
    this.deltaX =3D  window.pageXOffset
                || document.documentElement.scrollLeft
                || document.body.scrollLeft
                || 0;
    this.deltaY =3D  window.pageYOffset
                || document.documentElement.scrollTop
                || document.body.scrollTop
                || 0;
  },

  // caches x/y coordinate pair to use with overlap
  within: function(element, x, y) {
    if (this.includeScrollOffsets)
      return this.withinIncludingScrolloffsets(element, x, y);
    this.xcomp =3D x;
    this.ycomp =3D y;
    this.offset =3D Element.cumulativeOffset(element);

    return (y >=3D this.offset[1] &&
            y <  this.offset[1] + element.offsetHeight &&
            x >=3D this.offset[0] &&
            x <  this.offset[0] + element.offsetWidth);
  },

  withinIncludingScrolloffsets: function(element, x, y) {
    var offsetcache =3D Element.cumulativeScrollOffset(element);

    this.xcomp =3D x + offsetcache[0] - this.deltaX;
    this.ycomp =3D y + offsetcache[1] - this.deltaY;
    this.offset =3D Element.cumulativeOffset(element);

    return (this.ycomp >=3D this.offset[1] &&
            this.ycomp <  this.offset[1] + element.offsetHeight &&
            this.xcomp >=3D this.offset[0] &&
            this.xcomp <  this.offset[0] + element.offsetWidth);
  },

  // within must be called directly before
  overlap: function(mode, element) {
    if (!mode) return 0;
    if (mode =3D=3D 'vertical')
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /
        element.offsetHeight;
    if (mode =3D=3D 'horizontal')
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /
        element.offsetWidth;
  },

  // Deprecation layer -- use newer Element methods now (1.5.2).

  cumulativeOffset: Element.Methods.cumulativeOffset,

  positionedOffset: Element.Methods.positionedOffset,

  absolutize: function(element) {
    Position.prepare();
    return Element.absolutize(element);
  },

  relativize: function(element) {
    Position.prepare();
    return Element.relativize(element);
  },

  realOffset: Element.Methods.cumulativeScrollOffset,

  offsetParent: Element.Methods.getOffsetParent,

  page: Element.Methods.viewportOffset,

  clone: function(source, target, options) {
    options =3D options || { };
    return Element.clonePosition(target, source, options);
  }
};

/*-------------------------------------------------------------------------=
-*/

if (!document.getElementsByClassName) document.getElementsByClassName =3D=
 function(instanceMethods){
  function iter(name) {
    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' "=
 + name + " ')]";
  }

  instanceMethods.getElementsByClassName =3D Prototype.BrowserFeatures.XPat=
h ?
  function(element, className) {
    className =3D className.toString().strip();
    var cond =3D /\s/.test(className) ? $w(className).map(iter).join('') :=
 iter(className);
    return cond ? document._getElementsByXPath('.//*' + cond, element) : [];
  } : function(element, className) {
    className =3D className.toString().strip();
    var elements =3D [], classNames =3D (/\s/.test(className) ? $w(classNam=
e) : null);
    if (!classNames && !className) return elements;

    var nodes =3D $(element).getElementsByTagName('*');
    className =3D ' ' + className + ' ';

    for (var i =3D 0, child, cn; child =3D nodes[i]; i++) {
      if (child.className && (cn =3D ' ' + child.className + ' ') && (cn.in=
clude(className) ||
          (classNames && classNames.all(function(name) {
            return !name.toString().blank() && cn.include(' ' + name + ' ');
          }))))
        elements.push(Element.extend(child));
    }
    return elements;
  };

  return function(className, parentElement) {
    return $(parentElement || document.body).getElementsByClassName(classNa=
me);
  };
}(Element.Methods);

/*-------------------------------------------------------------------------=
-*/

Element.ClassNames =3D Class.create();
Element.ClassNames.prototype =3D {
  initialize: function(element) {
    this.element =3D $(element);
  },

  _each: function(iterator) {
    this.element.className.split(/\s+/).select(function(name) {
      return name.length > 0;
    })._each(iterator);
  },

  set: function(className) {
    this.element.className =3D className;
  },

  add: function(classNameToAdd) {
    if (this.include(classNameToAdd)) return;
    this.set($A(this).concat(classNameToAdd).join(' '));
  },

  remove: function(classNameToRemove) {
    if (!this.include(classNameToRemove)) return;
    this.set($A(this).without(classNameToRemove).join(' '));
  },

  toString: function() {
    return $A(this).join(' ');
  }
};

Object.extend(Element.ClassNames.prototype, Enumerable);

/*-------------------------------------------------------------------------=
-*/

Element.addMethods();
------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: text/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://dev.savetogether.org/javascripts/effects.js?1255380904

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir=
.aculo.us)
// Contributors:
//  Justin Palmer (http://encytemedia.com/)
//  Mark Pilgrim (http://diveintomark.org/)
//  Martin Bialasinki
//
// script.aculo.us is freely distributable under the terms of an MIT-style=
 license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

// converts rgb() and #xxx to #xxxxxx format,
// returns self (or first argument) if not convertable
String.prototype.parseColor =3D function() {
  var color =3D '#';
  if (this.slice(0,4) =3D=3D 'rgb(') {
    var cols =3D this.slice(4,this.length-1).split(',');
    var i=3D0; do { color +=3D parseInt(cols[i]).toColorPart() } while (++i=
<3);
  } else {
    if (this.slice(0,1) =3D=3D '#') {
      if (this.length=3D=3D4) for(var i=3D1;i<4;i++) color +=3D (this.charA=
t(i) + this.charAt(i)).toLowerCase();
      if (this.length=3D=3D7) color =3D this.toLowerCase();
    }
  }
  return (color.length=3D=3D7 ? color : (arguments[0] || this));
};

/*-------------------------------------------------------------------------=
-*/

Element.collectTextNodes =3D function(element) {
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType=3D=3D3 ? node.nodeValue :
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));
  }).flatten().join('');
};

Element.collectTextNodesIgnoreClass =3D function(element, className) {
  return $A($(element).childNodes).collect( function(node) {
    return (node.nodeType=3D=3D3 ? node.nodeValue :
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ?
        Element.collectTextNodesIgnoreClass(node, className) : ''));
  }).flatten().join('');
};

Element.setContentZoom =3D function(element, percent) {
  element =3D $(element);
  element.setStyle({fontSize: (percent/100) + 'em'});
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);
  return element;
};

Element.getInlineOpacity =3D function(element){
  return $(element).style.opacity || '';
};

Element.forceRerendering =3D function(element) {
  try {
    element =3D $(element);
    var n =3D document.createTextNode(' ');
    element.appendChild(n);
    element.removeChild(n);
  } catch(e) { }
};

/*-------------------------------------------------------------------------=
-*/

var Effect =3D {
  _elementDoesNotExistError: {
    name: 'ElementDoesNotExistError',
    message: 'The specified DOM element does not exist, but is required for=
 this effect to operate'
  },
  Transitions: {
    linear: Prototype.K,
    sinoidal: function(pos) {
      return (-Math.cos(pos*Math.PI)/2) + .5;
    },
    reverse: function(pos) {
      return 1-pos;
    },
    flicker: function(pos) {
      var pos =3D ((-Math.cos(pos*Math.PI)/4) + .75) + Math.random()/4;
      return pos > 1 ? 1 : pos;
    },
    wobble: function(pos) {
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + .5;
    },
    pulse: function(pos, pulses) {
      return (-Math.cos((pos*((pulses||5)-.5)*2)*Math.PI)/2) + .5;
    },
    spring: function(pos) {
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6));
    },
    none: function(pos) {
      return 0;
    },
    full: function(pos) {
      return 1;
    }
  },
  DefaultOptions: {
    duration:   1.0,   // seconds
    fps:        100,   // 100=3D assume 66fps max.
    sync:       false, // true for combining
    from:       0.0,
    to:         1.0,
    delay:      0.0,
    queue:      'parallel'
  },
  tagifyText: function(element) {
    var tagifyStyle =3D 'position:relative';
    if (Prototype.Browser.IE) tagifyStyle +=3D ';zoom:1';

    element =3D $(element);
    $A(element.childNodes).each( function(child) {
      if (child.nodeType=3D=3D3) {
        child.nodeValue.toArray().each( function(character) {
          element.insertBefore(
            new Element('span', {style: tagifyStyle}).update(
              character =3D=3D ' ' ? String.fromCharCode(160) : character),
              child);
        });
        Element.remove(child);
      }
    });
  },
  multiple: function(element, effect) {
    var elements;
    if (((typeof element =3D=3D 'object') ||
        Object.isFunction(element)) &&
       (element.length))
      elements =3D element;
    else
      elements =3D $(element).childNodes;

    var options =3D Object.extend({
      speed: 0.1,
      delay: 0.0
    }, arguments[2] || { });
    var masterDelay =3D options.delay;

    $A(elements).each( function(element, index) {
      new effect(element, Object.extend(options, { delay: index * options.s=
peed + masterDelay }));
    });
  },
  PAIRS: {
    'slide':  ['SlideDown','SlideUp'],
    'blind':  ['BlindDown','BlindUp'],
    'appear': ['Appear','Fade']
  },
  toggle: function(element, effect) {
    element =3D $(element);
    effect =3D (effect || 'appear').toLowerCase();
    var options =3D Object.extend({
      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }
    }, arguments[2] || { });
    Effect[element.visible() ?
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, options);
  }
};

Effect.DefaultOptions.transition =3D Effect.Transitions.sinoidal;

/* ------------- core effects ------------- */

Effect.ScopedQueue =3D Class.create(Enumerable, {
  initialize: function() {
    this.effects  =3D [];
    this.interval =3D null;
  },
  _each: function(iterator) {
    this.effects._each(iterator);
  },
  add: function(effect) {
    var timestamp =3D new Date().getTime();

    var position =3D Object.isString(effect.options.queue) ?
      effect.options.queue : effect.options.queue.position;

    switch(position) {
      case 'front':
        // move unstarted effects after this effect
        this.effects.findAll(function(e){ return e.state=3D=3D'idle' }).eac=
h( function(e) {
            e.startOn  +=3D effect.finishOn;
            e.finishOn +=3D effect.finishOn;
          });
        break;
      case 'with-last':
        timestamp =3D this.effects.pluck('startOn').max() || timestamp;
        break;
      case 'end':
        // start effect after last queued effect has finished
        timestamp =3D this.effects.pluck('finishOn').max() || timestamp;
        break;
    }

    effect.startOn  +=3D timestamp;
    effect.finishOn +=3D timestamp;

    if (!effect.options.queue.limit || (this.effects.length < effect.option=
s.queue.limit))
      this.effects.push(effect);

    if (!this.interval)
      this.interval =3D setInterval(this.loop.bind(this), 15);
  },
  remove: function(effect) {
    this.effects =3D this.effects.reject(function(e) { return e=3D=3Deffect=
 });
    if (this.effects.length =3D=3D 0) {
      clearInterval(this.interval);
      this.interval =3D null;
    }
  },
  loop: function() {
    var timePos =3D new Date().getTime();
    for(var i=3D0, len=3Dthis.effects.length;i<len;i++)
      this.effects[i] && this.effects[i].loop(timePos);
  }
});

Effect.Queues =3D {
  instances: $H(),
  get: function(queueName) {
    if (!Object.isString(queueName)) return queueName;

    return this.instances.get(queueName) ||
      this.instances.set(queueName, new Effect.ScopedQueue());
  }
};
Effect.Queue =3D Effect.Queues.get('global');

Effect.Base =3D Class.create({
  position: null,
  start: function(options) {
    function codeForEvent(options,eventName){
      return (
        (options[eventName+'Internal'] ? 'this.options.'+eventName+'Interna=
l(this);' : '') +
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')
      );
    }
    if (options && options.transition =3D=3D=3D false) options.transition=
 =3D Effect.Transitions.linear;
    this.options      =3D Object.extend(Object.extend({ },Effect.DefaultOpt=
ions), options || { });
    this.currentFrame =3D 0;
    this.state        =3D 'idle';
    this.startOn      =3D this.options.delay*1000;
    this.finishOn     =3D this.startOn+(this.options.duration*1000);
    this.fromToDelta  =3D this.options.to-this.options.from;
    this.totalTime    =3D this.finishOn-this.startOn;
    this.totalFrames  =3D this.options.fps*this.options.duration;

    this.render =3D (function() {
      function dispatch(effect, eventName) {
        if (effect.options[eventName + 'Internal'])
          effect.options[eventName + 'Internal'](effect);
        if (effect.options[eventName])
          effect.options[eventName](effect);
      }

      return function(pos) {
        if (this.state =3D=3D=3D "idle") {
          this.state =3D "running";
          dispatch(this, 'beforeSetup');
          if (this.setup) this.setup();
          dispatch(this, 'afterSetup');
        }
        if (this.state =3D=3D=3D "running") {
          pos =3D (this.options.transition(pos) * this.fromToDelta) + this.=
options.from;
          this.position =3D pos;
          dispatch(this, 'beforeUpdate');
          if (this.update) this.update(pos);
          dispatch(this, 'afterUpdate');
        }
      };
    })();

    this.event('beforeStart');
    if (!this.options.sync)
      Effect.Queues.get(Object.isString(this.options.queue) ?
        'global' : this.options.queue.scope).add(this);
  },
  loop: function(timePos) {
    if (timePos >=3D this.startOn) {
      if (timePos >=3D this.finishOn) {
        this.render(1.0);
        this.cancel();
        this.event('beforeFinish');
        if (this.finish) this.finish();
        this.event('afterFinish');
        return;
      }
      var pos   =3D (timePos - this.startOn) / this.totalTime,
          frame =3D (pos * this.totalFrames).round();
      if (frame > this.currentFrame) {
        this.render(pos);
        this.currentFrame =3D frame;
      }
    }
  },
  cancel: function() {
    if (!this.options.sync)
      Effect.Queues.get(Object.isString(this.options.queue) ?
        'global' : this.options.queue.scope).remove(this);
    this.state =3D 'finished';
  },
  event: function(eventName) {
    if (this.options[eventName + 'Internal']) this.options[eventName + 'Int=
ernal'](this);
    if (this.options[eventName]) this.options[eventName](this);
  },
  inspect: function() {
    var data =3D $H();
    for(property in this)
      if (!Object.isFunction(this[property])) data.set(property, this[prope=
rty]);
    return '#<Effect:' + data.inspect() + ',options:' + $H(this.options).in=
spect() + '>';
  }
});

Effect.Parallel =3D Class.create(Effect.Base, {
  initialize: function(effects) {
    this.effects =3D effects || [];
    this.start(arguments[1]);
  },
  update: function(position) {
    this.effects.invoke('render', position);
  },
  finish: function(position) {
    this.effects.each( function(effect) {
      effect.render(1.0);
      effect.cancel();
      effect.event('beforeFinish');
      if (effect.finish) effect.finish(position);
      effect.event('afterFinish');
    });
  }
});

Effect.Tween =3D Class.create(Effect.Base, {
  initialize: function(object, from, to) {
    object =3D Object.isString(object) ? $(object) : object;
    var args =3D $A(arguments), method =3D args.last(),
      options =3D args.length =3D=3D 5 ? args[3] : null;
    this.method =3D Object.isFunction(method) ? method.bind(object) :
      Object.isFunction(object[method]) ? object[method].bind(object) :
      function(value) { object[method] =3D value };
    this.start(Object.extend({ from: from, to: to }, options || { }));
  },
  update: function(position) {
    this.method(position);
  }
});

Effect.Event =3D Class.create(Effect.Base, {
  initialize: function() {
    this.start(Object.extend({ duration: 0 }, arguments[0] || { }));
  },
  update: Prototype.emptyFunction
});

Effect.Opacity =3D Class.create(Effect.Base, {
  initialize: function(element) {
    this.element =3D $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    // make this work on IE on elements without 'layout'
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))
      this.element.setStyle({zoom: 1});
    var options =3D Object.extend({
      from: this.element.getOpacity() || 0.0,
      to:   1.0
    }, arguments[1] || { });
    this.start(options);
  },
  update: function(position) {
    this.element.setOpacity(position);
  }
});

Effect.Move =3D Class.create(Effect.Base, {
  initialize: function(element) {
    this.element =3D $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options =3D Object.extend({
      x:    0,
      y:    0,
      mode: 'relative'
    }, arguments[1] || { });
    this.start(options);
  },
  setup: function() {
    this.element.makePositioned();
    this.originalLeft =3D parseFloat(this.element.getStyle('left') || '0');
    this.originalTop  =3D parseFloat(this.element.getStyle('top')  || '0');
    if (this.options.mode =3D=3D 'absolute') {
      this.options.x =3D this.options.x - this.originalLeft;
      this.options.y =3D this.options.y - this.originalTop;
    }
  },
  update: function(position) {
    this.element.setStyle({
      left: (this.options.x  * position + this.originalLeft).round() + 'px',
      top:  (this.options.y  * position + this.originalTop).round()  + 'px'
    });
  }
});

// for backwards compatibility
Effect.MoveBy =3D function(element, toTop, toLeft) {
  return new Effect.Move(element,
    Object.extend({ x: toLeft, y: toTop }, arguments[3] || { }));
};

Effect.Scale =3D Class.create(Effect.Base, {
  initialize: function(element, percent) {
    this.element =3D $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options =3D Object.extend({
      scaleX: true,
      scaleY: true,
      scaleContent: true,
      scaleFromCenter: false,
      scaleMode: 'box',        // 'box' or 'contents' or { } with provided=
 values
      scaleFrom: 100.0,
      scaleTo:   percent
    }, arguments[2] || { });
    this.start(options);
  },
  setup: function() {
    this.restoreAfterFinish =3D this.options.restoreAfterFinish || false;
    this.elementPositioning =3D this.element.getStyle('position');

    this.originalStyle =3D { };
    ['top','left','width','height','fontSize'].each( function(k) {
      this.originalStyle[k] =3D this.element.style[k];
    }.bind(this));

    this.originalTop  =3D this.element.offsetTop;
    this.originalLeft =3D this.element.offsetLeft;

    var fontSize =3D this.element.getStyle('font-size') || '100%';
    ['em','px','%','pt'].each( function(fontSizeType) {
      if (fontSize.indexOf(fontSizeType)>0) {
        this.fontSize     =3D parseFloat(fontSize);
        this.fontSizeType =3D fontSizeType;
      }
    }.bind(this));

    this.factor =3D (this.options.scaleTo - this.options.scaleFrom)/100;

    this.dims =3D null;
    if (this.options.scaleMode=3D=3D'box')
      this.dims =3D [this.element.offsetHeight, this.element.offsetWidth];
    if (/^content/.test(this.options.scaleMode))
      this.dims =3D [this.element.scrollHeight, this.element.scrollWidth];
    if (!this.dims)
      this.dims =3D [this.options.scaleMode.originalHeight,
                   this.options.scaleMode.originalWidth];
  },
  update: function(position) {
    var currentScale =3D (this.options.scaleFrom/100.0) + (this.factor * po=
sition);
    if (this.options.scaleContent && this.fontSize)
      this.element.setStyle({fontSize: this.fontSize * currentScale + this.=
fontSizeType });
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * currentS=
cale);
  },
  finish: function(position) {
    if (this.restoreAfterFinish) this.element.setStyle(this.originalStyle);
  },
  setDimensions: function(height, width) {
    var d =3D { };
    if (this.options.scaleX) d.width =3D width.round() + 'px';
    if (this.options.scaleY) d.height =3D height.round() + 'px';
    if (this.options.scaleFromCenter) {
      var topd  =3D (height - this.dims[0])/2;
      var leftd =3D (width  - this.dims[1])/2;
      if (this.elementPositioning =3D=3D 'absolute') {
        if (this.options.scaleY) d.top =3D this.originalTop-topd + 'px';
        if (this.options.scaleX) d.left =3D this.originalLeft-leftd + 'px';
      } else {
        if (this.options.scaleY) d.top =3D -topd + 'px';
        if (this.options.scaleX) d.left =3D -leftd + 'px';
      }
    }
    this.element.setStyle(d);
  }
});

Effect.Highlight =3D Class.create(Effect.Base, {
  initialize: function(element) {
    this.element =3D $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options =3D Object.extend({ startcolor: '#ffff99' }, arguments[1]=
 || { });
    this.start(options);
  },
  setup: function() {
    // Prevent executing on elements not in the layout flow
    if (this.element.getStyle('display')=3D=3D'none') { this.cancel(); retu=
rn; }
    // Disable background image during the effect
    this.oldStyle =3D { };
    if (!this.options.keepBackgroundImage) {
      this.oldStyle.backgroundImage =3D this.element.getStyle('background-i=
mage');
      this.element.setStyle({backgroundImage: 'none'});
    }
    if (!this.options.endcolor)
      this.options.endcolor =3D this.element.getStyle('background-color').p=
arseColor('#ffffff');
    if (!this.options.restorecolor)
      this.options.restorecolor =3D this.element.getStyle('background-color=
');
    // init color calculations
    this._base  =3D $R(0,2).map(function(i){ return parseInt(this.options.s=
tartcolor.slice(i*2+1,i*2+3),16) }.bind(this));
    this._delta =3D $R(0,2).map(function(i){ return parseInt(this.options.e=
ndcolor.slice(i*2+1,i*2+3),16)-this._base[i] }.bind(this));
  },
  update: function(position) {
    this.element.setStyle({backgroundColor: $R(0,2).inject('#',function(m,v=
,i){
      return m+((this._base[i]+(this._delta[i]*position)).round().toColorPa=
rt()); }.bind(this)) });
  },
  finish: function() {
    this.element.setStyle(Object.extend(this.oldStyle, {
      backgroundColor: this.options.restorecolor
    }));
  }
});

Effect.ScrollTo =3D function(element) {
  var options =3D arguments[1] || { },
  scrollOffsets =3D document.viewport.getScrollOffsets(),
  elementOffsets =3D $(element).cumulativeOffset();

  if (options.offset) elementOffsets[1] +=3D options.offset;

  return new Effect.Tween(null,
    scrollOffsets.top,
    elementOffsets[1],
    options,
    function(p){ scrollTo(scrollOffsets.left, p.round()); }
  );
};

/* ------------- combination effects ------------- */

Effect.Fade =3D function(element) {
  element =3D $(element);
  var oldOpacity =3D element.getInlineOpacity();
  var options =3D Object.extend({
    from: element.getOpacity() || 1.0,
    to:   0.0,
    afterFinishInternal: function(effect) {
      if (effect.options.to!=3D0) return;
      effect.element.hide().setStyle({opacity: oldOpacity});
    }
  }, arguments[1] || { });
  return new Effect.Opacity(element,options);
};

Effect.Appear =3D function(element) {
  element =3D $(element);
  var options =3D Object.extend({
  from: (element.getStyle('display') =3D=3D 'none' ? 0.0 : element.getOpaci=
ty() || 0.0),
  to:   1.0,
  // force Safari to render floated elements properly
  afterFinishInternal: function(effect) {
    effect.element.forceRerendering();
  },
  beforeSetup: function(effect) {
    effect.element.setOpacity(effect.options.from).show();
  }}, arguments[1] || { });
  return new Effect.Opacity(element,options);
};

Effect.Puff =3D function(element) {
  element =3D $(element);
  var oldStyle =3D {
    opacity: element.getInlineOpacity(),
    position: element.getStyle('position'),
    top:  element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height
  };
  return new Effect.Parallel(
   [ new Effect.Scale(element, 200,
      { sync: true, scaleFromCenter: true, scaleContent: true, restoreAfter=
Finish: true }),
     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ],
     Object.extend({ duration: 1.0,
      beforeSetupInternal: function(effect) {
        Position.absolutize(effect.effects[0].element);
      },
      afterFinishInternal: function(effect) {
         effect.effects[0].element.hide().setStyle(oldStyle); }
     }, arguments[1] || { })
   );
};

Effect.BlindUp =3D function(element) {
  element =3D $(element);
  element.makeClipping();
  return new Effect.Scale(element, 0,
    Object.extend({ scaleContent: false,
      scaleX: false,
      restoreAfterFinish: true,
      afterFinishInternal: function(effect) {
        effect.element.hide().undoClipping();
      }
    }, arguments[1] || { })
  );
};

Effect.BlindDown =3D function(element) {
  element =3D $(element);
  var elementDimensions =3D element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({
    scaleContent: false,
    scaleX: false,
    scaleFrom: 0,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: el=
ementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makeClipping().setStyle({height: '0px'}).show();
    },
    afterFinishInternal: function(effect) {
      effect.element.undoClipping();
    }
  }, arguments[1] || { }));
};

Effect.SwitchOff =3D function(element) {
  element =3D $(element);
  var oldOpacity =3D element.getInlineOpacity();
  return new Effect.Appear(element, Object.extend({
    duration: 0.4,
    from: 0,
    transition: Effect.Transitions.flicker,
    afterFinishInternal: function(effect) {
      new Effect.Scale(effect.element, 1, {
        duration: 0.3, scaleFromCenter: true,
        scaleX: false, scaleContent: false, restoreAfterFinish: true,
        beforeSetup: function(effect) {
          effect.element.makePositioned().makeClipping();
        },
        afterFinishInternal: function(effect) {
          effect.element.hide().undoClipping().undoPositioned().setStyle({o=
pacity: oldOpacity});
        }
      });
    }
  }, arguments[1] || { }));
};

Effect.DropOut =3D function(element) {
  element =3D $(element);
  var oldStyle =3D {
    top: element.getStyle('top'),
    left: element.getStyle('left'),
    opacity: element.getInlineOpacity() };
  return new Effect.Parallel(
    [ new Effect.Move(element, {x: 0, y: 100, sync: true }),
      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],
    Object.extend(
      { duration: 0.5,
        beforeSetup: function(effect) {
          effect.effects[0].element.makePositioned();
        },
        afterFinishInternal: function(effect) {
          effect.effects[0].element.hide().undoPositioned().setStyle(oldSty=
le);
        }
      }, arguments[1] || { }));
};

Effect.Shake =3D function(element) {
  element =3D $(element);
  var options =3D Object.extend({
    distance: 20,
    duration: 0.5
  }, arguments[1] || {});
  var distance =3D parseFloat(options.distance);
  var split =3D parseFloat(options.duration) / 10.0;
  var oldStyle =3D {
    top: element.getStyle('top'),
    left: element.getStyle('left') };
    return new Effect.Move(element,
      { x:  distance, y: 0, duration: split, afterFinishInternal: function(=
effect) {
    new Effect.Move(effect.element,
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: func=
tion(effect) {
    new Effect.Move(effect.element,
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: func=
tion(effect) {
    new Effect.Move(effect.element,
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: func=
tion(effect) {
    new Effect.Move(effect.element,
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: func=
tion(effect) {
    new Effect.Move(effect.element,
      { x: -distance, y: 0, duration: split, afterFinishInternal: function(=
effect) {
        effect.element.undoPositioned().setStyle(oldStyle);
  }}); }}); }}); }}); }}); }});
};

Effect.SlideDown =3D function(element) {
  element =3D $(element).cleanWhitespace();
  // SlideDown need to have the content of the element wrapped in a contain=
er element with fixed height!
  var oldInnerBottom =3D element.down().getStyle('bottom');
  var elementDimensions =3D element.getDimensions();
  return new Effect.Scale(element, 100, Object.extend({
    scaleContent: false,
    scaleX: false,
    scaleFrom: window.opera ? 0 : 1,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: el=
ementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.down().makePositioned();
      if (window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping().setStyle({height: '0px'}).show();
    },
    afterUpdateInternal: function(effect) {
      effect.element.down().setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px' });
    },
    afterFinishInternal: function(effect) {
      effect.element.undoClipping().undoPositioned();
      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBott=
om}); }
    }, arguments[1] || { })
  );
};

Effect.SlideUp =3D function(element) {
  element =3D $(element).cleanWhitespace();
  var oldInnerBottom =3D element.down().getStyle('bottom');
  var elementDimensions =3D element.getDimensions();
  return new Effect.Scale(element, window.opera ? 0 : 1,
   Object.extend({ scaleContent: false,
    scaleX: false,
    scaleMode: 'box',
    scaleFrom: 100,
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: el=
ementDimensions.width},
    restoreAfterFinish: true,
    afterSetup: function(effect) {
      effect.element.makePositioned();
      effect.element.down().makePositioned();
      if (window.opera) effect.element.setStyle({top: ''});
      effect.element.makeClipping().show();
    },
    afterUpdateInternal: function(effect) {
      effect.element.down().setStyle({bottom:
        (effect.dims[0] - effect.element.clientHeight) + 'px' });
    },
    afterFinishInternal: function(effect) {
      effect.element.hide().undoClipping().undoPositioned();
      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBott=
om});
    }
   }, arguments[1] || { })
  );
};

// Bug in opera makes the TD containing this element expand for a instance=
 after finish
Effect.Squish =3D function(element) {
  return new Effect.Scale(element, window.opera ? 1 : 0, {
    restoreAfterFinish: true,
    beforeSetup: function(effect) {
      effect.element.makeClipping();
    },
    afterFinishInternal: function(effect) {
      effect.element.hide().undoClipping();
    }
  });
};

Effect.Grow =3D function(element) {
  element =3D $(element);
  var options =3D Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.full
  }, arguments[1] || { });
  var oldStyle =3D {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity() };

  var dims =3D element.getDimensions();
  var initialMoveX, initialMoveY;
  var moveX, moveY;

  switch (options.direction) {
    case 'top-left':
      initialMoveX =3D initialMoveY =3D moveX =3D moveY =3D 0;
      break;
    case 'top-right':
      initialMoveX =3D dims.width;
      initialMoveY =3D moveY =3D 0;
      moveX =3D -dims.width;
      break;
    case 'bottom-left':
      initialMoveX =3D moveX =3D 0;
      initialMoveY =3D dims.height;
      moveY =3D -dims.height;
      break;
    case 'bottom-right':
      initialMoveX =3D dims.width;
      initialMoveY =3D dims.height;
      moveX =3D -dims.width;
      moveY =3D -dims.height;
      break;
    case 'center':
      initialMoveX =3D dims.width / 2;
      initialMoveY =3D dims.height / 2;
      moveX =3D -dims.width / 2;
      moveY =3D -dims.height / 2;
      break;
  }

  return new Effect.Move(element, {
    x: initialMoveX,
    y: initialMoveY,
    duration: 0.01,
    beforeSetup: function(effect) {
      effect.element.hide().makeClipping().makePositioned();
    },
    afterFinishInternal: function(effect) {
      new Effect.Parallel(
        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, from:=
 0.0, transition: options.opacityTransition }),
          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: true,=
 transition: options.moveTransition }),
          new Effect.Scale(effect.element, 100, {
            scaleMode: { originalHeight: dims.height, originalWidth: dims.w=
idth },
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: option=
s.scaleTransition, restoreAfterFinish: true})
        ], Object.extend({
             beforeSetup: function(effect) {
               effect.effects[0].element.setStyle({height: '0px'}).show();
             },
             afterFinishInternal: function(effect) {
               effect.effects[0].element.undoClipping().undoPositioned().se=
tStyle(oldStyle);
             }
           }, options)
      );
    }
  });
};

Effect.Shrink =3D function(element) {
  element =3D $(element);
  var options =3D Object.extend({
    direction: 'center',
    moveTransition: Effect.Transitions.sinoidal,
    scaleTransition: Effect.Transitions.sinoidal,
    opacityTransition: Effect.Transitions.none
  }, arguments[1] || { });
  var oldStyle =3D {
    top: element.style.top,
    left: element.style.left,
    height: element.style.height,
    width: element.style.width,
    opacity: element.getInlineOpacity() };

  var dims =3D element.getDimensions();
  var moveX, moveY;

  switch (options.direction) {
    case 'top-left':
      moveX =3D moveY =3D 0;
      break;
    case 'top-right':
      moveX =3D dims.width;
      moveY =3D 0;
      break;
    case 'bottom-left':
      moveX =3D 0;
      moveY =3D dims.height;
      break;
    case 'bottom-right':
      moveX =3D dims.width;
      moveY =3D dims.height;
      break;
    case 'center':
      moveX =3D dims.width / 2;
      moveY =3D dims.height / 2;
      break;
  }

  return new Effect.Parallel(
    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, transit=
ion: options.opacityTransition }),
      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, transit=
ion: options.scaleTransition, restoreAfterFinish: true}),
      new Effect.Move(element, { x: moveX, y: moveY, sync: true, transition=
: options.moveTransition })
    ], Object.extend({
         beforeStartInternal: function(effect) {
           effect.effects[0].element.makePositioned().makeClipping();
         },
         afterFinishInternal: function(effect) {
           effect.effects[0].element.hide().undoClipping().undoPositioned()=
.setStyle(oldStyle); }
       }, options)
  );
};

Effect.Pulsate =3D function(element) {
  element =3D $(element);
  var options    =3D arguments[1] || { },
    oldOpacity =3D element.getInlineOpacity(),
    transition =3D options.transition || Effect.Transitions.linear,
    reverser   =3D function(pos){
      return 1 - transition((-Math.cos((pos*(options.pulses||5)*2)*Math.PI)=
/2) + .5);
    };

  return new Effect.Opacity(element,
    Object.extend(Object.extend({  duration: 2.0, from: 0,
      afterFinishInternal: function(effect) { effect.element.setStyle({opac=
ity: oldOpacity}); }
    }, options), {transition: reverser}));
};

Effect.Fold =3D function(element) {
  element =3D $(element);
  var oldStyle =3D {
    top: element.style.top,
    left: element.style.left,
    width: element.style.width,
    height: element.style.height };
  element.makeClipping();
  return new Effect.Scale(element, 5, Object.extend({
    scaleContent: false,
    scaleX: false,
    afterFinishInternal: function(effect) {
    new Effect.Scale(element, 1, {
      scaleContent: false,
      scaleY: false,
      afterFinishInternal: function(effect) {
        effect.element.hide().undoClipping().setStyle(oldStyle);
      } });
  }}, arguments[1] || { }));
};

Effect.Morph =3D Class.create(Effect.Base, {
  initialize: function(element) {
    this.element =3D $(element);
    if (!this.element) throw(Effect._elementDoesNotExistError);
    var options =3D Object.extend({
      style: { }
    }, arguments[1] || { });

    if (!Object.isString(options.style)) this.style =3D $H(options.style);
    else {
      if (options.style.include(':'))
        this.style =3D options.style.parseStyle();
      else {
        this.element.addClassName(options.style);
        this.style =3D $H(this.element.getStyles());
        this.element.removeClassName(options.style);
        var css =3D this.element.getStyles();
        this.style =3D this.style.reject(function(style) {
          return style.value =3D=3D css[style.key];
        });
        options.afterFinishInternal =3D function(effect) {
          effect.element.addClassName(effect.options.style);
          effect.transforms.each(function(transform) {
            effect.element.style[transform.style] =3D '';
          });
        };
      }
    }
    this.start(options);
  },

  setup: function(){
    function parseColor(color){
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) colo=
r =3D '#ffffff';
      color =3D color.parseColor();
      return $R(0,2).map(function(i){
        return parseInt( color.slice(i*2+1,i*2+3), 16 );
      });
    }
    this.transforms =3D this.style.map(function(pair){
      var property =3D pair[0], value =3D pair[1], unit =3D null;

      if (value.parseColor('#zzzzzz') !=3D '#zzzzzz') {
        value =3D value.parseColor();
        unit  =3D 'color';
      } else if (property =3D=3D 'opacity') {
        value =3D parseFloat(value);
        if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))
          this.element.setStyle({zoom: 1});
      } else if (Element.CSS_LENGTH.test(value)) {
          var components =3D value.match(/^([\+\-]?[0-9\.]+)(.*)$/);
          value =3D parseFloat(components[1]);
          unit =3D (components.length =3D=3D 3) ? components[2] : null;
      }

      var originalValue =3D this.element.getStyle(property);
      return {
        style: property.camelize(),
        originalValue: unit=3D=3D'color' ? parseColor(originalValue) : pars=
eFloat(originalValue || 0),
        targetValue: unit=3D=3D'color' ? parseColor(value) : value,
        unit: unit
      };
    }.bind(this)).reject(function(transform){
      return (
        (transform.originalValue =3D=3D transform.targetValue) ||
        (
          transform.unit !=3D 'color' &&
          (isNaN(transform.originalValue) || isNaN(transform.targetValue))
        )
      );
    });
  },
  update: function(position) {
    var style =3D { }, transform, i =3D this.transforms.length;
    while(i--)
      style[(transform =3D this.transforms[i]).style] =3D
        transform.unit=3D=3D'color' ? '#'+
          (Math.round(transform.originalValue[0]+
            (transform.targetValue[0]-transform.originalValue[0])*position)=
).toColorPart() +
          (Math.round(transform.originalValue[1]+
            (transform.targetValue[1]-transform.originalValue[1])*position)=
).toColorPart() +
          (Math.round(transform.originalValue[2]+
            (transform.targetValue[2]-transform.originalValue[2])*position)=
).toColorPart() :
        (transform.originalValue +
          (transform.targetValue - transform.originalValue) * position).toF=
ixed(3) +
            (transform.unit =3D=3D=3D null ? '' : transform.unit);
    this.element.setStyle(style, true);
  }
});

Effect.Transform =3D Class.create({
  initialize: function(tracks){
    this.tracks  =3D [];
    this.options =3D arguments[1] || { };
    this.addTracks(tracks);
  },
  addTracks: function(tracks){
    tracks.each(function(track){
      track =3D $H(track);
      var data =3D track.values().first();
      this.tracks.push($H({
        ids:     track.keys().first(),
        effect:  Effect.Morph,
        options: { style: data }
      }));
    }.bind(this));
    return this;
  },
  play: function(){
    return new Effect.Parallel(
      this.tracks.map(function(track){
        var ids =3D track.get('ids'), effect =3D track.get('effect'), optio=
ns =3D track.get('options');
        var elements =3D [$(ids) || $$(ids)].flatten();
        return elements.map(function(e){ return new effect(e, Object.extend=
({ sync:true }, options)) });
      }).flatten(),
      this.options
    );
  }
});

Element.CSS_PROPERTIES =3D $w(
  'backgroundColor backgroundPosition borderBottomColor borderBottomStyle=
 ' +
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +
  'fontSize fontWeight height left letterSpacing lineHeight ' +
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight '+
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +
  'right textIndent top width wordSpacing zIndex');

Element.CSS_LENGTH =3D /^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$=
/;

String.__parseStyleElement =3D document.createElement('div');
String.prototype.parseStyle =3D function(){
  var style, styleRules =3D $H();
  if (Prototype.Browser.WebKit)
    style =3D new Element('div',{style:this}).style;
  else {
    String.__parseStyleElement.innerHTML =3D '<div style=3D"' + this + '"><=
/div>';
    style =3D String.__parseStyleElement.childNodes[0].style;
  }

  Element.CSS_PROPERTIES.each(function(property){
    if (style[property]) styleRules.set(property, style[property]);
  });

  if (Prototype.Browser.IE && this.include('opacity'))
    styleRules.set('opacity', this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)=
[1]);

  return styleRules;
};

if (document.defaultView && document.defaultView.getComputedStyle) {
  Element.getStyles =3D function(element) {
    var css =3D document.defaultView.getComputedStyle($(element), null);
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) {
      styles[property] =3D css[property];
      return styles;
    });
  };
} else {
  Element.getStyles =3D function(element) {
    element =3D $(element);
    var css =3D element.currentStyle, styles;
    styles =3D Element.CSS_PROPERTIES.inject({ }, function(results, propert=
y) {
      results[property] =3D css[property];
      return results;
    });
    if (!styles.opacity) styles.opacity =3D element.getOpacity();
    return styles;
  };
}

Effect.Methods =3D {
  morph: function(element, style) {
    element =3D $(element);
    new Effect.Morph(element, Object.extend({ style: style }, arguments[2]=
 || { }));
    return element;
  },
  visualEffect: function(element, effect, options) {
    element =3D $(element);
    var s =3D effect.dasherize().camelize(), klass =3D s.charAt(0).toUpperC=
ase() + s.substring(1);
    new Effect[klass](element, options);
    return element;
  },
  highlight: function(element, options) {
    element =3D $(element);
    new Effect.Highlight(element, options);
    return element;
  }
};

$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+
  'pulsate shake puff squish switchOff dropOut').each(
  function(effect) {
    Effect.Methods[effect] =3D function(element, options){
      element =3D $(element);
      Effect[effect.charAt(0).toUpperCase() + effect.substring(1)](element,=
 options);
      return element;
    };
  }
);

$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes colle=
ctTextNodesIgnoreClass getStyles').each(
  function(f) { Effect.Methods[f] =3D Element[f]; }
);

Element.addMethods(Effect.Methods);
------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: text/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://dev.savetogether.org/javascripts/dragdrop.js?1255380904

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir=
.aculo.us)
//           (c) 2005-2008 Sammi Williams (http://www.oriontransfer.co.nz,=
 sammi@oriontransfer.co.nz)
//
// script.aculo.us is freely distributable under the terms of an MIT-style=
 license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

if(Object.isUndefined(Effect))
  throw("dragdrop.js requires including script.aculo.us' effects.js library=
");

var Droppables =3D {
  drops: [],

  remove: function(element) {
    this.drops =3D this.drops.reject(function(d) { return d.element=3D=3D$(=
element) });
  },

  add: function(element) {
    element =3D $(element);
    var options =3D Object.extend({
      greedy:     true,
      hoverclass: null,
      tree:       false
    }, arguments[1] || { });

    // cache containers
    if(options.containment) {
      options._containers =3D [];
      var containment =3D options.containment;
      if(Object.isArray(containment)) {
        containment.each( function(c) { options._containers.push($(c)) });
      } else {
        options._containers.push($(containment));
      }
    }

    if(options.accept) options.accept =3D [options.accept].flatten();

    Element.makePositioned(element); // fix IE
    options.element =3D element;

    this.drops.push(options);
  },

  findDeepestChild: function(drops) {
    deepest =3D drops[0];

    for (i =3D 1; i < drops.length; ++i)
      if (Element.isParent(drops[i].element, deepest.element))
        deepest =3D drops[i];

    return deepest;
  },

  isContained: function(element, drop) {
    var containmentNode;
    if(drop.tree) {
      containmentNode =3D element.treeNode;
    } else {
      containmentNode =3D element.parentNode;
    }
    return drop._containers.detect(function(c) { return containmentNode =3D=
=3D c });
  },

  isAffected: function(point, element, drop) {
    return (
      (drop.element!=3Delement) &&
      ((!drop._containers) ||
        this.isContained(element, drop)) &&
      ((!drop.accept) ||
        (Element.classNames(element).detect(
          function(v) { return drop.accept.include(v) } ) )) &&
      Position.within(drop.element, point[0], point[1]) );
  },

  deactivate: function(drop) {
    if(drop.hoverclass)
      Element.removeClassName(drop.element, drop.hoverclass);
    this.last_active =3D null;
  },

  activate: function(drop) {
    if(drop.hoverclass)
      Element.addClassName(drop.element, drop.hoverclass);
    this.last_active =3D drop;
  },

  show: function(point, element) {
    if(!this.drops.length) return;
    var drop, affected =3D [];

    this.drops.each( function(drop) {
      if(Droppables.isAffected(point, element, drop))
        affected.push(drop);
    });

    if(affected.length>0)
      drop =3D Droppables.findDeepestChild(affected);

    if(this.last_active && this.last_active !=3D drop) this.deactivate(this=
.last_active);
    if (drop) {
      Position.within(drop.element, point[0], point[1]);
      if(drop.onHover)
        drop.onHover(element, drop.element, Position.overlap(drop.overlap,=
 drop.element));

      if (drop !=3D this.last_active) Droppables.activate(drop);
    }
  },

  fire: function(event, element) {
    if(!this.last_active) return;
    Position.prepare();

    if (this.isAffected([Event.pointerX(event), Event.pointerY(event)], ele=
ment, this.last_active))
      if (this.last_active.onDrop) {
        this.last_active.onDrop(element, this.last_active.element, event);
        return true;
      }
  },

  reset: function() {
    if(this.last_active)
      this.deactivate(this.last_active);
  }
};

var Draggables =3D {
  drags: [],
  observers: [],

  register: function(draggable) {
    if(this.drags.length =3D=3D 0) {
      this.eventMouseUp   =3D this.endDrag.bindAsEventListener(this);
      this.eventMouseMove =3D this.updateDrag.bindAsEventListener(this);
      this.eventKeypress  =3D this.keyPress.bindAsEventListener(this);

      Event.observe(document, "mouseup", this.eventMouseUp);
      Event.observe(document, "mousemove", this.eventMouseMove);
      Event.observe(document, "keypress", this.eventKeypress);
    }
    this.drags.push(draggable);
  },

  unregister: function(draggable) {
    this.drags =3D this.drags.reject(function(d) { return d=3D=3Ddraggable=
 });
    if(this.drags.length =3D=3D 0) {
      Event.stopObserving(document, "mouseup", this.eventMouseUp);
      Event.stopObserving(document, "mousemove", this.eventMouseMove);
      Event.stopObserving(document, "keypress", this.eventKeypress);
    }
  },

  activate: function(draggable) {
    if(draggable.options.delay) {
      this._timeout =3D setTimeout(function() {
        Draggables._timeout =3D null;
        window.focus();
        Draggables.activeDraggable =3D draggable;
      }.bind(this), draggable.options.delay);
    } else {
      window.focus(); // allows keypress events if window isn't currently=
 focused, fails for Safari
      this.activeDraggable =3D draggable;
    }
  },

  deactivate: function() {
    this.activeDraggable =3D null;
  },

  updateDrag: function(event) {
    if(!this.activeDraggable) return;
    var pointer =3D [Event.pointerX(event), Event.pointerY(event)];
    // Mozilla-based browsers fire successive mousemove events with
    // the same coordinates, prevent needless redrawing (moz bug?)
    if(this._lastPointer && (this._lastPointer.inspect() =3D=3D pointer.ins=
pect())) return;
    this._lastPointer =3D pointer;

    this.activeDraggable.updateDrag(event, pointer);
  },

  endDrag: function(event) {
    if(this._timeout) {
      clearTimeout(this._timeout);
      this._timeout =3D null;
    }
    if(!this.activeDraggable) return;
    this._lastPointer =3D null;
    this.activeDraggable.endDrag(event);
    this.activeDraggable =3D null;
  },

  keyPress: function(event) {
    if(this.activeDraggable)
      this.activeDraggable.keyPress(event);
  },

  addObserver: function(observer) {
    this.observers.push(observer);
    this._cacheObserverCallbacks();
  },

  removeObserver: function(element) {  // element instead of observer fixes=
 mem leaks
    this.observers =3D this.observers.reject( function(o) { return o.elemen=
t=3D=3Delement });
    this._cacheObserverCallbacks();
  },

  notify: function(eventName, draggable, event) {  // 'onStart', 'onEnd',=
 'onDrag'
    if(this[eventName+'Count'] > 0)
      this.observers.each( function(o) {
        if(o[eventName]) o[eventName](eventName, draggable, event);
      });
    if(draggable.options[eventName]) draggable.options[eventName](draggable=
, event);
  },

  _cacheObserverCallbacks: function() {
    ['onStart','onEnd','onDrag'].each( function(eventName) {
      Draggables[eventName+'Count'] =3D Draggables.observers.select(
        function(o) { return o[eventName]; }
      ).length;
    });
  }
};

/*-------------------------------------------------------------------------=
-*/

var Draggable =3D Class.create({
  initialize: function(element) {
    var defaults =3D {
      handle: false,
      reverteffect: function(element, top_offset, left_offset) {
        var dur =3D Math.sqrt(Math.abs(top_offset^2)+Math.abs(left_offset^2=
))*0.02;
        new Effect.Move(element, { x: -left_offset, y: -top_offset, duratio=
n: dur,
          queue: {scope:'_draggable', position:'end'}
        });
      },
      endeffect: function(element) {
        var toOpacity =3D Object.isNumber(element._opacity) ? element._opac=
ity : 1.0;
        new Effect.Opacity(element, {duration:0.2, from:0.7, to:toOpacity,
          queue: {scope:'_draggable', position:'end'},
          afterFinish: function(){
            Draggable._dragging[element] =3D false
          }
        });
      },
      zindex: 1000,
      revert: false,
      quiet: false,
      scroll: false,
      scrollSensitivity: 20,
      scrollSpeed: 15,
      snap: false,  // false, or xy or [x,y] or function(x,y){ return [x,y]=
 }
      delay: 0
    };

    if(!arguments[1] || Object.isUndefined(arguments[1].endeffect))
      Object.extend(defaults, {
        starteffect: function(element) {
          element._opacity =3D Element.getOpacity(element);
          Draggable._dragging[element] =3D true;
          new Effect.Opacity(element, {duration:0.2, from:element._opacity,=
 to:0.7});
        }
      });

    var options =3D Object.extend(defaults, arguments[1] || { });

    this.element =3D $(element);

    if(options.handle && Object.isString(options.handle))
      this.handle =3D this.element.down('.'+options.handle, 0);

    if(!this.handle) this.handle =3D $(options.handle);
    if(!this.handle) this.handle =3D this.element;

    if(options.scroll && !options.scroll.scrollTo && !options.scroll.outerH=
TML) {
      options.scroll =3D $(options.scroll);
      this._isScrollChild =3D Element.childOf(this.element, options.scroll);
    }

    Element.makePositioned(this.element); // fix IE

    this.options  =3D options;
    this.dragging =3D false;

    this.eventMouseDown =3D this.initDrag.bindAsEventListener(this);
    Event.observe(this.handle, "mousedown", this.eventMouseDown);

    Draggables.register(this);
  },

  destroy: function() {
    Event.stopObserving(this.handle, "mousedown", this.eventMouseDown);
    Draggables.unregister(this);
  },

  currentDelta: function() {
    return([
      parseInt(Element.getStyle(this.element,'left') || '0'),
      parseInt(Element.getStyle(this.element,'top') || '0')]);
  },

  initDrag: function(event) {
    if(!Object.isUndefined(Draggable._dragging[this.element]) &&
      Draggable._dragging[this.element]) return;
    if(Event.isLeftClick(event)) {
      // abort on form elements, fixes a Firefox issue
      var src =3D Event.element(event);
      if((tag_name =3D src.tagName.toUpperCase()) && (
        tag_name=3D=3D'INPUT' ||
        tag_name=3D=3D'SELECT' ||
        tag_name=3D=3D'OPTION' ||
        tag_name=3D=3D'BUTTON' ||
        tag_name=3D=3D'TEXTAREA')) return;

      var pointer =3D [Event.pointerX(event), Event.pointerY(event)];
      var pos     =3D Position.cumulativeOffset(this.element);
      this.offset =3D [0,1].map( function(i) { return (pointer[i] - pos[i])=
 });

      Draggables.activate(this);
      Event.stop(event);
    }
  },

  startDrag: function(event) {
    this.dragging =3D true;
    if(!this.delta)
      this.delta =3D this.currentDelta();

    if(this.options.zindex) {
      this.originalZ =3D parseInt(Element.getStyle(this.element,'z-index')=
 || 0);
      this.element.style.zIndex =3D this.options.zindex;
    }

    if(this.options.ghosting) {
      this._clone =3D this.element.cloneNode(true);
      this._originallyAbsolute =3D (this.element.getStyle('position') =3D=
=3D 'absolute');
      if (!this._originallyAbsolute)
        Position.absolutize(this.element);
      this.element.parentNode.insertBefore(this._clone, this.element);
    }

    if(this.options.scroll) {
      if (this.options.scroll =3D=3D window) {
        var where =3D this._getWindowScroll(this.options.scroll);
        this.originalScrollLeft =3D where.left;
        this.originalScrollTop =3D where.top;
      } else {
        this.originalScrollLeft =3D this.options.scroll.scrollLeft;
        this.originalScrollTop =3D this.options.scroll.scrollTop;
      }
    }

    Draggables.notify('onStart', this, event);

    if(this.options.starteffect) this.options.starteffect(this.element);
  },

  updateDrag: function(event, pointer) {
    if(!this.dragging) this.startDrag(event);

    if(!this.options.quiet){
      Position.prepare();
      Droppables.show(pointer, this.element);
    }

    Draggables.notify('onDrag', this, event);

    this.draw(pointer);
    if(this.options.change) this.options.change(this);

    if(this.options.scroll) {
      this.stopScrolling();

      var p;
      if (this.options.scroll =3D=3D window) {
        with(this._getWindowScroll(this.options.scroll)) { p =3D [ left, to=
p, left+width, top+height ]; }
      } else {
        p =3D Position.page(this.options.scroll);
        p[0] +=3D this.options.scroll.scrollLeft + Position.deltaX;
        p[1] +=3D this.options.scroll.scrollTop + Position.deltaY;
        p.push(p[0]+this.options.scroll.offsetWidth);
        p.push(p[1]+this.options.scroll.offsetHeight);
      }
      var speed =3D [0,0];
      if(pointer[0] < (p[0]+this.options.scrollSensitivity)) speed[0] =3D=
 pointer[0]-(p[0]+this.options.scrollSensitivity);
      if(pointer[1] < (p[1]+this.options.scrollSensitivity)) speed[1] =3D=
 pointer[1]-(p[1]+this.options.scrollSensitivity);
      if(pointer[0] > (p[2]-this.options.scrollSensitivity)) speed[0] =3D=
 pointer[0]-(p[2]-this.options.scrollSensitivity);
      if(pointer[1] > (p[3]-this.options.scrollSensitivity)) speed[1] =3D=
 pointer[1]-(p[3]-this.options.scrollSensitivity);
      this.startScrolling(speed);
    }

    // fix AppleWebKit rendering
    if(Prototype.Browser.WebKit) window.scrollBy(0,0);

    Event.stop(event);
  },

  finishDrag: function(event, success) {
    this.dragging =3D false;

    if(this.options.quiet){
      Position.prepare();
      var pointer =3D [Event.pointerX(event), Event.pointerY(event)];
      Droppables.show(pointer, this.element);
    }

    if(this.options.ghosting) {
      if (!this._originallyAbsolute)
        Position.relativize(this.element);
      delete this._originallyAbsolute;
      Element.remove(this._clone);
      this._clone =3D null;
    }

    var dropped =3D false;
    if(success) {
      dropped =3D Droppables.fire(event, this.element);
      if (!dropped) dropped =3D false;
    }
    if(dropped && this.options.onDropped) this.options.onDropped(this.eleme=
nt);
    Draggables.notify('onEnd', this, event);

    var revert =3D this.options.revert;
    if(revert && Object.isFunction(revert)) revert =3D revert(this.element);

    var d =3D this.currentDelta();
    if(revert && this.options.reverteffect) {
      if (dropped =3D=3D 0 || revert !=3D 'failure')
        this.options.reverteffect(this.element,
          d[1]-this.delta[1], d[0]-this.delta[0]);
    } else {
      this.delta =3D d;
    }

    if(this.options.zindex)
      this.element.style.zIndex =3D this.originalZ;

    if(this.options.endeffect)
      this.options.endeffect(this.element);

    Draggables.deactivate(this);
    Droppables.reset();
  },

  keyPress: function(event) {
    if(event.keyCode!=3DEvent.KEY_ESC) return;
    this.finishDrag(event, false);
    Event.stop(event);
  },

  endDrag: function(event) {
    if(!this.dragging) return;
    this.stopScrolling();
    this.finishDrag(event, true);
    Event.stop(event);
  },

  draw: function(point) {
    var pos =3D Position.cumulativeOffset(this.element);
    if(this.options.ghosting) {
      var r   =3D Position.realOffset(this.element);
      pos[0] +=3D r[0] - Position.deltaX; pos[1] +=3D r[1] - Position.delta=
Y;
    }

    var d =3D this.currentDelta();
    pos[0] -=3D d[0]; pos[1] -=3D d[1];

    if(this.options.scroll && (this.options.scroll !=3D window && this._isS=
crollChild)) {
      pos[0] -=3D this.options.scroll.scrollLeft-this.originalScrollLeft;
      pos[1] -=3D this.options.scroll.scrollTop-this.originalScrollTop;
    }

    var p =3D [0,1].map(function(i){
      return (point[i]-pos[i]-this.offset[i])
    }.bind(this));

    if(this.options.snap) {
      if(Object.isFunction(this.options.snap)) {
        p =3D this.options.snap(p[0],p[1],this);
      } else {
      if(Object.isArray(this.options.snap)) {
        p =3D p.map( function(v, i) {
          return (v/this.options.snap[i]).round()*this.options.snap[i] }.bi=
nd(this));
      } else {
        p =3D p.map( function(v) {
          return (v/this.options.snap).round()*this.options.snap }.bind(thi=
s));
      }
    }}

    var style =3D this.element.style;
    if((!this.options.constraint) || (this.options.constraint=3D=3D'horizon=
tal'))
      style.left =3D p[0] + "px";
    if((!this.options.constraint) || (this.options.constraint=3D=3D'vertica=
l'))
      style.top  =3D p[1] + "px";

    if(style.visibility=3D=3D"hidden") style.visibility =3D ""; // fix geck=
o rendering
  },

  stopScrolling: function() {
    if(this.scrollInterval) {
      clearInterval(this.scrollInterval);
      this.scrollInterval =3D null;
      Draggables._lastScrollPointer =3D null;
    }
  },

  startScrolling: function(speed) {
    if(!(speed[0] || speed[1])) return;
    this.scrollSpeed =3D [speed[0]*this.options.scrollSpeed,speed[1]*this.o=
ptions.scrollSpeed];
    this.lastScrolled =3D new Date();
    this.scrollInterval =3D setInterval(this.scroll.bind(this), 10);
  },

  scroll: function() {
    var current =3D new Date();
    var delta =3D current - this.lastScrolled;
    this.lastScrolled =3D current;
    if(this.options.scroll =3D=3D window) {
      with (this._getWindowScroll(this.options.scroll)) {
        if (this.scrollSpeed[0] || this.scrollSpeed[1]) {
          var d =3D delta / 1000;
          this.options.scroll.scrollTo( left + d*this.scrollSpeed[0], top=
 + d*this.scrollSpeed[1] );
        }
      }
    } else {
      this.options.scroll.scrollLeft +=3D this.scrollSpeed[0] * delta / 100=
0;
      this.options.scroll.scrollTop  +=3D this.scrollSpeed[1] * delta / 100=
0;
    }

    Position.prepare();
    Droppables.show(Draggables._lastPointer, this.element);
    Draggables.notify('onDrag', this);
    if (this._isScrollChild) {
      Draggables._lastScrollPointer =3D Draggables._lastScrollPointer || $A=
(Draggables._lastPointer);
      Draggables._lastScrollPointer[0] +=3D this.scrollSpeed[0] * delta /=
 1000;
      Draggables._lastScrollPointer[1] +=3D this.scrollSpeed[1] * delta /=
 1000;
      if (Draggables._lastScrollPointer[0] < 0)
        Draggables._lastScrollPointer[0] =3D 0;
      if (Draggables._lastScrollPointer[1] < 0)
        Draggables._lastScrollPointer[1] =3D 0;
      this.draw(Draggables._lastScrollPointer);
    }

    if(this.options.change) this.options.change(this);
  },

  _getWindowScroll: function(w) {
    var T, L, W, H;
    with (w.document) {
      if (w.document.documentElement && documentElement.scrollTop) {
        T =3D documentElement.scrollTop;
        L =3D documentElement.scrollLeft;
      } else if (w.document.body) {
        T =3D body.scrollTop;
        L =3D body.scrollLeft;
      }
      if (w.innerWidth) {
        W =3D w.innerWidth;
        H =3D w.innerHeight;
      } else if (w.document.documentElement && documentElement.clientWidth)=
 {
        W =3D documentElement.clientWidth;
        H =3D documentElement.clientHeight;
      } else {
        W =3D body.offsetWidth;
        H =3D body.offsetHeight;
      }
    }
    return { top: T, left: L, width: W, height: H };
  }
});

Draggable._dragging =3D { };

/*-------------------------------------------------------------------------=
-*/

var SortableObserver =3D Class.create({
  initialize: function(element, observer) {
    this.element   =3D $(element);
    this.observer  =3D observer;
    this.lastValue =3D Sortable.serialize(this.element);
  },

  onStart: function() {
    this.lastValue =3D Sortable.serialize(this.element);
  },

  onEnd: function() {
    Sortable.unmark();
    if(this.lastValue !=3D Sortable.serialize(this.element))
      this.observer(this.element)
  }
});

var Sortable =3D {
  SERIALIZE_RULE: /^[^_\-](?:[A-Za-z0-9\-\_]*)[_](.*)$/,

  sortables: { },

  _findRootElement: function(element) {
    while (element.tagName.toUpperCase() !=3D "BODY") {
      if(element.id && Sortable.sortables[element.id]) return element;
      element =3D element.parentNode;
    }
  },

  options: function(element) {
    element =3D Sortable._findRootElement($(element));
    if(!element) return;
    return Sortable.sortables[element.id];
  },

  destroy: function(element){
    element =3D $(element);
    var s =3D Sortable.sortables[element.id];

    if(s) {
      Draggables.removeObserver(s.element);
      s.droppables.each(function(d){ Droppables.remove(d) });
      s.draggables.invoke('destroy');

      delete Sortable.sortables[s.element.id];
    }
  },

  create: function(element) {
    element =3D $(element);
    var options =3D Object.extend({
      element:     element,
      tag:         'li',       // assumes li children, override with tag:=
 'tagname'
      dropOnEmpty: false,
      tree:        false,
      treeTag:     'ul',
      overlap:     'vertical', // one of 'vertical', 'horizontal'
      constraint:  'vertical', // one of 'vertical', 'horizontal', false
      containment: element,    // also takes array of elements (or id's);=
 or false
      handle:      false,      // or a CSS class
      only:        false,
      delay:       0,
      hoverclass:  null,
      ghosting:    false,
      quiet:       false,
      scroll:      false,
      scrollSensitivity: 20,
      scrollSpeed: 15,
      format:      this.SERIALIZE_RULE,

      // these take arrays of elements or ids and can be
      // used for better initialization performance
      elements:    false,
      handles:     false,

      onChange:    Prototype.emptyFunction,
      onUpdate:    Prototype.emptyFunction
    }, arguments[1] || { });

    // clear any old sortable with same element
    this.destroy(element);

    // build options for the draggables
    var options_for_draggable =3D {
      revert:      true,
      quiet:       options.quiet,
      scroll:      options.scroll,
      scrollSpeed: options.scrollSpeed,
      scrollSensitivity: options.scrollSensitivity,
      delay:       options.delay,
      ghosting:    options.ghosting,
      constraint:  options.constraint,
      handle:      options.handle };

    if(options.starteffect)
      options_for_draggable.starteffect =3D options.starteffect;

    if(options.reverteffect)
      options_for_draggable.reverteffect =3D options.reverteffect;
    else
      if(options.ghosting) options_for_draggable.reverteffect =3D function(=
element) {
        element.style.top  =3D 0;
        element.style.left =3D 0;
      };

    if(options.endeffect)
      options_for_draggable.endeffect =3D options.endeffect;

    if(options.zindex)
      options_for_draggable.zindex =3D options.zindex;

    // build options for the droppables
    var options_for_droppable =3D {
      overlap:     options.overlap,
      containment: options.containment,
      tree:        options.tree,
      hoverclass:  options.hoverclass,
      onHover:     Sortable.onHover
    };

    var options_for_tree =3D {
      onHover:      Sortable.onEmptyHover,
      overlap:      options.overlap,
      containment:  options.containment,
      hoverclass:   options.hoverclass
    };

    // fix for gecko engine
    Element.cleanWhitespace(element);

    options.draggables =3D [];
    options.droppables =3D [];

    // drop on empty handling
    if(options.dropOnEmpty || options.tree) {
      Droppables.add(element, options_for_tree);
      options.droppables.push(element);
    }

    (options.elements || this.findElements(element, options) || []).each(=
 function(e,i) {
      var handle =3D options.handles ? $(options.handles[i]) :
        (options.handle ? $(e).select('.' + options.handle)[0] : e);
      options.draggables.push(
        new Draggable(e, Object.extend(options_for_draggable, { handle: han=
dle })));
      Droppables.add(e, options_for_droppable);
      if(options.tree) e.treeNode =3D element;
      options.droppables.push(e);
    });

    if(options.tree) {
      (Sortable.findTreeElements(element, options) || []).each( function(e)=
 {
        Droppables.add(e, options_for_tree);
        e.treeNode =3D element;
        options.droppables.push(e);
      });
    }

    // keep reference
    this.sortables[element.id] =3D options;

    // for onupdate
    Draggables.addObserver(new SortableObserver(element, options.onUpdate));

  },

  // return all suitable-for-sortable elements in a guaranteed order
  findElements: function(element, options) {
    return Element.findChildren(
      element, options.only, options.tree ? true : false, options.tag);
  },

  findTreeElements: function(element, options) {
    return Element.findChildren(
      element, options.only, options.tree ? true : false, options.treeTag);
  },

  onHover: function(element, dropon, overlap) {
    if(Element.isParent(dropon, element)) return;

    if(overlap > .33 && overlap < .66 && Sortable.options(dropon).tree) {
      return;
    } else if(overlap>0.5) {
      Sortable.mark(dropon, 'before');
      if(dropon.previousSibling !=3D element) {
        var oldParentNode =3D element.parentNode;
        element.style.visibility =3D "hidden"; // fix gecko rendering
        dropon.parentNode.insertBefore(element, dropon);
        if(dropon.parentNode!=3DoldParentNode)
          Sortable.options(oldParentNode).onChange(element);
        Sortable.options(dropon.parentNode).onChange(element);
      }
    } else {
      Sortable.mark(dropon, 'after');
      var nextElement =3D dropon.nextSibling || null;
      if(nextElement !=3D element) {
        var oldParentNode =3D element.parentNode;
        element.style.visibility =3D "hidden"; // fix gecko rendering
        dropon.parentNode.insertBefore(element, nextElement);
        if(dropon.parentNode!=3DoldParentNode)
          Sortable.options(oldParentNode).onChange(element);
        Sortable.options(dropon.parentNode).onChange(element);
      }
    }
  },

  onEmptyHover: function(element, dropon, overlap) {
    var oldParentNode =3D element.parentNode;
    var droponOptions =3D Sortable.options(dropon);

    if(!Element.isParent(dropon, element)) {
      var index;

      var children =3D Sortable.findElements(dropon, {tag: droponOptions.ta=
g, only: droponOptions.only});
      var child =3D null;

      if(children) {
        var offset =3D Element.offsetSize(dropon, droponOptions.overlap) *=
 (1.0 - overlap);

        for (index =3D 0; index < children.length; index +=3D 1) {
          if (offset - Element.offsetSize (children[index], droponOptions.o=
verlap) >=3D 0) {
            offset -=3D Element.offsetSize (children[index], droponOptions.=
overlap);
          } else if (offset - (Element.offsetSize (children[index], droponO=
ptions.overlap) / 2) >=3D 0) {
            child =3D index + 1 < children.length ? children[index + 1] :=
 null;
            break;
          } else {
            child =3D children[index];
            break;
          }
        }
      }

      dropon.insertBefore(element, child);

      Sortable.options(oldParentNode).onChange(element);
      droponOptions.onChange(element);
    }
  },

  unmark: function() {
    if(Sortable._marker) Sortable._marker.hide();
  },

  mark: function(dropon, position) {
    // mark on ghosting only
    var sortable =3D Sortable.options(dropon.parentNode);
    if(sortable && !sortable.ghosting) return;

    if(!Sortable._marker) {
      Sortable._marker =3D
        ($('dropmarker') || Element.extend(document.createElement('DIV'))).
          hide().addClassName('dropmarker').setStyle({position:'absolute'});
      document.getElementsByTagName("body").item(0).appendChild(Sortable._m=
arker);
    }
    var offsets =3D Position.cumulativeOffset(dropon);
    Sortable._marker.setStyle({left: offsets[0]+'px', top: offsets[1] + 'px=
'});

    if(position=3D=3D'after')
      if(sortable.overlap =3D=3D 'horizontal')
        Sortable._marker.setStyle({left: (offsets[0]+dropon.clientWidth) +=
 'px'});
      else
        Sortable._marker.setStyle({top: (offsets[1]+dropon.clientHeight) +=
 'px'});

    Sortable._marker.show();
  },

  _tree: function(element, options, parent) {
    var children =3D Sortable.findElements(element, options) || [];

    for (var i =3D 0; i < children.length; ++i) {
      var match =3D children[i].id.match(options.format);

      if (!match) continue;

      var child =3D {
        id: encodeURIComponent(match ? match[1] : null),
        element: element,
        parent: parent,
        children: [],
        position: parent.children.length,
        container: $(children[i]).down(options.treeTag)
      };

      /* Get the element containing the children and recurse over it */
      if (child.container)
        this._tree(child.container, options, child);

      parent.children.push (child);
    }

    return parent;
  },

  tree: function(element) {
    element =3D $(element);
    var sortableOptions =3D this.options(element);
    var options =3D Object.extend({
      tag: sortableOptions.tag,
      treeTag: sortableOptions.treeTag,
      only: sortableOptions.only,
      name: element.id,
      format: sortableOptions.format
    }, arguments[1] || { });

    var root =3D {
      id: null,
      parent: null,
      children: [],
      container: element,
      position: 0
    };

    return Sortable._tree(element, options, root);
  },

  /* Construct a [i] index for a particular node */
  _constructIndex: function(node) {
    var index =3D '';
    do {
      if (node.id) index =3D '[' + node.position + ']' + index;
    } while ((node =3D node.parent) !=3D null);
    return index;
  },

  sequence: function(element) {
    element =3D $(element);
    var options =3D Object.extend(this.options(element), arguments[1] || {=
 });

    return $(this.findElements(element, options) || []).map( function(item)=
 {
      return item.id.match(options.format) ? item.id.match(options.format)[=
1] : '';
    });
  },

  setSequence: function(element, new_sequence) {
    element =3D $(element);
    var options =3D Object.extend(this.options(element), arguments[2] || {=
 });

    var nodeMap =3D { };
    this.findElements(element, options).each( function(n) {
        if (n.id.match(options.format))
            nodeMap[n.id.match(options.format)[1]] =3D [n, n.parentNode];
        n.parentNode.removeChild(n);
    });

    new_sequence.each(function(ident) {
      var n =3D nodeMap[ident];
      if (n) {
        n[1].appendChild(n[0]);
        delete nodeMap[ident];
      }
    });
  },

  serialize: function(element) {
    element =3D $(element);
    var options =3D Object.extend(Sortable.options(element), arguments[1]=
 || { });
    var name =3D encodeURIComponent(
      (arguments[1] && arguments[1].name) ? arguments[1].name : element.id);

    if (options.tree) {
      return Sortable.tree(element, arguments[1]).children.map( function (i=
tem) {
        return [name + Sortable._constructIndex(item) + "[id]=3D" +
                encodeURIComponent(item.id)].concat(item.children.map(argum=
ents.callee));
      }).flatten().join('&');
    } else {
      return Sortable.sequence(element, arguments[1]).map( function(item)=
 {
        return name + "[]=3D" + encodeURIComponent(item);
      }).join('&');
    }
  }
};

// Returns true if child is contained within element
Element.isParent =3D function(child, element) {
  if (!child.parentNode || child =3D=3D element) return false;
  if (child.parentNode =3D=3D element) return true;
  return Element.isParent(child.parentNode, element);
};

Element.findChildren =3D function(element, only, recursive, tagName) {
  if(!element.hasChildNodes()) return null;
  tagName =3D tagName.toUpperCase();
  if(only) only =3D [only].flatten();
  var elements =3D [];
  $A(element.childNodes).each( function(e) {
    if(e.tagName && e.tagName.toUpperCase()=3D=3DtagName &&
      (!only || (Element.classNames(e).detect(function(v) { return only.inc=
lude(v) }))))
        elements.push(e);
    if(recursive) {
      var grandchildren =3D Element.findChildren(e, only, recursive, tagNam=
e);
      if(grandchildren) elements.push(grandchildren);
    }
  });

  return (elements.length>0 ? elements.flatten() : []);
};

Element.offsetSize =3D function (element, type) {
  return element['offset' + ((type=3D=3D'vertical' || type=3D=3D'height')=
 ? 'Height' : 'Width')];
};
------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: text/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://dev.savetogether.org/javascripts/controls.js?1255380904

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, http://mir=
.aculo.us)
//           (c) 2005-2008 Ivan Krstic (http://blogs.law.harvard.edu/ivan)
//           (c) 2005-2008 Jon Tirsen (http://www.tirsen.com)
// Contributors:
//  Richard Livsey
//  Rahul Bhargava
//  Rob Wills
//
// script.aculo.us is freely distributable under the terms of an MIT-style=
 license.
// For details, see the script.aculo.us web site: http://script.aculo.us/

// Autocompleter.Base handles all the autocompletion functionality
// that's independent of the data source for autocompletion. This
// includes drawing the autocompletion menu, observing keyboard
// and mouse events, and similar.
//
// Specific autocompleters need to provide, at the very least,
// a getUpdatedChoices function that will be invoked every time
// the text inside the monitored textbox changes. This method
// should get the text for which to provide autocompletion by
// invoking this.getToken(), NOT by directly accessing
// this.element.value. This is to allow incremental tokenized
// autocompletion. Specific auto-completion logic (AJAX, etc)
// belongs in getUpdatedChoices.
//
// Tokenized incremental autocompletion is enabled automatically
// when an autocompleter is instantiated with the 'tokens' option
// in the options parameter, e.g.:
// new Ajax.Autocompleter('id','upd', '/url/', { tokens: ',' });
// will incrementally autocomplete with a comma as the token.
// Additionally, ',' in the above example can be replaced with
// a token array, e.g. { tokens: [',', '\n'] } which
// enables autocompletion on multiple tokens. This is most
// useful when one of the tokens is \n (a newline), as it
// allows smart autocompletion after linebreaks.

if(typeof Effect =3D=3D 'undefined')
  throw("controls.js requires including script.aculo.us' effects.js library=
");

var Autocompleter =3D { };
Autocompleter.Base =3D Class.create({
  baseInitialize: function(element, update, options) {
    element          =3D $(element);
    this.element     =3D element;
    this.update      =3D $(update);
    this.hasFocus    =3D false;
    this.changed     =3D false;
    this.active      =3D false;
    this.index       =3D 0;
    this.entryCount  =3D 0;
    this.oldElementValue =3D this.element.value;

    if(this.setOptions)
      this.setOptions(options);
    else
      this.options =3D options || { };

    this.options.paramName    =3D this.options.paramName || this.element.na=
me;
    this.options.tokens       =3D this.options.tokens || [];
    this.options.frequency    =3D this.options.frequency || 0.4;
    this.options.minChars     =3D this.options.minChars || 1;
    this.options.onShow       =3D this.options.onShow ||
      function(element, update){
        if(!update.style.position || update.style.position=3D=3D'absolute')=
 {
          update.style.position =3D 'absolute';
          Position.clone(element, update, {
            setHeight: false,
            offsetTop: element.offsetHeight
          });
        }
        Effect.Appear(update,{duration:0.15});
      };
    this.options.onHide =3D this.options.onHide ||
      function(element, update){ new Effect.Fade(update,{duration:0.15}) };

    if(typeof(this.options.tokens) =3D=3D 'string')
      this.options.tokens =3D new Array(this.options.tokens);
    // Force carriage returns as token delimiters anyway
    if (!this.options.tokens.include('\n'))
      this.options.tokens.push('\n');

    this.observer =3D null;

    this.element.setAttribute('autocomplete','off');

    Element.hide(this.update);

    Event.observe(this.element, 'blur', this.onBlur.bindAsEventListener(thi=
s));
    Event.observe(this.element, 'keydown', this.onKeyPress.bindAsEventListe=
ner(this));
  },

  show: function() {
    if(Element.getStyle(this.update, 'display')=3D=3D'none') this.options.o=
nShow(this.element, this.update);
    if(!this.iefix &&
      (Prototype.Browser.IE) &&
      (Element.getStyle(this.update, 'position')=3D=3D'absolute')) {
      new Insertion.After(this.update,
       '<iframe id=3D"' + this.update.id + '_iefix" '+
       'style=3D"display:none;position:absolute;filter:progid:DXImageTransf=
orm.Microsoft.Alpha(opacity=3D0);" ' +
       'src=3D"javascript:false;" frameborder=3D"0" scrolling=3D"no"></ifra=
me>');
      this.iefix =3D $(this.update.id+'_iefix');
    }
    if(this.iefix) setTimeout(this.fixIEOverlapping.bind(this), 50);
  },

  fixIEOverlapping: function() {
    Position.clone(this.update, this.iefix, {setTop:(!this.update.style.hei=
ght)});
    this.iefix.style.zIndex =3D 1;
    this.update.style.zIndex =3D 2;
    Element.show(this.iefix);
  },

  hide: function() {
    this.stopIndicator();
    if(Element.getStyle(this.update, 'display')!=3D'none') this.options.onH=
ide(this.element, this.update);
    if(this.iefix) Element.hide(this.iefix);
  },

  startIndicator: function() {
    if(this.options.indicator) Element.show(this.options.indicator);
  },

  stopIndicator: function() {
    if(this.options.indicator) Element.hide(this.options.indicator);
  },

  onKeyPress: function(event) {
    if(this.active)
      switch(event.keyCode) {
       case Event.KEY_TAB:
       case Event.KEY_RETURN:
         this.selectEntry();
         Event.stop(event);
       case Event.KEY_ESC:
         this.hide();
         this.active =3D false;
         Event.stop(event);
         return;
       case Event.KEY_LEFT:
       case Event.KEY_RIGHT:
         return;
       case Event.KEY_UP:
         this.markPrevious();
         this.render();
         Event.stop(event);
         return;
       case Event.KEY_DOWN:
         this.markNext();
         this.render();
         Event.stop(event);
         return;
      }
     else
       if(event.keyCode=3D=3DEvent.KEY_TAB || event.keyCode=3D=3DEvent.KEY_=
RETURN ||
         (Prototype.Browser.WebKit > 0 && event.keyCode =3D=3D 0)) return;

    this.changed =3D true;
    this.hasFocus =3D true;

    if(this.observer) clearTimeout(this.observer);
      this.observer =3D
        setTimeout(this.onObserverEvent.bind(this), this.options.frequency*=
1000);
  },

  activate: function() {
    this.changed =3D false;
    this.hasFocus =3D true;
    this.getUpdatedChoices();
  },

  onHover: function(event) {
    var element =3D Event.findElement(event, 'LI');
    if(this.index !=3D element.autocompleteIndex)
    {
        this.index =3D element.autocompleteIndex;
        this.render();
    }
    Event.stop(event);
  },

  onClick: function(event) {
    var element =3D Event.findElement(event, 'LI');
    this.index =3D element.autocompleteIndex;
    this.selectEntry();
    this.hide();
  },

  onBlur: function(event) {
    // needed to make click events working
    setTimeout(this.hide.bind(this), 250);
    this.hasFocus =3D false;
    this.active =3D false;
  },

  render: function() {
    if(this.entryCount > 0) {
      for (var i =3D 0; i < this.entryCount; i++)
        this.index=3D=3Di ?
          Element.addClassName(this.getEntry(i),"selected") :
          Element.removeClassName(this.getEntry(i),"selected");
      if(this.hasFocus) {
        this.show();
        this.active =3D true;
      }
    } else {
      this.active =3D false;
      this.hide();
    }
  },

  markPrevious: function() {
    if(this.index > 0) this.index--;
      else this.index =3D this.entryCount-1;
    this.getEntry(this.index).scrollIntoView(true);
  },

  markNext: function() {
    if(this.index < this.entryCount-1) this.index++;
      else this.index =3D 0;
    this.getEntry(this.index).scrollIntoView(false);
  },

  getEntry: function(index) {
    return this.update.firstChild.childNodes[index];
  },

  getCurrentEntry: function() {
    return this.getEntry(this.index);
  },

  selectEntry: function() {
    this.active =3D false;
    this.updateElement(this.getCurrentEntry());
  },

  updateElement: function(selectedElement) {
    if (this.options.updateElement) {
      this.options.updateElement(selectedElement);
      return;
    }
    var value =3D '';
    if (this.options.select) {
      var nodes =3D $(selectedElement).select('.' + this.options.select) ||=
 [];
      if(nodes.length>0) value =3D Element.collectTextNodes(nodes[0], this.=
options.select);
    } else
      value =3D Element.collectTextNodesIgnoreClass(selectedElement, 'infor=
mal');

    var bounds =3D this.getTokenBounds();
    if (bounds[0] !=3D -1) {
      var newValue =3D this.element.value.substr(0, bounds[0]);
      var whitespace =3D this.element.value.substr(bounds[0]).match(/^\s+/);
      if (whitespace)
        newValue +=3D whitespace[0];
      this.element.value =3D newValue + value + this.element.value.substr(b=
ounds[1]);
    } else {
      this.element.value =3D value;
    }
    this.oldElementValue =3D this.element.value;
    this.element.focus();

    if (this.options.afterUpdateElement)
      this.options.afterUpdateElement(this.element, selectedElement);
  },

  updateChoices: function(choices) {
    if(!this.changed && this.hasFocus) {
      this.update.innerHTML =3D choices;
      Element.cleanWhitespace(this.update);
      Element.cleanWhitespace(this.update.down());

      if(this.update.firstChild && this.update.down().childNodes) {
        this.entryCount =3D
          this.update.down().childNodes.length;
        for (var i =3D 0; i < this.entryCount; i++) {
          var entry =3D this.getEntry(i);
          entry.autocompleteIndex =3D i;
          this.addObservers(entry);
        }
      } else {
        this.entryCount =3D 0;
      }

      this.stopIndicator();
      this.index =3D 0;

      if(this.entryCount=3D=3D1 && this.options.autoSelect) {
        this.selectEntry();
        this.hide();
      } else {
        this.render();
      }
    }
  },

  addObservers: function(element) {
    Event.observe(element, "mouseover", this.onHover.bindAsEventListener(th=
is));
    Event.observe(element, "click", this.onClick.bindAsEventListener(this));
  },

  onObserverEvent: function() {
    this.changed =3D false;
    this.tokenBounds =3D null;
    if(this.getToken().length>=3Dthis.options.minChars) {
      this.getUpdatedChoices();
    } else {
      this.active =3D false;
      this.hide();
    }
    this.oldElementValue =3D this.element.value;
  },

  getToken: function() {
    var bounds =3D this.getTokenBounds();
    return this.element.value.substring(bounds[0], bounds[1]).strip();
  },

  getTokenBounds: function() {
    if (null !=3D this.tokenBounds) return this.tokenBounds;
    var value =3D this.element.value;
    if (value.strip().empty()) return [-1, 0];
    var diff =3D arguments.callee.getFirstDifferencePos(value, this.oldElem=
entValue);
    var offset =3D (diff =3D=3D this.oldElementValue.length ? 1 : 0);
    var prevTokenPos =3D -1, nextTokenPos =3D value.length;
    var tp;
    for (var index =3D 0, l =3D this.options.tokens.length; index < l; ++in=
dex) {
      tp =3D value.lastIndexOf(this.options.tokens[index], diff + offset -=
 1);
      if (tp > prevTokenPos) prevTokenPos =3D tp;
      tp =3D value.indexOf(this.options.tokens[index], diff + offset);
      if (-1 !=3D tp && tp < nextTokenPos) nextTokenPos =3D tp;
    }
    return (this.tokenBounds =3D [prevTokenPos + 1, nextTokenPos]);
  }
});

Autocompleter.Base.prototype.getTokenBounds.getFirstDifferencePos =3D funct=
ion(newS, oldS) {
  var boundary =3D Math.min(newS.length, oldS.length);
  for (var index =3D 0; index < boundary; ++index)
    if (newS[index] !=3D oldS[index])
      return index;
  return boundary;
};

Ajax.Autocompleter =3D Class.create(Autocompleter.Base, {
  initialize: function(element, update, url, options) {
    this.baseInitialize(element, update, options);
    this.options.asynchronous  =3D true;
    this.options.onComplete    =3D this.onComplete.bind(this);
    this.options.defaultParams =3D this.options.parameters || null;
    this.url                   =3D url;
  },

  getUpdatedChoices: function() {
    this.startIndicator();

    var entry =3D encodeURIComponent(this.options.paramName) + '=3D' +
      encodeURIComponent(this.getToken());

    this.options.parameters =3D this.options.callback ?
      this.options.callback(this.element, entry) : entry;

    if(this.options.defaultParams)
      this.options.parameters +=3D '&' + this.options.defaultParams;

    new Ajax.Request(this.url, this.options);
  },

  onComplete: function(request) {
    this.updateChoices(request.responseText);
  }
});

// The local array autocompleter. Used when you'd prefer to
// inject an array of autocompletion options into the page, rather
// than sending out Ajax queries, which can be quite slow sometimes.
//
// The constructor takes four parameters. The first two are, as usual,
// the id of the monitored textbox, and id of the autocompletion menu.
// The third is the array you want to autocomplete from, and the fourth
// is the options block.
//
// Extra local autocompletion options:
// - choices - How many autocompletion choices to offer
//
// - partialSearch - If false, the autocompleter will match entered
//                    text only at the beginning of strings in the
//                    autocomplete array. Defaults to true, which will
//                    match text at the beginning of any *word* in the
//                    strings in the autocomplete array. If you want to
//                    search anywhere in the string, additionally set
//                    the option fullSearch to true (default: off).
//
// - fullSsearch - Search anywhere in autocomplete array strings.
//
// - partialChars - How many characters to enter before triggering
//                   a partial match (unlike minChars, which defines
//                   how many characters are required to do any match
//                   at all). Defaults to 2.
//
// - ignoreCase - Whether to ignore case when autocompleting.
//                 Defaults to true.
//
// It's possible to pass in a custom function as the 'selector'
// option, if you prefer to write your own autocompletion logic.
// In that case, the other options above will not apply unless
// you support them.

Autocompleter.Local =3D Class.create(Autocompleter.Base, {
  initialize: function(element, update, array, options) {
    this.baseInitialize(element, update, options);
    this.options.array =3D array;
  },

  getUpdatedChoices: function() {
    this.updateChoices(this.options.selector(this));
  },

  setOptions: function(options) {
    this.options =3D Object.extend({
      choices: 10,
      partialSearch: true,
      partialChars: 2,
      ignoreCase: true,
      fullSearch: false,
      selector: function(instance) {
        var ret       =3D []; // Beginning matches
        var partial   =3D []; // Inside matches
        var entry     =3D instance.getToken();
        var count     =3D 0;

        for (var i =3D 0; i < instance.options.array.length &&
          ret.length < instance.options.choices ; i++) {

          var elem =3D instance.options.array[i];
          var foundPos =3D instance.options.ignoreCase ?
            elem.toLowerCase().indexOf(entry.toLowerCase()) :
            elem.indexOf(entry);

          while (foundPos !=3D -1) {
            if (foundPos =3D=3D 0 && elem.length !=3D entry.length) {
              ret.push("<li><strong>" + elem.substr(0, entry.length) + "</s=
trong>" +
                elem.substr(entry.length) + "</li>");
              break;
            } else if (entry.length >=3D instance.options.partialChars &&
              instance.options.partialSearch && foundPos !=3D -1) {
              if (instance.options.fullSearch || /\s/.test(elem.substr(foun=
dPos-1,1))) {
                partial.push("<li>" + elem.substr(0, foundPos) + "<strong>"=
 +
                  elem.substr(foundPos, entry.length) + "</strong>" + elem.=
substr(
                  foundPos + entry.length) + "</li>");
                break;
              }
            }

            foundPos =3D instance.options.ignoreCase ?
              elem.toLowerCase().indexOf(entry.toLowerCase(), foundPos + 1)=
 :
              elem.indexOf(entry, foundPos + 1);

          }
        }
        if (partial.length)
          ret =3D ret.concat(partial.slice(0, instance.options.choices - re=
t.length));
        return "<ul>" + ret.join('') + "</ul>";
      }
    }, options || { });
  }
});

// AJAX in-place editor and collection editor
// Full rewrite by Christophe Porteneuve <tdd@tddsworld.com> (April 2007).

// Use this if you notice weird scrolling problems on some browsers,
// the DOM might be a bit confused when this gets called so do this
// waits 1 ms (with setTimeout) until it does the activation
Field.scrollFreeActivate =3D function(field) {
  setTimeout(function() {
    Field.activate(field);
  }, 1);
};

Ajax.InPlaceEditor =3D Class.create({
  initialize: function(element, url, options) {
    this.url =3D url;
    this.element =3D element =3D $(element);
    this.prepareOptions();
    this._controls =3D { };
    arguments.callee.dealWithDeprecatedOptions(options); // DEPRECATION LAY=
ER!!!
    Object.extend(this.options, options || { });
    if (!this.options.formId && this.element.id) {
      this.options.formId =3D this.element.id + '-inplaceeditor';
      if ($(this.options.formId))
        this.options.formId =3D '';
    }
    if (this.options.externalControl)
      this.options.externalControl =3D $(this.options.externalControl);
    if (!this.options.externalControl)
      this.options.externalControlOnly =3D false;
    this._originalBackground =3D this.element.getStyle('background-color')=
 || 'transparent';
    this.element.title =3D this.options.clickToEditText;
    this._boundCancelHandler =3D this.handleFormCancellation.bind(this);
    this._boundComplete =3D (this.options.onComplete || Prototype.emptyFunc=
tion).bind(this);
    this._boundFailureHandler =3D this.handleAJAXFailure.bind(this);
    this._boundSubmitHandler =3D this.handleFormSubmission.bind(this);
    this._boundWrapperHandler =3D this.wrapUp.bind(this);
    this.registerListeners();
  },
  checkForEscapeOrReturn: function(e) {
    if (!this._editing || e.ctrlKey || e.altKey || e.shiftKey) return;
    if (Event.KEY_ESC =3D=3D e.keyCode)
      this.handleFormCancellation(e);
    else if (Event.KEY_RETURN =3D=3D e.keyCode)
      this.handleFormSubmission(e);
  },
  createControl: function(mode, handler, extraClasses) {
    var control =3D this.options[mode + 'Control'];
    var text =3D this.options[mode + 'Text'];
    if ('button' =3D=3D control) {
      var btn =3D document.createElement('input');
      btn.type =3D 'submit';
      btn.value =3D text;
      btn.className =3D 'editor_' + mode + '_button';
      if ('cancel' =3D=3D mode)
        btn.onclick =3D this._boundCancelHandler;
      this._form.appendChild(btn);
      this._controls[mode] =3D btn;
    } else if ('link' =3D=3D control) {
      var link =3D document.createElement('a');
      link.href =3D '#';
      link.appendChild(document.createTextNode(text));
      link.onclick =3D 'cancel' =3D=3D mode ? this._boundCancelHandler : th=
is._boundSubmitHandler;
      link.className =3D 'editor_' + mode + '_link';
      if (extraClasses)
        link.className +=3D ' ' + extraClasses;
      this._form.appendChild(link);
      this._controls[mode] =3D link;
    }
  },
  createEditField: function() {
    var text =3D (this.options.loadTextURL ? this.options.loadingText : thi=
s.getText());
    var fld;
    if (1 >=3D this.options.rows && !/\r|\n/.test(this.getText())) {
      fld =3D document.createElement('input');
      fld.type =3D 'text';
      var size =3D this.options.size || this.options.cols || 0;
      if (0 < size) fld.size =3D size;
    } else {
      fld =3D document.createElement('textarea');
      fld.rows =3D (1 >=3D this.options.rows ? this.options.autoRows : this=
.options.rows);
      fld.cols =3D this.options.cols || 40;
    }
    fld.name =3D this.options.paramName;
    fld.value =3D text; // No HTML breaks conversion anymore
    fld.className =3D 'editor_field';
    if (this.options.submitOnBlur)
      fld.onblur =3D this._boundSubmitHandler;
    this._controls.editor =3D fld;
    if (this.options.loadTextURL)
      this.loadExternalText();
    this._form.appendChild(this._controls.editor);
  },
  createForm: function() {
    var ipe =3D this;
    function addText(mode, condition) {
      var text =3D ipe.options['text' + mode + 'Controls'];
      if (!text || condition =3D=3D=3D false) return;
      ipe._form.appendChild(document.createTextNode(text));
    };
    this._form =3D $(document.createElement('form'));
    this._form.id =3D this.options.formId;
    this._form.addClassName(this.options.formClassName);
    this._form.onsubmit =3D this._boundSubmitHandler;
    this.createEditField();
    if ('textarea' =3D=3D this._controls.editor.tagName.toLowerCase())
      this._form.appendChild(document.createElement('br'));
    if (this.options.onFormCustomization)
      this.options.onFormCustomization(this, this._form);
    addText('Before', this.options.okControl || this.options.cancelControl);
    this.createControl('ok', this._boundSubmitHandler);
    addText('Between', this.options.okControl && this.options.cancelControl=
);
    this.createControl('cancel', this._boundCancelHandler, 'editor_cancel');
    addText('After', this.options.okControl || this.options.cancelControl);
  },
  destroy: function() {
    if (this._oldInnerHTML)
      this.element.innerHTML =3D this._oldInnerHTML;
    this.leaveEditMode();
    this.unregisterListeners();
  },
  enterEditMode: function(e) {
    if (this._saving || this._editing) return;
    this._editing =3D true;
    this.triggerCallback('onEnterEditMode');
    if (this.options.externalControl)
      this.options.externalControl.hide();
    this.element.hide();
    this.createForm();
    this.element.parentNode.insertBefore(this._form, this.element);
    if (!this.options.loadTextURL)
      this.postProcessEditField();
    if (e) Event.stop(e);
  },
  enterHover: function(e) {
    if (this.options.hoverClassName)
      this.element.addClassName(this.options.hoverClassName);
    if (this._saving) return;
    this.triggerCallback('onEnterHover');
  },
  getText: function() {
    return this.element.innerHTML.unescapeHTML();
  },
  handleAJAXFailure: function(transport) {
    this.triggerCallback('onFailure', transport);
    if (this._oldInnerHTML) {
      this.element.innerHTML =3D this._oldInnerHTML;
      this._oldInnerHTML =3D null;
    }
  },
  handleFormCancellation: function(e) {
    this.wrapUp();
    if (e) Event.stop(e);
  },
  handleFormSubmission: function(e) {
    var form =3D this._form;
    var value =3D $F(this._controls.editor);
    this.prepareSubmission();
    var params =3D this.options.callback(form, value) || '';
    if (Object.isString(params))
      params =3D params.toQueryParams();
    params.editorId =3D this.element.id;
    if (this.options.htmlResponse) {
      var options =3D Object.extend({ evalScripts: true }, this.options.aja=
xOptions);
      Object.extend(options, {
        parameters: params,
        onComplete: this._boundWrapperHandler,
        onFailure: this._boundFailureHandler
      });
      new Ajax.Updater({ success: this.element }, this.url, options);
    } else {
      var options =3D Object.extend({ method: 'get' }, this.options.ajaxOpt=
ions);
      Object.extend(options, {
        parameters: params,
        onComplete: this._boundWrapperHandler,
        onFailure: this._boundFailureHandler
      });
      new Ajax.Request(this.url, options);
    }
    if (e) Event.stop(e);
  },
  leaveEditMode: function() {
    this.element.removeClassName(this.options.savingClassName);
    this.removeForm();
    this.leaveHover();
    this.element.style.backgroundColor =3D this._originalBackground;
    this.element.show();
    if (this.options.externalControl)
      this.options.externalControl.show();
    this._saving =3D false;
    this._editing =3D false;
    this._oldInnerHTML =3D null;
    this.triggerCallback('onLeaveEditMode');
  },
  leaveHover: function(e) {
    if (this.options.hoverClassName)
      this.element.removeClassName(this.options.hoverClassName);
    if (this._saving) return;
    this.triggerCallback('onLeaveHover');
  },
  loadExternalText: function() {
    this._form.addClassName(this.options.loadingClassName);
    this._controls.editor.disabled =3D true;
    var options =3D Object.extend({ method: 'get' }, this.options.ajaxOptio=
ns);
    Object.extend(options, {
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        this._form.removeClassName(this.options.loadingClassName);
        var text =3D transport.responseText;
        if (this.options.stripLoadedTextTags)
          text =3D text.stripTags();
        this._controls.editor.value =3D text;
        this._controls.editor.disabled =3D false;
        this.postProcessEditField();
      }.bind(this),
      onFailure: this._boundFailureHandler
    });
    new Ajax.Request(this.options.loadTextURL, options);
  },
  postProcessEditField: function() {
    var fpc =3D this.options.fieldPostCreation;
    if (fpc)
      $(this._controls.editor)['focus' =3D=3D fpc ? 'focus' : 'activate']();
  },
  prepareOptions: function() {
    this.options =3D Object.clone(Ajax.InPlaceEditor.DefaultOptions);
    Object.extend(this.options, Ajax.InPlaceEditor.DefaultCallbacks);
    [this._extraDefaultOptions].flatten().compact().each(function(defs) {
      Object.extend(this.options, defs);
    }.bind(this));
  },
  prepareSubmission: function() {
    this._saving =3D true;
    this.removeForm();
    this.leaveHover();
    this.showSaving();
  },
  registerListeners: function() {
    this._listeners =3D { };
    var listener;
    $H(Ajax.InPlaceEditor.Listeners).each(function(pair) {
      listener =3D this[pair.value].bind(this);
      this._listeners[pair.key] =3D listener;
      if (!this.options.externalControlOnly)
        this.element.observe(pair.key, listener);
      if (this.options.externalControl)
        this.options.externalControl.observe(pair.key, listener);
    }.bind(this));
  },
  removeForm: function() {
    if (!this._form) return;
    this._form.remove();
    this._form =3D null;
    this._controls =3D { };
  },
  showSaving: function() {
    this._oldInnerHTML =3D this.element.innerHTML;
    this.element.innerHTML =3D this.options.savingText;
    this.element.addClassName(this.options.savingClassName);
    this.element.style.backgroundColor =3D this._originalBackground;
    this.element.show();
  },
  triggerCallback: function(cbName, arg) {
    if ('function' =3D=3D typeof this.options[cbName]) {
      this.options[cbName](this, arg);
    }
  },
  unregisterListeners: function() {
    $H(this._listeners).each(function(pair) {
      if (!this.options.externalControlOnly)
        this.element.stopObserving(pair.key, pair.value);
      if (this.options.externalControl)
        this.options.externalControl.stopObserving(pair.key, pair.value);
    }.bind(this));
  },
  wrapUp: function(transport) {
    this.leaveEditMode();
    // Can't use triggerCallback due to backward compatibility: requires
    // binding + direct element
    this._boundComplete(transport, this.element);
  }
});

Object.extend(Ajax.InPlaceEditor.prototype, {
  dispose: Ajax.InPlaceEditor.prototype.destroy
});

Ajax.InPlaceCollectionEditor =3D Class.create(Ajax.InPlaceEditor, {
  initialize: function($super, element, url, options) {
    this._extraDefaultOptions =3D Ajax.InPlaceCollectionEditor.DefaultOptio=
ns;
    $super(element, url, options);
  },

  createEditField: function() {
    var list =3D document.createElement('select');
    list.name =3D this.options.paramName;
    list.size =3D 1;
    this._controls.editor =3D list;
    this._collection =3D this.options.collection || [];
    if (this.options.loadCollectionURL)
      this.loadCollection();
    else
      this.checkForExternalText();
    this._form.appendChild(this._controls.editor);
  },

  loadCollection: function() {
    this._form.addClassName(this.options.loadingClassName);
    this.showLoadingText(this.options.loadingCollectionText);
    var options =3D Object.extend({ method: 'get' }, this.options.ajaxOptio=
ns);
    Object.extend(options, {
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        var js =3D transport.responseText.strip();
        if (!/^\[.*\]$/.test(js)) // TODO: improve sanity check
          throw('Server returned an invalid collection representation.');
        this._collection =3D eval(js);
        this.checkForExternalText();
      }.bind(this),
      onFailure: this.onFailure
    });
    new Ajax.Request(this.options.loadCollectionURL, options);
  },

  showLoadingText: function(text) {
    this._controls.editor.disabled =3D true;
    var tempOption =3D this._controls.editor.firstChild;
    if (!tempOption) {
      tempOption =3D document.createElement('option');
      tempOption.value =3D '';
      this._controls.editor.appendChild(tempOption);
      tempOption.selected =3D true;
    }
    tempOption.update((text || '').stripScripts().stripTags());
  },

  checkForExternalText: function() {
    this._text =3D this.getText();
    if (this.options.loadTextURL)
      this.loadExternalText();
    else
      this.buildOptionList();
  },

  loadExternalText: function() {
    this.showLoadingText(this.options.loadingText);
    var options =3D Object.extend({ method: 'get' }, this.options.ajaxOptio=
ns);
    Object.extend(options, {
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),
      onComplete: Prototype.emptyFunction,
      onSuccess: function(transport) {
        this._text =3D transport.responseText.strip();
        this.buildOptionList();
      }.bind(this),
      onFailure: this.onFailure
    });
    new Ajax.Request(this.options.loadTextURL, options);
  },

  buildOptionList: function() {
    this._form.removeClassName(this.options.loadingClassName);
    this._collection =3D this._collection.map(function(entry) {
      return 2 =3D=3D=3D entry.length ? entry : [entry, entry].flatten();
    });
    var marker =3D ('value' in this.options) ? this.options.value : this._t=
ext;
    var textFound =3D this._collection.any(function(entry) {
      return entry[0] =3D=3D marker;
    }.bind(this));
    this._controls.editor.update('');
    var option;
    this._collection.each(function(entry, index) {
      option =3D document.createElement('option');
      option.value =3D entry[0];
      option.selected =3D textFound ? entry[0] =3D=3D marker : 0 =3D=3D ind=
ex;
      option.appendChild(document.createTextNode(entry[1]));
      this._controls.editor.appendChild(option);
    }.bind(this));
    this._controls.editor.disabled =3D false;
    Field.scrollFreeActivate(this._controls.editor);
  }
});

//**** DEPRECATION LAYER FOR InPlace[Collection]Editor! ****
//**** This only  exists for a while,  in order to  let ****
//**** users adapt to  the new API.  Read up on the new ****
//**** API and convert your code to it ASAP!            ****

Ajax.InPlaceEditor.prototype.initialize.dealWithDeprecatedOptions =3D funct=
ion(options) {
  if (!options) return;
  function fallback(name, expr) {
    if (name in options || expr =3D=3D=3D undefined) return;
    options[name] =3D expr;
  };
  fallback('cancelControl', (options.cancelLink ? 'link' : (options.cancelB=
utton ? 'button' :
    options.cancelLink =3D=3D options.cancelButton =3D=3D false ? false :=
 undefined)));
  fallback('okControl', (options.okLink ? 'link' : (options.okButton ? 'but=
ton' :
    options.okLink =3D=3D options.okButton =3D=3D false ? false : undefined=
)));
  fallback('highlightColor', options.highlightcolor);
  fallback('highlightEndColor', options.highlightendcolor);
};

Object.extend(Ajax.InPlaceEditor, {
  DefaultOptions: {
    ajaxOptions: { },
    autoRows: 3,                                // Use when multi-line w/=
 rows =3D=3D 1
    cancelControl: 'link',                      // 'link'|'button'|false
    cancelText: 'cancel',
    clickToEditText: 'Click to edit',
    externalControl: null,                      // id|elt
    externalControlOnly: false,
    fieldPostCreation: 'activate',              // 'activate'|'focus'|false
    formClassName: 'inplaceeditor-form',
    formId: null,                               // id|elt
    highlightColor: '#ffff99',
    highlightEndColor: '#ffffff',
    hoverClassName: '',
    htmlResponse: true,
    loadingClassName: 'inplaceeditor-loading',
    loadingText: 'Loading...',
    okControl: 'button',                        // 'link'|'button'|false
    okText: 'ok',
    paramName: 'value',
    rows: 1,                                    // If 1 and multi-line, use=
s autoRows
    savingClassName: 'inplaceeditor-saving',
    savingText: 'Saving...',
    size: 0,
    stripLoadedTextTags: false,
    submitOnBlur: false,
    textAfterControls: '',
    textBeforeControls: '',
    textBetweenControls: ''
  },
  DefaultCallbacks: {
    callback: function(form) {
      return Form.serialize(form);
    },
    onComplete: function(transport, element) {
      // For backward compatibility, this one is bound to the IPE, and pass=
es
      // the element directly.  It was too often customized, so we don't br=
eak it.
      new Effect.Highlight(element, {
        startcolor: this.options.highlightColor, keepBackgroundImage: true=
 });
    },
    onEnterEditMode: null,
    onEnterHover: function(ipe) {
      ipe.element.style.backgroundColor =3D ipe.options.highlightColor;
      if (ipe._effect)
        ipe._effect.cancel();
    },
    onFailure: function(transport, ipe) {
      alert('Error communication with the server: ' + transport.responseTex=
t.stripTags());
    },
    onFormCustomization: null, // Takes the IPE and its generated form, aft=
er editor, before controls.
    onLeaveEditMode: null,
    onLeaveHover: function(ipe) {
      ipe._effect =3D new Effect.Highlight(ipe.element, {
        startcolor: ipe.options.highlightColor, endcolor: ipe.options.highl=
ightEndColor,
        restorecolor: ipe._originalBackground, keepBackgroundImage: true
      });
    }
  },
  Listeners: {
    click: 'enterEditMode',
    keydown: 'checkForEscapeOrReturn',
    mouseover: 'enterHover',
    mouseout: 'leaveHover'
  }
});

Ajax.InPlaceCollectionEditor.DefaultOptions =3D {
  loadingCollectionText: 'Loading options...'
};

// Delayed observer, like Form.Element.Observer,
// but waits for delay after last key input
// Ideal for live-search fields

Form.Element.DelayedObserver =3D Class.create({
  initialize: function(element, delay, callback) {
    this.delay     =3D delay || 0.5;
    this.element   =3D $(element);
    this.callback  =3D callback;
    this.timer     =3D null;
    this.lastValue =3D $F(this.element);
    Event.observe(this.element,'keyup',this.delayedListener.bindAsEventList=
ener(this));
  },
  delayedListener: function(event) {
    if(this.lastValue =3D=3D $F(this.element)) return;
    if(this.timer) clearTimeout(this.timer);
    this.timer =3D setTimeout(this.onTimerEvent.bind(this), this.delay * 10=
00);
    this.lastValue =3D $F(this.element);
  },
  onTimerEvent: function() {
    this.timer =3D null;
    this.callback(this.element, $F(this.element));
  }
});
------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: text/javascript
Content-Transfer-Encoding: quoted-printable
Content-Location: http://dev.savetogether.org/javascripts/application.js?1255380904

/* redMine - project management software
   Copyright (C) 2006-2008  Jean-Philippe Lang */

function checkAll (id, checked) {
	var els =3D Element.descendants(id);
	for (var i =3D 0; i < els.length; i++) {
    if (els[i].disabled=3D=3Dfalse) {
      els[i].checked =3D checked;
    }
	}
}

function toggleCheckboxesBySelector(selector) {
	boxes =3D $$(selector);
	var all_checked =3D true;
	for (i =3D 0; i < boxes.length; i++) { if (boxes[i].checked =3D=3D false)=
 { all_checked =3D false; } }
	for (i =3D 0; i < boxes.length; i++) { boxes[i].checked =3D !all_checked; }
}

function showAndScrollTo(id, focus) {
	Element.show(id);
	if (focus!=3Dnull) { Form.Element.focus(focus); }
	Element.scrollTo(id);
}

var fileFieldCount =3D 1;

function addFileField() {
    if (fileFieldCount >=3D 10) return false
    fileFieldCount++;
    var f =3D document.createElement("input");
    f.type =3D "file";
    f.name =3D "attachments[" + fileFieldCount + "][file]";
    f.size =3D 30;
    var d =3D document.createElement("input");
    d.type =3D "text";
    d.name =3D "attachments[" + fileFieldCount + "][description]";
    d.size =3D 60;
   =20
    p =3D document.getElementById("attachments_fields");
    p.appendChild(document.createElement("br"));
    p.appendChild(f);
    p.appendChild(d);
}

function showTab(name) {
    var f =3D $$('div#content .tab-content');
	for(var i=3D0; i<f.length; i++){
		Element.hide(f[i]);
	}
    var f =3D $$('div.tabs a');
	for(var i=3D0; i<f.length; i++){
		Element.removeClassName(f[i], "selected");
	}
	Element.show('tab-content-' + name);
	Element.addClassName('tab-' + name, "selected");
	return false;
}

function setPredecessorFieldsVisibility() {
    relationType =3D $('relation_relation_type');
    if (relationType && relationType.value =3D=3D "precedes") {
        Element.show('predecessor_fields');
    } else {
        Element.hide('predecessor_fields');
    }
}

function promptToRemote(text, param, url) {
    value =3D prompt(text + ':');
    if (value) {
        new Ajax.Request(url + '?' + param + '=3D' + encodeURIComponent(val=
ue), {asynchronous:true, evalScripts:true});
        return false;
    }
}

function collapseScmEntry(id) {
    var els =3D document.getElementsByClassName(id, 'browser');
	for (var i =3D 0; i < els.length; i++) {
	   if (els[i].hasClassName('open')) {
	       collapseScmEntry(els[i].id);
	   }
       Element.hide(els[i]);
    }
    $(id).removeClassName('open');
}

function expandScmEntry(id) {
    var els =3D document.getElementsByClassName(id, 'browser');
	for (var i =3D 0; i < els.length; i++) {
       Element.show(els[i]);
       if (els[i].hasClassName('loaded') && !els[i].hasClassName('collapsed=
')) {
            expandScmEntry(els[i].id);
       }
    }
    $(id).addClassName('open');
}

function scmEntryClick(id) {
    el =3D $(id);
    if (el.hasClassName('open')) {
        collapseScmEntry(id);
        el.addClassName('collapsed');
        return false;
    } else if (el.hasClassName('loaded')) {
        expandScmEntry(id);
        el.removeClassName('collapsed');
        return false;
    }
    if (el.hasClassName('loading')) {
        return false;
    }
    el.addClassName('loading');
    return true;
}

function scmEntryLoaded(id) {
    Element.addClassName(id, 'open');
    Element.addClassName(id, 'loaded');
    Element.removeClassName(id, 'loading');
}

function randomKey(size) {
	var chars =3D new Array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9',=
 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',=
 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd',=
 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',=
 't', 'u', 'v', 'w', 'x', 'y', 'z');
	var key =3D '';
	for (i =3D 0; i < size; i++) {
  	key +=3D chars[Math.floor(Math.random() * chars.length)];
	}
	return key;
}

/* shows and hides ajax indicator */
Ajax.Responders.register({
    onCreate: function(){
        if ($('ajax-indicator') && Ajax.activeRequestCount > 0) {
            Element.show('ajax-indicator');
        }
    },
    onComplete: function(){
        if ($('ajax-indicator') && Ajax.activeRequestCount =3D=3D 0) {
            Element.hide('ajax-indicator');
        }
    }
});

------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://dev.savetogether.org/stylesheets/jstoolbar.css?1255380904

.jstEditor {
	padding-left: 0px;
}
.jstEditor textarea, .jstEditor iframe {
  margin: 0;
}

.jstHandle {
	height: 10px;
	font-size: 0.1em;
	cursor: s-resize;
	/*background: transparent url(img/resizer.png) no-repeat 45% 50%;*/
}

.jstElements {
	padding: 3px 3px;
}

.jstElements button {
	margin-right : 6px;
	width : 24px;
	height: 24px;
	padding: 4px;
	border-style: solid;
	border-width: 1px;
	border-color: #ddd;
	background-color : #f7f7f7;
	background-position : 50% 50%;
	background-repeat: no-repeat;
}
.jstElements button:hover {
	border-color : #000;
}
.jstElements button span {
	display : none;=09
}
.jstElements span {
	display : inline;
}

.jstSpacer {
	width : 0px;
	font-size: 1px;
	margin-right: 4px;
}

.jstElements .help { float: right; margin-right: 1em; padding-top: 8px; fon=
t-size: 0.9em; }

/* Buttons
-------------------------------------------------------- */
.jstb_strong {
	background-image: url(../images/jstoolbar/bt_strong.png);
}
.jstb_em {
	background-image: url(../images/jstoolbar/bt_em.png);
}
.jstb_ins {
	background-image: url(../images/jstoolbar/bt_ins.png);
}
.jstb_del {
	background-image: url(../images/jstoolbar/bt_del.png);
}
.jstb_code {
	background-image: url(../images/jstoolbar/bt_code.png);
}
.jstb_h1 {
	background-image: url(../images/jstoolbar/bt_h1.png);
}
.jstb_h2 {
	background-image: url(../images/jstoolbar/bt_h2.png);
}
.jstb_h3 {
	background-image: url(../images/jstoolbar/bt_h3.png);
}
.jstb_ul {
	background-image: url(../images/jstoolbar/bt_ul.png);
}
.jstb_ol {
	background-image: url(../images/jstoolbar/bt_ol.png);
}
.jstb_bq {
	background-image: url(../images/jstoolbar/bt_bq.png);
}
.jstb_unbq {
	background-image: url(../images/jstoolbar/bt_bq_remove.png);
}
.jstb_pre {
	background-image: url(../images/jstoolbar/bt_pre.png);
}
.jstb_link {
	background-image: url(../images/jstoolbar/bt_link.png);
}
.jstb_img {
	background-image: url(../images/jstoolbar/bt_img.png);
}

------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://dev.savetogether.org/stylesheets/scm.css?1255380904


div.changeset-changes ul { margin: 0; padding: 0; }
div.changeset-changes ul > ul { margin-left: 18px; padding: 0; }

li.change {=20
    list-style-type:none;
    background-image: url(../images/bullet_black.png);=20
    background-position: 1px 1px;
    background-repeat: no-repeat;
    padding-top: 1px;
    padding-bottom: 1px;
    padding-left: 20px;
    margin: 0;
}
li.change.folder { background-image: url(../images/folder_open.png); }
li.change.folder.change-A { background-image: url(../images/folder_open_add=
.png); }
li.change.folder.change-M { background-image: url(../images/folder_open_ora=
nge.png); }
li.change.change-A { background-image: url(../images/bullet_add.png); }
li.change.change-M { background-image: url(../images/bullet_orange.png); }
li.change.change-C { background-image: url(../images/bullet_blue.png); }
li.change.change-R { background-image: url(../images/bullet_purple.png); }
li.change.change-D { background-image: url(../images/bullet_delete.png); }

li.change .copied-from { font-style: italic; color: #999; font-size: 0.9em;=
 }
li.change .copied-from:before { content: " - "}

#changes-legend { float: right; font-size: 0.8em; margin: 0; }
#changes-legend li { float: left; background-position: 5px 0; }

table.filecontent { border: 1px solid #ccc;  border-collapse: collapse; wid=
th:98%; }
table.filecontent th { border: 1px solid #ccc; background-color: #eee; }
table.filecontent th.filename {	background-color: #e4e4d4; text-align: left=
; padding: 0.2em;}
table.filecontent tr.spacing th { text-align:center; }
table.filecontent tr.spacing td { height: 0.4em; background: #EAF2F5;}
table.filecontent th.line-num {
    border: 1px solid #d7d7d7;
	font-size: 0.8em;
	text-align: right;
	width: 2%;
	padding-right: 3px;
	color: #999;
}
table.filecontent th.line-num a {
	text-decoration: none;
	color: inherit;
}
table.filecontent td.line-code pre {
    white-space: pre-wrap; /* CSS2.1 compliant */
    white-space: -moz-pre-wrap; /* Mozilla-based browsers */
    white-space: -o-pre-wrap; /* Opera 7+ */
}

/* 12 different colors for the annonate view */
table.annotate tr.bloc-0 {background: #FFFFBF;}
table.annotate tr.bloc-1 {background: #EABFFF;}
table.annotate tr.bloc-2 {background: #BFFFFF;}
table.annotate tr.bloc-3 {background: #FFD9BF;}
table.annotate tr.bloc-4 {background: #E6FFBF;}
table.annotate tr.bloc-5 {background: #BFCFFF;}
table.annotate tr.bloc-6 {background: #FFBFEF;}
table.annotate tr.bloc-7 {background: #FFE6BF;}
table.annotate tr.bloc-8 {background: #FFE680;}
table.annotate tr.bloc-9 {background: #AA80FF;}
table.annotate tr.bloc-10 {background: #FFBFDC;}
table.annotate tr.bloc-11 {background: #BFE4FF;}

table.annotate td.revision {
    text-align: center;
    width: 2%;
    padding-left: 1em;
    background: inherit;
}
   =20
table.annotate td.author {
    text-align: center;
    border-right: 1px solid #d7d7d7;
    white-space: nowrap;
    padding-left: 1em;
    padding-right: 1em;
    width: 3%;
    background: inherit;
    font-size: 90%;
}

table.annotate td.line-code { background-color: #fafafa; }

div.action_M { background: #fd8 }
div.action_D { background: #f88 }
div.action_A { background: #bfb }

/************* Coderay styles *************/

table.CodeRay {
  background-color: #fafafa;
}
.CodeRay pre { margin: 0px }

span.CodeRay { white-space: pre; border: 0px; padding: 2px }

.CodeRay .no { padding: 0px 4px }
.CodeRay .code {  }

ol.CodeRay { font-size: 10pt }
ol.CodeRay li { white-space: pre }

.CodeRay .code pre { overflow: auto }

.CodeRay .debug { color:white ! important; background:blue ! important; }

.CodeRay .af { color:#00C }
.CodeRay .an { color:#007 }
.CodeRay .av { color:#700 }
.CodeRay .aw { color:#C00 }
.CodeRay .bi { color:#509; font-weight:bold }
.CodeRay .c  { color:#666; }

.CodeRay .ch { color:#04D }
.CodeRay .ch .k { color:#04D }
.CodeRay .ch .dl { color:#039 }

.CodeRay .cl { color:#B06; font-weight:bold }
.CodeRay .co { color:#036; font-weight:bold }
.CodeRay .cr { color:#0A0 }
.CodeRay .cv { color:#369 }
.CodeRay .df { color:#099; font-weight:bold }
.CodeRay .di { color:#088; font-weight:bold }
.CodeRay .dl { color:black }
.CodeRay .do { color:#970 }
.CodeRay .ds { color:#D42; font-weight:bold }
.CodeRay .e  { color:#666; font-weight:bold }
.CodeRay .en { color:#800; font-weight:bold }
.CodeRay .er { color:#F00; background-color:#FAA }
.CodeRay .ex { color:#F00; font-weight:bold }
.CodeRay .fl { color:#60E; font-weight:bold }
.CodeRay .fu { color:#06B; font-weight:bold }
.CodeRay .gv { color:#d70; font-weight:bold }
.CodeRay .hx { color:#058; font-weight:bold }
.CodeRay .i  { color:#00D; font-weight:bold }
.CodeRay .ic { color:#B44; font-weight:bold }

.CodeRay .il { background: #eee }
.CodeRay .il .il { background: #ddd }
.CodeRay .il .il .il { background: #ccc }
.CodeRay .il .idl { font-weight: bold; color: #888 }

.CodeRay .in { color:#B2B; font-weight:bold }
.CodeRay .iv { color:#33B }
.CodeRay .la { color:#970; font-weight:bold }
.CodeRay .lv { color:#963 }
.CodeRay .oc { color:#40E; font-weight:bold }
.CodeRay .of { color:#000; font-weight:bold }
.CodeRay .op { }
.CodeRay .pc { color:#038; font-weight:bold }
.CodeRay .pd { color:#369; font-weight:bold }
.CodeRay .pp { color:#579 }
.CodeRay .pt { color:#339; font-weight:bold }
.CodeRay .r  { color:#080; font-weight:bold }

.CodeRay .rx { background-color:#fff0ff }
.CodeRay .rx .k { color:#808 }
.CodeRay .rx .dl { color:#404 }
.CodeRay .rx .mod { color:#C2C }
.CodeRay .rx .fu  { color:#404; font-weight: bold }

.CodeRay .s  { background-color:#fff0f0 }
.CodeRay .s  .s { background-color:#ffe0e0 }
.CodeRay .s  .s  .s { background-color:#ffd0d0 }
.CodeRay .s  .k { color:#D20 }
.CodeRay .s  .dl { color:#710 }

.CodeRay .sh { background-color:#f0fff0 }
.CodeRay .sh .k { color:#2B2 }
.CodeRay .sh .dl { color:#161 }

.CodeRay .sy { color:#A60 }
.CodeRay .sy .k { color:#A60 }
.CodeRay .sy .dl { color:#630 }

.CodeRay .ta { color:#070 }
.CodeRay .tf { color:#070; font-weight:bold }
.CodeRay .ts { color:#D70; font-weight:bold }
.CodeRay .ty { color:#339; font-weight:bold }
.CodeRay .v  { color:#036 }
.CodeRay .xt { color:#444 }

------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://dev.savetogether.org/images/edit.png

iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAALnRFWHRDcmVhdGlvbiBUaW1lAHNh
bS4gNiBqYW52LiAyMDA3IDIxOjEyOjUyICswMTAwFQlKwQAAAAd0SU1FB9gCARQpIJTCtGgAAAAJ
cEhZcwAACvAAAArwAUKsNJgAAAAEZ0FNQQAAsY8L/GEFAAADAFBMVEWlhFK9pZTGxsbOpWvOvXvO
zs7WADHWhGPW1tbehADenErevWve3t7nUhDnc0LnrVLn1nvn5+fvrULvrUrv7+/3WoT3nHv3xq33
zpT3zpz3zq331oz31pT31pz31qX376339/f/pYz/vQD/xgD/xhD/1iH/3in/3t7/50L/50r/51r/
5+//963/97X/98b/987/99b/9+//9/f//87//9b//97//+////f/////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////AAABlithAAABAHRSTlP/////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////8AU/cHJQAA
AHxJREFUeNpj+I8GGPAISHGiCkgpinEiC8ipi4nyIglI6hmIs/EhBCT09TVV2A3hAkC+hrKQIdxQ
CX1dNWVhI7i1Evo6qkrCRgoiIgpgAUMDMy0lfkEeQUGogISZsQAXKwePoAhUC4s8NzMTh6AC3OkM
jEw8Cih+QfCw+RYAP2izU2J5CTYAAAAASUVORK5CYII=
------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://dev.savetogether.org/images/locked.png

iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAALnRFWHRDcmVhdGlvbiBUaW1lAGx1
bi4gMTcgbWFycyAyMDA4IDEyOjA3OjAyICswMTAww+1OhgAAAAd0SU1FB9gFBA4aI23vimYAAAAJ
cEhZcwAACvAAAArwAUKsNJgAAAAEZ0FNQQAAsY8L/GEFAAADAFBMVEWSfWabhWvft2veuG7lwWno
xG7pynXpy3m0tLTs0oLx14nz25P136P33qPw3bjx3rny3rr145n14Z314J/35rHy4Lzy4b7W1tb0
5ML05cL25cL05sT158X26cb26sj368v37s337s/67sz47tD78tf89NL89NT88tz88t799uH///8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAADP5QLEAAAAK3RSTlP/////////////////////////////////////////////
//////////8AI8mn0AAAAHlJREFUeNp1zskSgjAQBNA4BLJIImExKiqyR///AwHDVKFV9KGn+p2G
fP5C/LGcc7uBZa/iYRkzbgHrCxow2gPUbTe+nStLWOEljipXSlwQKiblIY7ZGeEZSUmyLCoQHqEx
qTFhgnCnAAEAPe3C9db3Q9NoDTuP/WQCJ2Uaoo8aP4wAAAAASUVORK5CYII=
------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://dev.savetogether.org/images/move.png

iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAALnRFWHRDcmVhdGlvbiBUaW1lAGRp
bS4gNyBqYW52LiAyMDA3IDExOjQ3OjIwICswMTAw3zMxmQAAAAd0SU1FB9cBBwowLxpYGUIAAAAJ
cEhZcwAACxIAAAsSAdLdfvwAAAAEZ0FNQQAAsY8L/GEFAAAAclBMVEX/AAD////39/fv7+/n5+fv
7+fn3s7OvZzv597OvZTezq339+/WxpzWxqXWxpTWxozWvZTevXvWvXvexqXn3sbWtWvevWPetWvW
rWPWrVrWrVLerVrezrXWtXPWpVLepUL37+/OrWvWlCHOlDnWtXvOvYxhPBNhAAAAAXRSTlMAQObY
ZgAAAH1JREFUeNplj9sSgjAMRJNUivaigETAKkXQ//9FQCyM5TxkJjvZnQ3AwhEiPioS3sOf0slX
P1gKq1bPpvW+DTdk6ubunKsfP6HkGzNXvFpMXlzLLDc6OM4XOalZAmuEnabdmqGa0/XWAeUprp3G
jySSZhAXBwlx+CIEIewZAVY4BQ42KeiuAAAAAElFTkSuQmCC
------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://dev.savetogether.org/images/delete.png

iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAALHRFWHRDcmVhdGlvbiBUaW1lAHNh
bS4gNSBtYWkgMjAwNyAxMDoyMTo0NSArMDEwMI5DjFAAAAAHdElNRQfYAgEUJCbID28QAAAACXBI
WXMAAArwAAAK8AFCrDSYAAAABGdBTUEAALGPC/xhBQAAAwBQTFRF/wAA9/f3jIyc5+fn////AAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAB4XkuAAAAAF0Uk5TAEDm2GYAAAA8SURBVHjajY5JDgAwCAJB+/8316Ril0PjcGKC
iUAXu4pQH8KegSbUxFg3GXwFI4egeaSEZ7ZYlGB+QbSYkK8BEc7Zpd0AAAAASUVORK5CYII=
------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://dev.savetogether.org/images/history.png

iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAL3RFWHRDcmVhdGlvbiBUaW1lAGx1
bi4gMjQgc2VwdC4gMjAwNyAwMDoxNzo0NCArMDEwMBo35PIAAAAHdElNRQfXCRcWEyqhztzmAAAA
CXBIWXMAAAsSAAALEgHS3X78AAAABGdBTUEAALGPC/xhBQAAACRQTFRF/wAA////5+fv9/f37+/v
5+fn1tbe3t7n7+/33t7e1tbW5+/v+g9CIgAAAAF0Uk5TAEDm2GYAAABZSURBVHjarc5BDoBACANA
lrawq///rySKxosnOZAwIQWz/4qoBvYIegHZQIGA9t5QEqQ0L/AQp7Z0zhOwIumKpc4YGVkpsbxD
hyJhs9geqbOIG2z4+7GvOgC71QGZ+7hyrAAAAABJRU5ErkJggg==
------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://dev.savetogether.org/images/external.png

iVBORw0KGgoAAAANSUhEUgAAAAkAAAAJCAMAAADXT/YiAAAAB3RJTUUH1wkHEh8iVLDkmwAAAAlw
SFlzAAALEgAACxIB0t1+/AAAAARnQU1BAACxjwv8YQUAAAAMUExURQAAAM7WxrW9tZylnHxvHPoA
AAABdFJOUwBA5thmAAAALElEQVR42k2MgQkAMAzCUvP/z+sGHVWQICJQUVNA4OU0/sb2lYsy1MvZ
rbcDEJgAWmUCs44AAAAASUVORK5CYII=
------=_NextPart_000_0000_7AEBEA58.A381E38D
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://dev.savetogether.org/images/loading.gif

R0lGODlhEAAQAMQAAP///+7u7t3d3bu7u6qqqpmZmYiIiHd3d2ZmZlVVVURERDMzMyIiIhEREQAR
AAAAAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05F
VFNDQVBFMi4wAwEAAAAh+QQFBwAQACwAAAAAEAAQAAAFdyAkQgGJJOWoQgIjBM8jkKsoPEzgyMGs
CjPDw7ADpkQBxRDmSCRetpRA6Rj4kFBkgLC4IlUGhbNQIwXOYYWCXDufzYPDMaoKGBoKb886OjAK
dgZAAgQkfCwzAgsDBAUCgl8jAQkHEAVkAoA1AgczlyIDczUDA2UhACH5BAUHABAALAAAAAAPABAA
AAVjICSO0IGIATkqIiMKDaGKC8Q49jPMYsE0hQdrlABCGgvT45FKiRKQhWA0mPKGPAgBcTjsspBC
AoH4gl+FmXNEUEBVAYHToJAVZK/XWoQQDAgBZioHaX8igigFKYYQVlkCjiMhACH5BAUHABAALAAA
AAAQAA8AAAVgICSOUGGQqIiIChMESyo6CdQGdRqUENESI8FAdFgAFwqDISYwPB4CVSMnEhSej+Fo
gNhtHyfRQFmIol5owmEta/fcKITB6y4choMBmk7yGgSAEAJ8JAVDgQFmKUCCZnwhACH5BAUHABAA
LAAAAAAQABAAAAViICSOYkGe4hFAiSImAwotB+si6Co2QxvjAYHIgBAqDoWCK2Bq6A40iA4yYMgg
NZKwGFgVCAQZotFwwJIF4QnxaC9IsZNgLtAJDKbraJCGzPVSIgEDXVNXA0JdgH6ChoCKKCEAIfkE
BQcAEAAsAAAAABAADgAABUkgJI7QcZComIjPw6bs2kINLB5uW9Bo0gyQx8LkKgVHiccKVdyRlqjF
SAApOKOtR810StVeU9RAmLqOxi0qRG3LptikAVQEh4UAACH5BAUHABAALAAAAAAQABAAAAVxICSO
0DCQKBQQonGIh5AGB2sYkMHIqYAIN0EDRxoQZIaC6bAoMRSiwMAwCIwCggRkwRMJWKSAomBVCc5l
UiGRUBjO6FSBwWggwijBooDCdiFfIlBRAlYBZQ0PWRANaSkED1oQYHgjDA8nM3kPfCmejiEAIfkE
BQcAEAAsAAAAABAAEAAABWAgJI6QIJCoOIhFwabsSbiFAotGMEMKgZoB3cBUQIgURpFgmEI0EqjA
CYXwiYJBGAGBgGIDWsVicbiNEgSsGbKCIMCwA4IBCRgXt8bDACkvYQF6U1OADg8mDlaACQtwJCEA
IfkEBQcAEAAsAAABABAADwAABV4gJEKCOAwiMa4Q2qIDwq4wiriBmItCCREHUsIwCgh2q8MiyEKO
DK7ZbHCoqqSjWGKI1d2kRp+RAWGyHg+DQUEmKliGx4HBKECIMwG61AgssAQPKA19EAxRKz4QCVIh
ACH5BAUHABAALAAAAAAQABAAAAVjICSOUBCQqHhCgiAOKyqcLVvEZOC2geGiK5NpQBAZCilgAYFM
ogo/J0lgqEpHgoO2+GIMUL6p4vFojhQNg8rxWLgYBQJCASkwEKLC17hYFJtRIwwBfRAJDk4Obwsi
dEkrWkkhACH5BAUHABAALAAAAQAQAA8AAAVcICSOUGAGAqmKpjis6vmuqSrUxQyPhDEEtpUOgmgY
ETCCcrB4OBWwQsGHEhQatVFhB/mNAojFVsQgBhgKpSHRTRxEhGwhoRg0CCXYAkKHHPZCZRAKUERZ
MAYGMCEAIfkEBQcAEAAsAAABABAADwAABV0gJI4kFJToGAilwKLCST6PUcrB8A70844CXenwILRk
IoYyBRk4BQlHo3FIOQmvAEGBMpYSop/IgPBCFpCqIuEsIESHgkgoJxwQAjSzwb1DClwwgQhgAVVM
IgVyKCEAIfkECQcAEAAsAAAAABAAEAAABWQgJI5kSQ6NYK7Dw6xr8hCw+ELC85hCIAq3Am0U6JUK
jkHJNzIsFAqDqShQHRhY6bKqgvgGCZOSFDhAUiWCYQwJSxGHKqGAE/5EqIHBjOgyRQELCBB7EAQH
fySDhGYQdDWGQyUhADs=
------=_NextPart_000_0000_7AEBEA58.A381E38D--
